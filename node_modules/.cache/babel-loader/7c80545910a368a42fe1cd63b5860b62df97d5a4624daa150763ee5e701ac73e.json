{"ast":null,"code":"var _jsxFileName = \"/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo, useMemo, Suspense, lazy } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Import our Chat UI components instead of the old NewUI\nimport { ChatHeader, ChatContainer, ChatMessages, ChatMessage, ChatInput, SettingsButton, CalendarSettings, WelcomeMessage } from './ChatUI';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n// Define the script at global level to ensure the functions are globally accessible\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setupGlobalFunctions = () => {\n  if (typeof window !== 'undefined') {\n    // Create a custom event for scheduling breaks\n    window.scheduleBreak = (startTime, endTime) => {\n      console.log(\"scheduleBreak called with:\", startTime, endTime);\n      // Dispatch a custom event that the React component can listen for\n      window.dispatchEvent(new CustomEvent('scheduleCalendarItem', {\n        detail: {\n          type: 'break',\n          startTime,\n          endTime\n        }\n      }));\n    };\n\n    // Create a custom event for scheduling tasks  \n    window.scheduleTask = (startTime, endTime) => {\n      console.log(\"scheduleTask called with:\", startTime, endTime);\n      window.dispatchEvent(new CustomEvent('scheduleCalendarItem', {\n        detail: {\n          type: 'task',\n          startTime,\n          endTime\n        }\n      }));\n    };\n\n    // Log to verify functions are attached\n    console.log(\"Global scheduling functions attached:\", typeof window.scheduleBreak === 'function', typeof window.scheduleTask === 'function');\n  }\n};\n\n// Memoize the renderEventContent function to avoid recreating it on each render\nconst renderEventContent = eventInfo => {\n  var _eventInfo$event$exte, _eventInfo$event$exte2, _eventInfo$event$exte3, _eventInfo$event$exte4;\n  // Determine if this is a suggested slot or existing event\n  const isSuggested = ((_eventInfo$event$exte = eventInfo.event.extendedProps) === null || _eventInfo$event$exte === void 0 ? void 0 : _eventInfo$event$exte.suggestedSlot) === true;\n  const isExisting = ((_eventInfo$event$exte2 = eventInfo.event.extendedProps) === null || _eventInfo$event$exte2 === void 0 ? void 0 : _eventInfo$event$exte2.existingEvent) === true;\n\n  // Format the time more cleanly\n  let timeText = eventInfo.timeText || '';\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n\n  // Get the calendar name if available\n  let calendarName = '';\n  if (isExisting && (_eventInfo$event$exte3 = eventInfo.event.extendedProps) !== null && _eventInfo$event$exte3 !== void 0 && _eventInfo$event$exte3.calendarName) {\n    calendarName = `(${eventInfo.event.extendedProps.calendarName})`;\n  }\n\n  // Get the event title with fallback options\n  const title = eventInfo.event.title || ((_eventInfo$event$exte4 = eventInfo.event.extendedProps) === null || _eventInfo$event$exte4 === void 0 ? void 0 : _eventInfo$event$exte4.summary) || (isSuggested ? 'Suggested Time' : 'Event');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [title, \" \", calendarName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n// Define the Calendar component outside of the main component\nconst CalendarComponent = /*#__PURE__*/memo(_c = ({\n  events,\n  handleEventClick,\n  handleDatesSet,\n  loading,\n  renderEventContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `calendar-container ${loading ? 'loading' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      events: events,\n      eventClick: handleEventClick,\n      eventContent: renderEventContent,\n      height: \"800px\",\n      nowIndicator: true,\n      datesSet: handleDatesSet,\n      slotMinTime: \"07:00:00\",\n      slotMaxTime: \"23:00:00\",\n      eventTimeFormat: {\n        hour: 'numeric',\n        minute: '2-digit',\n        meridiem: 'short'\n      },\n      slotLabelFormat: {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      },\n      allDaySlot: false,\n      eventDisplay: \"block\",\n      eventBackgroundColor: \"#4285f4\",\n      eventBorderColor: \"#3b78e7\",\n      eventTextColor: \"#ffffff\",\n      displayEventTime: true,\n      displayEventEnd: true,\n      forceEventDuration: true,\n      eventMinHeight: 30,\n      lazyFetching: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n});\n_c2 = CalendarComponent;\nCalendarComponent.displayName = 'CalendarComponent';\n\n// The calendar selection component\nconst CalendarSelectionComponent = /*#__PURE__*/memo(_c3 = ({\n  calendars,\n  selected,\n  onSelect,\n  disabled\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Calendars to Monitor:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), calendars.length > 0 ? calendars.map(cal => /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block',\n        margin: '5px 0',\n        padding: '8px',\n        backgroundColor: selected.some(s => s.id === cal.id) ? '#f0f7ff' : 'transparent',\n        borderRadius: '4px',\n        cursor: disabled ? 'not-allowed' : 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selected.some(s => s.id === cal.id),\n        onChange: () => onSelect(cal),\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '8px',\n          color: cal.primary ? '#1a73e8' : 'inherit',\n          fontWeight: cal.primary ? '500' : 'normal'\n        },\n        children: [cal.summary, \" \", cal.primary ? '(Primary)' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, cal.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading calendars...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n});\n_c4 = CalendarSelectionComponent;\nCalendarSelectionComponent.displayName = 'CalendarSelectionComponent';\nfunction NaturalLanguageForm() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  // Add cache for events data\n  const [eventsCache, setEventsCache] = useState({});\n  const [fetchingEvents, setFetchingEvents] = useState(false);\n\n  // Chat-specific state\n  const [chatMessages, setChatMessages] = useState([]);\n  const [showSettings, setShowSettings] = useState(false);\n\n  // Call the setup function on load\n  useEffect(() => {\n    setupGlobalFunctions();\n    // Add welcome message\n    setChatMessages([{\n      sender: 'bot',\n      type: 'welcome'\n    }]);\n  }, []);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Helper function to format date to YYYY-MM-DD\n  const formatDate = date => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  };\n\n  // Helper function to get color for a specific calendar\n  const getCalendarColor = (calendarId, darker = false) => {\n    // Find the calendar in our list\n    const calendar = calendars.find(cal => cal.id === calendarId);\n    if (calendar && calendar.backgroundColor) {\n      // Enhance color vibrancy by ensuring full opacity\n      let color = calendar.backgroundColor;\n\n      // If it's an RGBA color, convert to fully opaque\n      if (color.startsWith('rgba')) {\n        const rgbaPattern = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*[\\d.]+\\s*\\)/;\n        const match = color.match(rgbaPattern);\n        if (match) {\n          color = `rgb(${match[1]}, ${match[2]}, ${match[3]})`;\n        }\n      }\n      if (darker) {\n        // Create a slightly darker version for the border\n        return darkenColor(color, 0.2);\n      }\n      return color;\n    }\n    // Default color if calendar not found - using a more vibrant blue\n    return darker ? '#1565C0' : '#1E88E5';\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    try {\n      // Handle RGB format\n      if (color.startsWith('rgb')) {\n        const rgbPattern = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\n        const match = color.match(rgbPattern);\n        if (match) {\n          let r = parseInt(match[1], 10);\n          let g = parseInt(match[2], 10);\n          let b = parseInt(match[3], 10);\n          r = Math.max(0, Math.floor(r * (1 - amount)));\n          g = Math.max(0, Math.floor(g * (1 - amount)));\n          b = Math.max(0, Math.floor(b * (1 - amount)));\n          return `rgb(${r}, ${g}, ${b})`;\n        }\n      }\n\n      // Remove the hash if it exists for hex colors\n      color = color.replace('#', '');\n\n      // Parse the color\n      let r = parseInt(color.substring(0, 2), 16);\n      let g = parseInt(color.substring(2, 4), 16);\n      let b = parseInt(color.substring(4, 6), 16);\n\n      // Darken the color\n      r = Math.max(0, Math.floor(r * (1 - amount)));\n      g = Math.max(0, Math.floor(g * (1 - amount)));\n      b = Math.max(0, Math.floor(b * (1 - amount)));\n\n      // Convert back to hex\n      return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    } catch (e) {\n      console.error('Error darkening color:', e);\n      return color; // Return original color if there's an error\n    }\n  };\n\n  // Define fetchExistingEvents before it's used in the event listener\n  const fetchExistingEvents = useCallback(async (forceRefresh = false) => {\n    // Prevent multiple simultaneous requests\n    if (fetchingEvents) return;\n    try {\n      setFetchingEvents(true);\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n\n      // Skip logging in production\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\"Fetching events from:\", startDate, \"to\", endDate);\n      }\n\n      // Create the calendar IDs parameter\n      const calendarIds = selectedCalendars.map(cal => cal.id).join(',');\n\n      // Create a cache key based on date range and selected calendars\n      const cacheKey = `${startDate}_${endDate}_${calendarIds}`;\n\n      // Check if we have cached data and not forcing refresh\n      if (!forceRefresh && eventsCache[cacheKey] && eventsCache[cacheKey].expiry > Date.now()) {\n        setExistingEvents(eventsCache[cacheKey].data);\n        setFetchingEvents(false);\n        return;\n      }\n\n      // Add retry logic\n      let retries = 0;\n      const maxRetries = 3;\n      let response;\n      while (retries < maxRetries) {\n        try {\n          response = await axios.get(`http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}&calendars=${calendarIds}`);\n          break; // Success, exit retry loop\n        } catch (err) {\n          const currentRetry = retries; // Capture current value to avoid the loop reference issue\n          retries++;\n          if (currentRetry === maxRetries - 1) throw err;\n          // Wait before retrying (exponential backoff)\n          await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, currentRetry + 1)));\n        }\n      }\n      if (response.data.success) {\n        // Check if there are any events in the response\n        let events = response.data.events || [];\n\n        // If no events are returned and we're in development mode, add some mock events for testing\n        if (events.length === 0 && process.env.NODE_ENV === 'development') {\n          console.log(\"No events returned from API, adding mock events for testing\");\n          // Create a few mock events for the current week\n          const now = new Date();\n          const tomorrow = new Date(now);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          events = [{\n            id: 'mock-1',\n            title: 'Team Meeting',\n            start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0).toISOString(),\n            end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 11, 0).toISOString(),\n            calendarId: 'primary',\n            calendarName: 'Primary Calendar'\n          }, {\n            id: 'mock-2',\n            title: 'Lunch Break',\n            start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 12, 0).toISOString(),\n            end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 13, 0).toISOString(),\n            calendarId: 'primary',\n            calendarName: 'Primary Calendar'\n          }, {\n            id: 'mock-3',\n            title: 'Project Review',\n            start: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 14, 0).toISOString(),\n            end: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 15, 30).toISOString(),\n            calendarId: 'work',\n            calendarName: 'Work Calendar'\n          }];\n        }\n        if (events.length > 0) {\n          // Process all events at once with minimal logging\n          const eventsWithMetadata = events.map(event => ({\n            ...event,\n            title: event.title || event.summary || \"Untitled Event\",\n            existingEvent: true,\n            backgroundColor: event.backgroundColor || getCalendarColor(event.calendarId),\n            borderColor: event.borderColor || getCalendarColor(event.calendarId, true),\n            textColor: event.textColor || '#ffffff',\n            classNames: ['calendar-event'] // Add a class for additional styling\n          }));\n\n          // Update the cache with a 5-minute expiration\n          setEventsCache(prev => ({\n            ...prev,\n            [cacheKey]: {\n              data: eventsWithMetadata,\n              expiry: Date.now() + 5 * 60 * 1000 // 5 minutes\n            }\n          }));\n          setExistingEvents(eventsWithMetadata);\n        } else {\n          setExistingEvents([]);\n        }\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      setError('Failed to load events. Please try again.');\n    } finally {\n      setFetchingEvents(false);\n    }\n  }, [dateRange, formatDate, getCalendarColor, selectedCalendars, eventsCache, fetchingEvents, setError]);\n\n  // Define handleSubmit with useCallback before it's used in handleScheduleItem\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    console.log(\"handleSubmit called with text:\", text);\n    if (!text.trim()) return;\n\n    // Add user message to chat\n    setChatMessages(prev => [...prev, {\n      sender: 'user',\n      content: text\n    }]);\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    try {\n      console.log(\"Making API call with text:\", text);\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      console.log(\"API response:\", response.data);\n      if (response.data.success) {\n        // Handle the response in chat format\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent with HTML\n            setChatMessages(prev => [...prev, {\n              sender: 'bot',\n              content: response.data.humanizedResponse\n            }]);\n            setText(\"\");\n          } else {\n            // For other intents with text response\n            setChatMessages(prev => [...prev, {\n              sender: 'bot',\n              content: response.data.humanizedResponse\n            }]);\n          }\n        }\n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n\n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // Add error message to chat\n            setChatMessages(prev => [...prev, {\n              sender: 'bot',\n              type: 'error',\n              content: `INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`\n            }]);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setChatMessages(prev => [...prev, {\n              sender: 'bot',\n              content: \"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\"\n            }]);\n          }\n          setEventDetails({\n            summary: response.data.calendar_title || getEventSummaryFromText(text),\n            description: text,\n            calendarId: response.data.predicted_calendar || \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setChatMessages(prev => [...prev, {\n            sender: 'bot',\n            type: 'success',\n            content: `Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`\n          }]);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        // Add error message to chat\n        setChatMessages(prev => [...prev, {\n          sender: 'bot',\n          type: 'error',\n          content: `Error: ${response.data.humanizedResponse || response.data.message}`\n        }]);\n      }\n    } catch (error) {\n      // Add error message to chat\n      setChatMessages(prev => {\n        var _error$response, _error$response$data;\n        return [...prev, {\n          sender: 'bot',\n          type: 'error',\n          content: `Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`\n        }];\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [text, setLoading, setText, setChatMessages, setAvailableSlots, setCalendarEvents, setSelectedSlots, setShowCalendar, setEventDetails]);\n\n  // Event handler for scheduling items - using useCallback to avoid dependency issues\n  const handleScheduleItem = useCallback(event => {\n    console.log(\"Custom event received:\", event.detail);\n    const {\n      type,\n      startTime,\n      endTime\n    } = event.detail;\n    const startDate = new Date();\n    const formattedDate = startDate.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n    if (type === 'break') {\n      const newText = `Schedule a break on ${formattedDate} from ${startTime} to ${endTime}`;\n      console.log(\"Setting text for break:\", newText);\n      setText(newText);\n      // Submit after React has updated the state\n      setTimeout(() => {\n        handleSubmit({\n          preventDefault: () => {}\n        });\n      }, 50);\n    } else if (type === 'task') {\n      // Show prompt for task name\n      const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n      if (taskName) {\n        const newText = `Schedule ${taskName} on ${formattedDate} from ${startTime} to ${endTime}`;\n        console.log(\"Setting text for task:\", newText);\n        setText(newText);\n        // Submit after React has updated the state\n        setTimeout(() => {\n          handleSubmit({\n            preventDefault: () => {}\n          });\n        }, 50);\n      }\n    }\n  }, [setText, handleSubmit]);\n\n  // Set up event listeners\n  useEffect(() => {\n    window.addEventListener('scheduleCalendarItem', handleScheduleItem);\n\n    // Add event listener for refreshCalendar event\n    const handleRefreshCalendar = () => {\n      if (showCalendar) {\n        console.log(\"Refreshing calendar events via refreshCalendar event\");\n        fetchExistingEvents();\n      }\n    };\n    window.addEventListener('refreshCalendar', handleRefreshCalendar);\n\n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('scheduleCalendarItem', handleScheduleItem);\n      window.removeEventListener('refreshCalendar', handleRefreshCalendar);\n    };\n  }, [handleScheduleItem, fetchExistingEvents, showCalendar]);\n\n  // Fetch existing events when calendar is shown or date range changes\n  useEffect(() => {\n    if (showCalendar) {\n      console.log(\"Fetching existing events because calendar is shown or date range changed\");\n      fetchExistingEvents();\n    }\n  }, [showCalendar, dateRange, fetchExistingEvents]);\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Use Promise.all to fetch calendars and preferences in parallel\n        const [calendarsResponse, prefsResponse] = await Promise.all([axios.get('http://127.0.0.1:5000/api/get-calendars'), axios.get('http://127.0.0.1:5000/api/get-preferred-calendars')]);\n        if (!calendarsResponse.data.success) {\n          throw new Error(`Failed to fetch calendars: ${calendarsResponse.data.message || 'Unknown error'}`);\n        }\n        if (!prefsResponse.data.success) {\n          throw new Error(`Failed to fetch preferred calendars: ${prefsResponse.data.message || 'Unknown error'}`);\n        }\n        const allCalendars = calendarsResponse.data.calendars;\n        const preferredCals = prefsResponse.data.calendars;\n\n        // Update state all at once to avoid multiple re-renders\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data\n          const syncedPrefs = preferredCals.map(pref => allCalendars.find(cal => cal.id === pref.id) || pref);\n          setCalendars(allCalendars);\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          setCalendars(allCalendars);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(`Error loading calendars or preferences: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          // Debounce the API call to avoid excessive requests\n          const timeoutId = setTimeout(async () => {\n            const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n              calendars: selectedCalendars\n            });\n            if (!response.data.success) {\n              throw new Error(response.data.message);\n            }\n          }, 500); // Wait 500ms before sending the request\n\n          // Clear the timeout if the effect runs again before it fires\n          return () => clearTimeout(timeoutId);\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n  const handleCalendarSelect = useCallback(cal => {\n    setSelectedCalendars(prev => {\n      // Check if we're adding or removing a calendar\n      const isRemovingCalendar = prev.some(selected => selected.id === cal.id);\n      const newCalendars = isRemovingCalendar ? prev.filter(selected => selected.id !== cal.id) : [...prev, cal];\n\n      // Clear events cache when calendars change\n      setEventsCache({});\n      return newCalendars;\n    });\n  }, [setEventsCache]);\n  const getEventSummaryFromText = text => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n\n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n\n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => !(slot.start === eventData.start && slot.end === eventData.end));\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n\n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n        event.setProp('title', 'Selected Time');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n        event.setProp('title', 'Suggested Time');\n      }\n    } else {\n      // For existing events, show some details in a tooltip or alert\n      const eventTitle = event.title;\n      const eventTime = `${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()}`;\n      const calendarName = event.extendedProps.calendarName || 'Unknown Calendar';\n\n      // Simple alert for demonstration - in a real app, you might want a tooltip or modal\n      alert(`Event: ${eventTitle}\\nTime: ${eventTime}\\nCalendar: ${calendarName}`);\n    }\n  };\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      if (allSuccessful) {\n        // Add success message to chat\n        setChatMessages(prev => [...prev, {\n          sender: 'bot',\n          type: 'success',\n          content: `All ${selectedSlots.length} events scheduled successfully!`\n        }]);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        // Add error message to chat\n        setChatMessages(prev => [...prev, {\n          sender: 'bot',\n          type: 'error',\n          content: `Error: Some events could not be scheduled.`\n        }]);\n      }\n    } catch (error) {\n      // Add error message to chat\n      setChatMessages(prev => {\n        var _error$response2, _error$response2$data;\n        return [...prev, {\n          sender: 'bot',\n          type: 'error',\n          content: `Error: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`\n        }];\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFindDifferentTimes = () => {\n    // Add message to chat\n    setChatMessages(prev => [...prev, {\n      sender: 'bot',\n      content: \"Let's find another time. Please provide more details:\"\n    }]);\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  const handleDatesSet = dateInfo => {\n    console.log(\"Calendar dates changed:\", dateInfo.startStr, \"to\", dateInfo.endStr);\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n\n    // If calendar is currently showing, fetch events for the new date range\n    if (showCalendar) {\n      console.log(\"Fetching events for new date range\");\n      fetchExistingEvents();\n    }\n  };\n\n  // Optimize to avoid recalculation on each render\n  const getAllEvents = useCallback(() => {\n    // Start with existing events\n    const allEvents = [...existingEvents];\n\n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => slot.start === event.start && slot.end === event.end);\n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          textColor: '#ffffff',\n          title: isSelected ? 'Selected Time' : 'Suggested Time',\n          display: 'block',\n          extendedProps: {\n            ...event.extendedProps,\n            suggestedSlot: true\n          }\n        });\n      });\n    }\n    return allEvents;\n  }, [existingEvents, calendarEvents, selectedSlots]);\n\n  // Precalculate events to avoid useMemo in render\n  const currentEvents = getAllEvents();\n\n  // Render calendar in a chat message\n  const renderCalendarMessage = () => {\n    if (!showCalendar) return null;\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      sender: \"bot\",\n      isCalendarView: true,\n      className: \"calendar-message\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-view w-full\",\n        children: [selectedSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border border-blue-100 rounded-lg p-4 mb-4 text-blue-800 font-medium\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected \", selectedSlots.length, \" slot(s) - Total time: \", calculateTotalHours()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-color suggested-event-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Suggested Work Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-color selected-event-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Selected Work Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-title\",\n              children: \"Your Calendars:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 15\n            }, this), selectedCalendars.map(cal => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"legend-color\",\n                style: {\n                  backgroundColor: cal.backgroundColor || getCalendarColor(cal.id),\n                  border: `1px solid ${cal.borderColor || getCalendarColor(cal.id, true)}`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: cal.summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 19\n              }, this)]\n            }, cal.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalendarComponent, {\n          events: currentEvents,\n          handleEventClick: handleEventClick,\n          handleDatesSet: handleDatesSet,\n          loading: loading || fetchingEvents,\n          renderEventContent: renderEventContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mt-6 space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleScheduleSelected,\n            disabled: selectedSlots.length === 0 || loading,\n            className: `\n                px-6 py-3 rounded-lg font-medium flex items-center justify-center\n                ${selectedSlots.length === 0 || loading ? 'bg-gray-300 cursor-not-allowed text-gray-500' : 'bg-green-600 hover:bg-green-700 text-white shadow-md hover:shadow-lg transition-all duration-200'}\n              `,\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-2 h-5 w-5\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 19\n              }, this), \"Scheduling...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 17\n            }, this) : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFindDifferentTimes,\n            disabled: loading,\n            className: \"px-6 py-3 bg-red-500 hover:bg-red-600 text-white rounded-lg font-medium shadow-md hover:shadow-lg transition-all duration-200\",\n            children: \"Find Different Times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Format events in a user-friendly way\n  const formatStyledEventList = responseText => {\n    // Check if this is a schedule/calendar response with events\n    if ((responseText.includes(\"schedule\") || responseText.includes(\"calendar\") || responseText.includes(\"looks like for\")) && responseText.includes(\"**\") && responseText.includes(\":\")) {\n      try {\n        // Extract date\n        let dateMatch = responseText.match(/for\\s+([A-Za-z]+\\s+\\d+(?:st|nd|rd|th)?,\\s+\\d{4})/i);\n        const dateStr = dateMatch ? dateMatch[1] : \"Today\";\n\n        // Parse events from the text - improved regex pattern to better capture events\n        const eventPattern = /\\*\\*([0-9:.APM\\s-]+)\\*\\*:\\s*([^*\\n]+?)(?:\\sin\\s+([^*\\n]*))?(?=\\s*\\*\\*|\\s*$)/g;\n        let match;\n        const events = [];\n        while ((match = eventPattern.exec(responseText)) !== null) {\n          const timeRange = match[1].trim();\n          const title = match[2].trim();\n          const location = match[3] ? match[3].trim() : '';\n\n          // Calculate duration if it's a time range\n          let duration = \"\";\n          if (timeRange.includes(\"-\")) {\n            const [startTime, endTime] = timeRange.split(\"-\").map(t => t.trim());\n\n            // Simple duration calculation (just for display)\n            try {\n              const parseTime = timeStr => {\n                const [time, modifier] = timeStr.split(/\\s+/);\n                let [hours, minutes] = time.split(':').map(Number);\n                if (modifier === 'PM' && hours < 12) hours += 12;\n                if (modifier === 'AM' && hours === 12) hours = 0;\n                return hours * 60 + (minutes || 0);\n              };\n              const startMinutes = parseTime(startTime);\n              const endMinutes = parseTime(endTime);\n              const durationMinutes = endMinutes - startMinutes;\n              if (durationMinutes > 0) {\n                const hours = Math.floor(durationMinutes / 60);\n                const mins = durationMinutes % 60;\n                duration = hours > 0 ? `${hours} hour${hours > 1 ? 's' : ''}${mins > 0 ? ` ${mins} min` : ''}` : `${mins} min`;\n              }\n            } catch (e) {\n              console.error(\"Error calculating duration:\", e);\n            }\n          }\n          events.push({\n            timeRange,\n            title,\n            location,\n            duration\n          });\n        }\n\n        // If we extracted events, format them nicely\n        if (events.length > 0) {\n          // Generate intro text\n          const introMatch = responseText.match(/^([^*]+)/);\n          const introText = introMatch ? introMatch[0].trim() : `Here's your schedule for ${dateStr}:`;\n\n          // Generate HTML for styled events with distinctive course colors\n          return `\n            <div>\n              <p>${introText}</p>\n              <div class=\"styled-event-list\">\n                <div class=\"event-date\">${dateStr}</div>\n                ${events.length > 0 ? events.map(event => {\n            // Determine background color based on event title (for courses)\n            let bgColor = '#e5edff'; // default blue background\n            let iconColor = '#3b82f6'; // default blue icon\n\n            if (event.title.includes('CMPT 310') || event.title.includes('Cmpt 310')) {\n              bgColor = '#f3e8ff'; // purple for CMPT 310\n              iconColor = '#8b5cf6';\n            } else if (event.title.includes('CMPT 213') || event.title.includes('Cmpt 213')) {\n              bgColor = '#e0f2fe'; // light blue for CMPT 213\n              iconColor = '#0ea5e9';\n            } else if (event.title.includes('CMPT 276') || event.title.includes('Cmpt 276')) {\n              bgColor = '#dcfce7'; // green for CMPT 276\n              iconColor = '#22c55e';\n            } else if (event.title.includes('CMPT 105W') || event.title.includes('Cmpt 105W')) {\n              bgColor = '#ffedd5'; // orange for CMPT 105W\n              iconColor = '#f97316';\n            }\n            return `\n                  <div class=\"event-item\">\n                    <div class=\"event-item-icon\" style=\"background-color: ${bgColor}; color: ${iconColor};\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                        <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n                        <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n                        <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n                      </svg>\n                    </div>\n                    <div>\n                      <div class=\"event-time\">${event.timeRange}</div>\n                      <div class=\"event-content\">\n                        <div class=\"event-title\">${event.title}</div>\n                        ${event.location ? `\n                          <div class=\"event-location\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                              <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                              <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                            </svg>\n                            ${event.location}\n                          </div>\n                        ` : ''}\n                        ${event.duration ? `<div class=\"event-duration\">${event.duration}</div>` : ''}\n                      </div>\n                    </div>\n                  </div>\n                  `;\n          }).join('') : `\n                  <div class=\"no-events\">No events scheduled for this day</div>\n                `}\n              </div>\n            </div>\n          `;\n        }\n      } catch (error) {\n        console.error(\"Error formatting events:\", error);\n        // If we encounter an error parsing, return a basic styled format instead\n        return `\n          <div class=\"styled-event-list\">\n            <div class=\"event-item\">\n              <div class=\"event-item-icon\" style=\"background-color: #f5f3ff; color: #8b5cf6;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                  <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n                  <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n                  <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n                </svg>\n              </div>\n              <div class=\"event-content\">\n                <p>${responseText}</p>\n              </div>\n            </div>\n          </div>\n        `;\n      }\n    }\n\n    // For regular text responses, make them more visually interesting\n    if (!responseText.includes(\"<div\") && !responseText.includes(\"<p\") && !responseText.includes(\"<ul\")) {\n      // If it mentions free time, use a special format\n      if (responseText.toLowerCase().includes(\"free time\") || responseText.toLowerCase().includes(\"available\") || responseText.toLowerCase().includes(\"time slot\")) {\n        return generateFreeTimeHTML(responseText);\n      }\n\n      // If it's a confirmation or completion message\n      if (responseText.toLowerCase().includes(\"scheduled\") || responseText.toLowerCase().includes(\"created\") || responseText.toLowerCase().includes(\"added\")) {\n        return generateConfirmationHTML(responseText);\n      }\n\n      // Default enhanced format for other responses\n      return defaultStyledFormat(responseText);\n    }\n\n    // Return original if no formatting applied\n    return responseText;\n  };\n\n  // Helper function to calculate duration from a time range\n  const calculateDuration = timeRange => {\n    if (!timeRange || !timeRange.includes(\"-\")) return \"\";\n    try {\n      const [startTime, endTime] = timeRange.split(\"-\").map(t => t.trim());\n      const parseTime = timeStr => {\n        const [time, modifier] = timeStr.split(/\\s+/);\n        let [hours, minutes] = (time || \"\").split(':').map(Number);\n        minutes = minutes || 0;\n        if (modifier && modifier.toUpperCase() === 'PM' && hours < 12) hours += 12;\n        if (modifier && modifier.toUpperCase() === 'AM' && hours === 12) hours = 0;\n        return hours * 60 + minutes;\n      };\n      const startMinutes = parseTime(startTime);\n      const endMinutes = parseTime(endTime);\n      const durationMinutes = endMinutes - startMinutes;\n      if (durationMinutes > 0) {\n        const hours = Math.floor(durationMinutes / 60);\n        const mins = durationMinutes % 60;\n        return hours > 0 ? `${hours} hour${hours > 1 ? 's' : ''}${mins > 0 ? ` ${mins} min` : ''}` : `${mins} min`;\n      }\n      return \"\";\n    } catch (e) {\n      console.error(\"Error calculating duration:\", e);\n      return \"\";\n    }\n  };\n\n  // Helper function to generate HTML for events\n  const generateEventHTML = (introText, dateStr, events) => {\n    return `\n      <div>\n        <p>${introText}</p>\n        <div class=\"styled-event-list\">\n          <div class=\"event-date\">${dateStr}</div>\n          ${events.map(event => {\n      // Determine background color based on event title (for courses)\n      let bgColor = '#e5edff'; // default blue background\n      let iconColor = '#3b82f6'; // default blue icon\n\n      if (event.title.includes('CMPT 310') || event.title.includes('Cmpt 310')) {\n        bgColor = '#f3e8ff'; // purple for CMPT 310\n        iconColor = '#8b5cf6';\n      } else if (event.title.includes('CMPT 213') || event.title.includes('Cmpt 213')) {\n        bgColor = '#e0f2fe'; // light blue for CMPT 213\n        iconColor = '#0ea5e9';\n      } else if (event.title.includes('CMPT 276') || event.title.includes('Cmpt 276')) {\n        bgColor = '#dcfce7'; // green for CMPT 276\n        iconColor = '#22c55e';\n      } else if (event.title.includes('CMPT 105W') || event.title.includes('Cmpt 105W')) {\n        bgColor = '#ffedd5'; // orange for CMPT 105W\n        iconColor = '#f97316';\n      } else if (event.title.includes('OH') || event.title.includes('Office Hours')) {\n        bgColor = '#ffe4e6'; // pink for Office Hours\n        iconColor = '#e11d48';\n      }\n      return `\n            <div class=\"event-item\">\n              <div class=\"event-item-icon\" style=\"background-color: ${bgColor}; color: ${iconColor};\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                  <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n                  <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n                  <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n                </svg>\n              </div>\n              <div>\n                <div class=\"event-time\">${event.timeRange}</div>\n                <div class=\"event-content\">\n                  <div class=\"event-title\">${event.title}</div>\n                  ${event.location ? `\n                    <div class=\"event-location\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                        <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                      </svg>\n                      ${event.location}\n                    </div>\n                  ` : ''}\n                  ${event.duration ? `<div class=\"event-duration\">${event.duration}</div>` : ''}\n                </div>\n              </div>\n            </div>\n            `;\n    }).join('')}\n        </div>\n      </div>\n    `;\n  };\n\n  // Helper function for free time format\n  const generateFreeTimeHTML = responseText => {\n    return `\n      <div class=\"styled-event-list\">\n        <div class=\"event-item\">\n          <div class=\"event-item-icon\" style=\"background-color: #ebf7ee; color: #34d399;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n              <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n            </svg>\n          </div>\n          <div class=\"event-content\">\n            <p>${responseText}</p>\n          </div>\n        </div>\n      </div>\n    `;\n  };\n\n  // Helper function for confirmation format\n  const generateConfirmationHTML = responseText => {\n    return `\n      <div class=\"styled-event-list\">\n        <div class=\"event-item\">\n          <div class=\"event-item-icon\" style=\"background-color: #e5edff; color: #3b82f6;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <polyline points=\"20 6 9 17 4 12\"></polyline>\n            </svg>\n          </div>\n          <div class=\"event-content\">\n            <p>${responseText}</p>\n          </div>\n        </div>\n      </div>\n    `;\n  };\n\n  // Helper function for default format\n  const defaultStyledFormat = responseText => {\n    return `\n      <div class=\"styled-event-list\">\n        <div class=\"event-item\">\n          <div class=\"event-item-icon\" style=\"background-color: #f5f3ff; color: #8b5cf6;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n              <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n              <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n            </svg>\n          </div>\n          <div class=\"event-content\">\n            <p>${responseText}</p>\n          </div>\n        </div>\n      </div>\n    `;\n  };\n\n  // Render message content based on type\n  const renderMessage = (message, index) => {\n    if (message.type === 'welcome') {\n      return /*#__PURE__*/_jsxDEV(WelcomeMessage, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1261,\n        columnNumber: 14\n      }, this);\n    }\n    if (message.type === 'error') {\n      return /*#__PURE__*/_jsxDEV(ChatMessage, {\n        sender: message.sender,\n        content: `<div class=\"error-content\">${message.content}</div>`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1266,\n        columnNumber: 9\n      }, this);\n    }\n    if (message.type === 'success') {\n      return /*#__PURE__*/_jsxDEV(ChatMessage, {\n        sender: message.sender,\n        content: `<div class=\"success-content\">${message.content}</div>`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Format event lists in responses\n    const formattedContent = message.sender === 'bot' ? formatStyledEventList(message.content) : message.content;\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      sender: message.sender,\n      content: formattedContent\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          onClick: () => setShowSettings(!showSettings),\n          isOpen: showSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `settings-transition ${showSettings ? 'settings-open' : 'settings-closed'}`,\n        children: showSettings && /*#__PURE__*/_jsxDEV(CalendarSettings, {\n          calendars: calendars,\n          selected: selectedCalendars,\n          onSelect: handleCalendarSelect,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        children: [chatMessages.map((msg, idx) => renderMessage(msg, idx)), showCalendar && renderCalendarMessage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        value: text,\n        onChange: e => setText(e.target.value),\n        onSubmit: handleSubmit,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1300,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1299,\n    columnNumber: 5\n  }, this);\n}\n_s(NaturalLanguageForm, \"F3o0miN3WFVWWxmkVrtmKCZPIFw=\");\n_c5 = NaturalLanguageForm;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App w-full min-h-screen bg-gray-50 py-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6 text-center text-gray-800\",\n        children: \"ScheduleSync Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center p-10\",\n          children: \"Loading application...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(NaturalLanguageForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          // Directly define functions in the global scope\n          window.scheduleBreak = function(startTime, endTime) {\n            console.log(\"DOM scheduleBreak called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'break',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          window.scheduleTask = function(startTime, endTime) {\n            console.log(\"DOM scheduleTask called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'task',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          // Duration selector functions\n          window.showDurationSelector = function(startTime, endTime, selectorId, displayId, sliderId) {\n            console.log(\"Showing duration selector\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'block';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          window.updateDurationDisplay = function(minutes, displayId) {\n            console.log(\"Updating duration display to\", minutes, \"for\", displayId);\n            const durationDisplay = document.getElementById(displayId);\n            if (!durationDisplay) {\n              console.error(\"Duration display element not found:\", displayId);\n              return;\n            }\n            \n            let display = \"\";\n            if (minutes >= 60) {\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              display = hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\n              if (remainingMinutes > 0) {\n                display += \" \" + remainingMinutes + \" min\";\n              }\n            } else {\n              display = minutes + \" min\";\n            }\n            durationDisplay.textContent = display;\n          };\n          \n          window.scheduleBreakWithDuration = function(startTime, endTime, sliderId) {\n            console.log(\"Scheduling break with duration using slider\", sliderId);\n            const durationSlider = document.getElementById(sliderId);\n            if (!durationSlider) {\n              console.error(\"Duration slider not found:\", sliderId);\n              return;\n            }\n            \n            const durationMinutes = durationSlider.value;\n            console.log(\"Duration selected:\", durationMinutes);\n            \n            const startDateTime = new Date();\n            const [startHours, startMinutes] = startTime.split(':').map(Number);\n            startDateTime.setHours(startHours, startMinutes, 0);\n            \n            // Calculate end time based on selected duration\n            const endDateTime = new Date(startDateTime);\n            endDateTime.setMinutes(startDateTime.getMinutes() + parseInt(durationMinutes));\n            \n            const formattedEndTime = endDateTime.getHours().toString().padStart(2, '0') + ':' + \n                                  endDateTime.getMinutes().toString().padStart(2, '0');\n            \n            console.log(\"Calculated end time:\", formattedEndTime);\n            \n            // Call the existing scheduleBreak function\n            window.scheduleBreak(startTime, formattedEndTime);\n          };\n          \n          window.cancelDurationSelection = function(selectorId) {\n            console.log(\"Canceling duration selection for\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'none';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          console.log(\"Inline scheduling functions defined and attached to window object\");\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1338,\n    columnNumber: 5\n  }, this);\n}\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CalendarComponent$memo\");\n$RefreshReg$(_c2, \"CalendarComponent\");\n$RefreshReg$(_c3, \"CalendarSelectionComponent$memo\");\n$RefreshReg$(_c4, \"CalendarSelectionComponent\");\n$RefreshReg$(_c5, \"NaturalLanguageForm\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","useMemo","Suspense","lazy","axios","ChatHeader","ChatContainer","ChatMessages","ChatMessage","ChatInput","SettingsButton","CalendarSettings","WelcomeMessage","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","setupGlobalFunctions","window","scheduleBreak","startTime","endTime","console","log","dispatchEvent","CustomEvent","detail","type","scheduleTask","renderEventContent","eventInfo","_eventInfo$event$exte","_eventInfo$event$exte2","_eventInfo$event$exte3","_eventInfo$event$exte4","isSuggested","event","extendedProps","suggestedSlot","isExisting","existingEvent","timeText","includes","times","split","trim","calendarName","title","summary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","CalendarComponent","_c","events","handleEventClick","handleDatesSet","loading","plugins","initialView","headerToolbar","left","center","right","eventClick","eventContent","height","nowIndicator","datesSet","slotMinTime","slotMaxTime","eventTimeFormat","hour","minute","meridiem","slotLabelFormat","hour12","allDaySlot","eventDisplay","eventBackgroundColor","eventBorderColor","eventTextColor","displayEventTime","displayEventEnd","forceEventDuration","eventMinHeight","lazyFetching","_c2","displayName","CalendarSelectionComponent","_c3","calendars","selected","onSelect","disabled","length","map","cal","style","display","margin","padding","backgroundColor","some","s","id","borderRadius","cursor","checked","onChange","marginLeft","color","primary","fontWeight","_c4","NaturalLanguageForm","_s","text","setText","setLoading","message","setMessage","error","setError","availableSlots","setAvailableSlots","calendarEvents","setCalendarEvents","existingEvents","setExistingEvents","showCalendar","setShowCalendar","eventDetails","setEventDetails","selectedSlots","setSelectedSlots","eventsCache","setEventsCache","fetchingEvents","setFetchingEvents","chatMessages","setChatMessages","showSettings","setShowSettings","sender","setCalendars","selectedCalendars","setSelectedCalendars","dateRange","setDateRange","start","Date","end","setDate","getDate","formatDate","date","d","month","getMonth","day","year","getFullYear","join","getCalendarColor","calendarId","darker","calendar","find","startsWith","rgbaPattern","match","darkenColor","amount","rgbPattern","r","parseInt","g","b","Math","max","floor","replace","substring","toString","padStart","e","fetchExistingEvents","forceRefresh","startDate","endDate","process","env","NODE_ENV","calendarIds","cacheKey","expiry","now","data","retries","maxRetries","response","get","err","currentRetry","Promise","resolve","setTimeout","pow","success","tomorrow","toISOString","eventsWithMetadata","borderColor","textColor","classNames","prev","handleSubmit","preventDefault","content","post","humanizedResponse","intent","insufficientTime","calendar_title","getEventSummaryFromText","description","predicted_calendar","eventLink","_error$response","_error$response$data","handleScheduleItem","formattedDate","toLocaleDateString","newText","taskName","prompt","addEventListener","handleRefreshCalendar","removeEventListener","fetchData","calendarsResponse","prefsResponse","all","Error","allCalendars","preferredCals","syncedPrefs","pref","primaryCal","sendPreferences","timeoutId","clearTimeout","handleCalendarSelect","isRemovingCalendar","newCalendars","filter","firstSentence","info","eventData","isAlreadySelected","slot","isSelected","setProp","eventTitle","eventTime","toLocaleTimeString","alert","calculateTotalHours","totalMinutes","forEach","diffMinutes","hours","minutes","handleScheduleSelected","promises","selectedSlot","results","allSuccessful","every","_error$response2","_error$response2$data","handleFindDifferentTimes","dateInfo","startStr","endStr","getAllEvents","allEvents","push","currentEvents","renderCalendarMessage","isCalendarView","border","onClick","xmlns","fill","viewBox","cx","cy","stroke","strokeWidth","formatStyledEventList","responseText","dateMatch","dateStr","eventPattern","exec","timeRange","location","duration","t","parseTime","timeStr","time","modifier","Number","startMinutes","endMinutes","durationMinutes","mins","introMatch","introText","bgColor","iconColor","toLowerCase","generateFreeTimeHTML","generateConfirmationHTML","defaultStyledFormat","calculateDuration","toUpperCase","generateEventHTML","renderMessage","index","formattedContent","isOpen","msg","idx","value","target","onSubmit","_c5","App","fallback","dangerouslySetInnerHTML","__html","_c6","$RefreshReg$"],"sources":["/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo, useMemo, Suspense, lazy } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Import our Chat UI components instead of the old NewUI\nimport { ChatHeader, ChatContainer, ChatMessages, ChatMessage, ChatInput, SettingsButton, CalendarSettings, WelcomeMessage } from './ChatUI';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n// Define the script at global level to ensure the functions are globally accessible\nconst setupGlobalFunctions = () => {\n  if (typeof window !== 'undefined') {\n    // Create a custom event for scheduling breaks\n    window.scheduleBreak = (startTime, endTime) => {\n      console.log(\"scheduleBreak called with:\", startTime, endTime);\n      // Dispatch a custom event that the React component can listen for\n      window.dispatchEvent(\n        new CustomEvent('scheduleCalendarItem', {\n          detail: {\n            type: 'break',\n            startTime,\n            endTime\n          }\n        })\n      );\n    };\n    \n    // Create a custom event for scheduling tasks  \n    window.scheduleTask = (startTime, endTime) => {\n      console.log(\"scheduleTask called with:\", startTime, endTime);\n      window.dispatchEvent(\n        new CustomEvent('scheduleCalendarItem', {\n          detail: {\n            type: 'task',\n            startTime,\n            endTime\n          }\n        })\n      );\n    };\n    \n    // Log to verify functions are attached\n    console.log(\"Global scheduling functions attached:\", \n      typeof window.scheduleBreak === 'function', \n      typeof window.scheduleTask === 'function');\n  }\n};\n\n// Memoize the renderEventContent function to avoid recreating it on each render\nconst renderEventContent = (eventInfo) => {\n  // Determine if this is a suggested slot or existing event\n  const isSuggested = eventInfo.event.extendedProps?.suggestedSlot === true;\n  const isExisting = eventInfo.event.extendedProps?.existingEvent === true;\n  \n  // Format the time more cleanly\n  let timeText = eventInfo.timeText || '';\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n  \n  // Get the calendar name if available\n  let calendarName = '';\n  if (isExisting && eventInfo.event.extendedProps?.calendarName) {\n    calendarName = `(${eventInfo.event.extendedProps.calendarName})`;\n  }\n  \n  // Get the event title with fallback options\n  const title = eventInfo.event.title || \n                eventInfo.event.extendedProps?.summary || \n                (isSuggested ? 'Suggested Time' : 'Event');\n  \n  return (\n    <div className={`event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`}>\n      <b>{timeText}</b>\n      <i>{title} {calendarName}</i>\n    </div>\n  );\n};\n\n// Define the Calendar component outside of the main component\nconst CalendarComponent = memo(({ \n  events, \n  handleEventClick, \n  handleDatesSet, \n  loading,\n  renderEventContent \n}) => {\n  return (\n    <div className={`calendar-container ${loading ? 'loading' : ''}`}>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridWeek\"\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        }}\n        events={events}\n        eventClick={handleEventClick}\n        eventContent={renderEventContent}\n        height=\"800px\"\n        nowIndicator={true}\n        datesSet={handleDatesSet}\n        slotMinTime=\"07:00:00\"\n        slotMaxTime=\"23:00:00\"\n        eventTimeFormat={{\n          hour: 'numeric',\n          minute: '2-digit',\n          meridiem: 'short'\n        }}\n        slotLabelFormat={{\n          hour: 'numeric',\n          minute: '2-digit',\n          hour12: true\n        }}\n        allDaySlot={false}\n        eventDisplay=\"block\"\n        eventBackgroundColor=\"#4285f4\"\n        eventBorderColor=\"#3b78e7\"\n        eventTextColor=\"#ffffff\"\n        displayEventTime={true}\n        displayEventEnd={true}\n        forceEventDuration={true}\n        eventMinHeight={30}\n        lazyFetching={true}\n      />\n    </div>\n  );\n});\n\nCalendarComponent.displayName = 'CalendarComponent';\n\n// The calendar selection component\nconst CalendarSelectionComponent = memo(({ calendars, selected, onSelect, disabled }) => {\n  return (\n    <div className=\"calendar-selection\">\n      <h3>Select Calendars to Monitor:</h3>\n      {calendars.length > 0 ? (\n        calendars.map((cal) => (\n          <label key={cal.id} style={{ \n            display: 'block', \n            margin: '5px 0',\n            padding: '8px',\n            backgroundColor: selected.some(s => s.id === cal.id) ? '#f0f7ff' : 'transparent',\n            borderRadius: '4px',\n            cursor: disabled ? 'not-allowed' : 'pointer'\n          }}>\n            <input\n              type=\"checkbox\"\n              checked={selected.some((s) => s.id === cal.id)}\n              onChange={() => onSelect(cal)}\n              disabled={disabled}\n            />\n            <span style={{\n              marginLeft: '8px',\n              color: cal.primary ? '#1a73e8' : 'inherit',\n              fontWeight: cal.primary ? '500' : 'normal'\n            }}>\n              {cal.summary} {cal.primary ? '(Primary)' : ''}\n            </span>\n          </label>\n        ))\n      ) : (\n        <p>Loading calendars...</p>\n      )}\n    </div>\n  );\n});\n\nCalendarSelectionComponent.displayName = 'CalendarSelectionComponent';\n\nfunction NaturalLanguageForm() {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  // Add cache for events data\n  const [eventsCache, setEventsCache] = useState({});\n  const [fetchingEvents, setFetchingEvents] = useState(false);\n  \n  // Chat-specific state\n  const [chatMessages, setChatMessages] = useState([]);\n  const [showSettings, setShowSettings] = useState(false);\n  \n  // Call the setup function on load\n  useEffect(() => {\n    setupGlobalFunctions();\n    // Add welcome message\n    setChatMessages([{ sender: 'bot', type: 'welcome' }]);\n  }, []);\n  \n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Helper function to format date to YYYY-MM-DD\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  };\n\n  // Helper function to get color for a specific calendar\n  const getCalendarColor = (calendarId, darker = false) => {\n    // Find the calendar in our list\n    const calendar = calendars.find(cal => cal.id === calendarId);\n    if (calendar && calendar.backgroundColor) {\n      // Enhance color vibrancy by ensuring full opacity\n      let color = calendar.backgroundColor;\n      \n      // If it's an RGBA color, convert to fully opaque\n      if (color.startsWith('rgba')) {\n        const rgbaPattern = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*[\\d.]+\\s*\\)/;\n        const match = color.match(rgbaPattern);\n        if (match) {\n          color = `rgb(${match[1]}, ${match[2]}, ${match[3]})`;\n        }\n      }\n      \n      if (darker) {\n        // Create a slightly darker version for the border\n        return darkenColor(color, 0.2);\n      }\n      return color;\n    }\n    // Default color if calendar not found - using a more vibrant blue\n    return darker ? '#1565C0' : '#1E88E5';\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    try {\n      // Handle RGB format\n      if (color.startsWith('rgb')) {\n        const rgbPattern = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\n        const match = color.match(rgbPattern);\n        if (match) {\n          let r = parseInt(match[1], 10);\n          let g = parseInt(match[2], 10);\n          let b = parseInt(match[3], 10);\n          \n          r = Math.max(0, Math.floor(r * (1 - amount)));\n          g = Math.max(0, Math.floor(g * (1 - amount)));\n          b = Math.max(0, Math.floor(b * (1 - amount)));\n          \n          return `rgb(${r}, ${g}, ${b})`;\n        }\n      }\n      \n      // Remove the hash if it exists for hex colors\n      color = color.replace('#', '');\n      \n      // Parse the color\n      let r = parseInt(color.substring(0, 2), 16);\n      let g = parseInt(color.substring(2, 4), 16);\n      let b = parseInt(color.substring(4, 6), 16);\n      \n      // Darken the color\n      r = Math.max(0, Math.floor(r * (1 - amount)));\n      g = Math.max(0, Math.floor(g * (1 - amount)));\n      b = Math.max(0, Math.floor(b * (1 - amount)));\n      \n      // Convert back to hex\n      return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    } catch (e) {\n      console.error('Error darkening color:', e);\n      return color; // Return original color if there's an error\n    }\n  };\n\n  // Define fetchExistingEvents before it's used in the event listener\n  const fetchExistingEvents = useCallback(async (forceRefresh = false) => {\n    // Prevent multiple simultaneous requests\n    if (fetchingEvents) return;\n    \n    try {\n      setFetchingEvents(true);\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n      \n      // Skip logging in production\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\"Fetching events from:\", startDate, \"to\", endDate);\n      }\n      \n      // Create the calendar IDs parameter\n      const calendarIds = selectedCalendars.map(cal => cal.id).join(',');\n      \n      // Create a cache key based on date range and selected calendars\n      const cacheKey = `${startDate}_${endDate}_${calendarIds}`;\n      \n      // Check if we have cached data and not forcing refresh\n      if (!forceRefresh && eventsCache[cacheKey] && eventsCache[cacheKey].expiry > Date.now()) {\n        setExistingEvents(eventsCache[cacheKey].data);\n        setFetchingEvents(false);\n        return;\n      }\n      \n      // Add retry logic\n      let retries = 0;\n      const maxRetries = 3;\n      let response;\n      \n      while (retries < maxRetries) {\n        try {\n          response = await axios.get(\n            `http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}&calendars=${calendarIds}`\n          );\n          break; // Success, exit retry loop\n        } catch (err) {\n          const currentRetry = retries; // Capture current value to avoid the loop reference issue\n          retries++;\n          if (currentRetry === maxRetries - 1) throw err;\n          // Wait before retrying (exponential backoff)\n          await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, currentRetry + 1)));\n        }\n      }\n      \n      if (response.data.success) {\n        // Check if there are any events in the response\n        let events = response.data.events || [];\n        \n        // If no events are returned and we're in development mode, add some mock events for testing\n        if (events.length === 0 && process.env.NODE_ENV === 'development') {\n          console.log(\"No events returned from API, adding mock events for testing\");\n          // Create a few mock events for the current week\n          const now = new Date();\n          const tomorrow = new Date(now);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          \n          events = [\n            {\n              id: 'mock-1',\n              title: 'Team Meeting',\n              start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0).toISOString(),\n              end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 11, 0).toISOString(),\n              calendarId: 'primary',\n              calendarName: 'Primary Calendar'\n            },\n            {\n              id: 'mock-2',\n              title: 'Lunch Break',\n              start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 12, 0).toISOString(),\n              end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 13, 0).toISOString(),\n              calendarId: 'primary',\n              calendarName: 'Primary Calendar'\n            },\n            {\n              id: 'mock-3',\n              title: 'Project Review',\n              start: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 14, 0).toISOString(),\n              end: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 15, 30).toISOString(),\n              calendarId: 'work',\n              calendarName: 'Work Calendar'\n            }\n          ];\n        }\n        \n        if (events.length > 0) {\n          // Process all events at once with minimal logging\n          const eventsWithMetadata = events.map(event => ({\n            ...event,\n            title: event.title || event.summary || \"Untitled Event\",\n            existingEvent: true,\n            backgroundColor: event.backgroundColor || getCalendarColor(event.calendarId),\n            borderColor: event.borderColor || getCalendarColor(event.calendarId, true),\n            textColor: event.textColor || '#ffffff',\n            classNames: ['calendar-event']  // Add a class for additional styling\n          }));\n          \n          // Update the cache with a 5-minute expiration\n          setEventsCache(prev => ({\n            ...prev,\n            [cacheKey]: {\n              data: eventsWithMetadata,\n              expiry: Date.now() + 5 * 60 * 1000 // 5 minutes\n            }\n          }));\n          \n          setExistingEvents(eventsWithMetadata);\n        } else {\n          setExistingEvents([]);\n        }\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      setError('Failed to load events. Please try again.');\n    } finally {\n      setFetchingEvents(false);\n    }\n  }, [dateRange, formatDate, getCalendarColor, selectedCalendars, eventsCache, fetchingEvents, setError]);\n\n  // Define handleSubmit with useCallback before it's used in handleScheduleItem\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit called with text:\", text);\n    if (!text.trim()) return;\n\n    // Add user message to chat\n    setChatMessages(prev => [...prev, { sender: 'user', content: text }]);\n    \n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n\n    try {\n      console.log(\"Making API call with text:\", text);\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      console.log(\"API response:\", response.data);\n\n      if (response.data.success) {\n        // Handle the response in chat format\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent with HTML\n            setChatMessages(prev => [...prev, { \n              sender: 'bot', \n              content: response.data.humanizedResponse \n            }]);\n            setText(\"\");\n          } else {\n            // For other intents with text response\n            setChatMessages(prev => [...prev, { \n              sender: 'bot', \n              content: response.data.humanizedResponse \n            }]);\n          }\n        }\n        \n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n          \n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // Add error message to chat\n            setChatMessages(prev => [...prev, { \n              sender: 'bot', \n              type: 'error',\n              content: `INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.` \n            }]);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setChatMessages(prev => [...prev, { \n              sender: 'bot', \n              content: \"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\" \n            }]);\n          }\n          \n          setEventDetails({\n            summary: response.data.calendar_title || getEventSummaryFromText(text),\n            description: text,\n            calendarId: response.data.predicted_calendar || \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setChatMessages(prev => [...prev, { \n            sender: 'bot', \n            type: 'success',\n            content: `Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}` \n          }]);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        // Add error message to chat\n        setChatMessages(prev => [...prev, { \n          sender: 'bot', \n          type: 'error',\n          content: `Error: ${response.data.humanizedResponse || response.data.message}` \n        }]);\n      }\n    } catch (error) {\n      // Add error message to chat\n      setChatMessages(prev => [...prev, { \n        sender: 'bot', \n        type: 'error',\n        content: `Error: ${error.response?.data?.message || error.message}` \n      }]);\n    } finally {\n      setLoading(false);\n    }\n  }, [text, setLoading, setText, setChatMessages, setAvailableSlots, setCalendarEvents, setSelectedSlots, setShowCalendar, setEventDetails]);\n\n  // Event handler for scheduling items - using useCallback to avoid dependency issues\n  const handleScheduleItem = useCallback((event) => {\n    console.log(\"Custom event received:\", event.detail);\n    const { type, startTime, endTime } = event.detail;\n    const startDate = new Date();\n    const formattedDate = startDate.toLocaleDateString('en-US', { \n      month: 'long', \n      day: 'numeric',\n      year: 'numeric'\n    });\n    \n    if (type === 'break') {\n      const newText = `Schedule a break on ${formattedDate} from ${startTime} to ${endTime}`;\n      console.log(\"Setting text for break:\", newText);\n      setText(newText);\n      // Submit after React has updated the state\n      setTimeout(() => {\n        handleSubmit({ preventDefault: () => {} });\n      }, 50);\n    } else if (type === 'task') {\n      // Show prompt for task name\n      const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n      if (taskName) {\n        const newText = `Schedule ${taskName} on ${formattedDate} from ${startTime} to ${endTime}`;\n        console.log(\"Setting text for task:\", newText);\n        setText(newText);\n        // Submit after React has updated the state\n        setTimeout(() => {\n          handleSubmit({ preventDefault: () => {} });\n        }, 50);\n      }\n    }\n  }, [setText, handleSubmit]);\n  \n  // Set up event listeners\n  useEffect(() => {\n    window.addEventListener('scheduleCalendarItem', handleScheduleItem);\n    \n    // Add event listener for refreshCalendar event\n    const handleRefreshCalendar = () => {\n      if (showCalendar) {\n        console.log(\"Refreshing calendar events via refreshCalendar event\");\n        fetchExistingEvents();\n      }\n    };\n    \n    window.addEventListener('refreshCalendar', handleRefreshCalendar);\n    \n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('scheduleCalendarItem', handleScheduleItem);\n      window.removeEventListener('refreshCalendar', handleRefreshCalendar);\n    };\n  }, [handleScheduleItem, fetchExistingEvents, showCalendar]);\n\n  // Fetch existing events when calendar is shown or date range changes\n  useEffect(() => {\n    if (showCalendar) {\n      console.log(\"Fetching existing events because calendar is shown or date range changed\");\n      fetchExistingEvents();\n    }\n  }, [showCalendar, dateRange, fetchExistingEvents]);\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Use Promise.all to fetch calendars and preferences in parallel\n        const [calendarsResponse, prefsResponse] = await Promise.all([\n          axios.get('http://127.0.0.1:5000/api/get-calendars'),\n          axios.get('http://127.0.0.1:5000/api/get-preferred-calendars')\n        ]);\n        \n        if (!calendarsResponse.data.success) {\n          throw new Error(`Failed to fetch calendars: ${calendarsResponse.data.message || 'Unknown error'}`);\n        }\n        \n        if (!prefsResponse.data.success) {\n          throw new Error(`Failed to fetch preferred calendars: ${prefsResponse.data.message || 'Unknown error'}`);\n        }\n        \n        const allCalendars = calendarsResponse.data.calendars;\n        const preferredCals = prefsResponse.data.calendars;\n\n        // Update state all at once to avoid multiple re-renders\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data\n          const syncedPrefs = preferredCals.map(pref => \n            allCalendars.find(cal => cal.id === pref.id) || pref\n          );\n          setCalendars(allCalendars);\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          setCalendars(allCalendars);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(`Error loading calendars or preferences: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          // Debounce the API call to avoid excessive requests\n          const timeoutId = setTimeout(async () => {\n            const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n              calendars: selectedCalendars\n            });\n            if (!response.data.success) {\n              throw new Error(response.data.message);\n            }\n          }, 500); // Wait 500ms before sending the request\n          \n          // Clear the timeout if the effect runs again before it fires\n          return () => clearTimeout(timeoutId);\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n\n  const handleCalendarSelect = useCallback((cal) => {\n    setSelectedCalendars((prev) => {\n      // Check if we're adding or removing a calendar\n      const isRemovingCalendar = prev.some((selected) => selected.id === cal.id);\n      const newCalendars = isRemovingCalendar\n        ? prev.filter((selected) => selected.id !== cal.id)\n        : [...prev, cal];\n        \n      // Clear events cache when calendars change\n      setEventsCache({});\n      return newCalendars;\n    });\n  }, [setEventsCache]);\n\n  const getEventSummaryFromText = (text) => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n\n  const handleEventClick = (info) => {\n    const { event } = info;\n    \n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n      \n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => \n          slot.start === eventData.start && slot.end === eventData.end\n        );\n        \n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => \n            !(slot.start === eventData.start && slot.end === eventData.end)\n          );\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n      \n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => \n        slot.start === eventData.start && slot.end === eventData.end\n      );\n      \n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n        event.setProp('title', 'Selected Time');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n        event.setProp('title', 'Suggested Time');\n      }\n    } else {\n      // For existing events, show some details in a tooltip or alert\n      const eventTitle = event.title;\n      const eventTime = `${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()}`;\n      const calendarName = event.extendedProps.calendarName || 'Unknown Calendar';\n      \n      // Simple alert for demonstration - in a real app, you might want a tooltip or modal\n      alert(`Event: ${eventTitle}\\nTime: ${eventTime}\\nCalendar: ${calendarName}`);\n    }\n  };\n\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      \n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      \n      if (allSuccessful) {\n        // Add success message to chat\n        setChatMessages(prev => [...prev, { \n          sender: 'bot', \n          type: 'success',\n          content: `All ${selectedSlots.length} events scheduled successfully!` \n        }]);\n        \n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        // Add error message to chat\n        setChatMessages(prev => [...prev, { \n          sender: 'bot', \n          type: 'error',\n          content: `Error: Some events could not be scheduled.` \n        }]);\n      }\n    } catch (error) {\n      // Add error message to chat\n      setChatMessages(prev => [...prev, { \n        sender: 'bot', \n        type: 'error',\n        content: `Error: ${error.response?.data?.message || error.message}` \n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFindDifferentTimes = () => {\n    // Add message to chat\n    setChatMessages(prev => [...prev, { \n      sender: 'bot', \n      content: \"Let's find another time. Please provide more details:\"\n    }]);\n    \n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  \n  const handleDatesSet = (dateInfo) => {\n    console.log(\"Calendar dates changed:\", dateInfo.startStr, \"to\", dateInfo.endStr);\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n    \n    // If calendar is currently showing, fetch events for the new date range\n    if (showCalendar) {\n      console.log(\"Fetching events for new date range\");\n      fetchExistingEvents();\n    }\n  };\n  \n  // Optimize to avoid recalculation on each render\n  const getAllEvents = useCallback(() => {\n    // Start with existing events\n    const allEvents = [...existingEvents];\n    \n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => \n          slot.start === event.start && slot.end === event.end\n        );\n        \n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          textColor: '#ffffff',\n          title: isSelected ? 'Selected Time' : 'Suggested Time',\n          display: 'block',\n          extendedProps: {\n            ...event.extendedProps,\n            suggestedSlot: true\n          }\n        });\n      });\n    }\n    \n    return allEvents;\n  }, [existingEvents, calendarEvents, selectedSlots]);\n\n  // Precalculate events to avoid useMemo in render\n  const currentEvents = getAllEvents();\n\n  // Render calendar in a chat message\n  const renderCalendarMessage = () => {\n    if (!showCalendar) return null;\n    \n    return (\n      <ChatMessage sender=\"bot\" isCalendarView={true} className=\"calendar-message\">\n        <div className=\"calendar-view w-full\">\n          {selectedSlots.length > 0 && (\n            <div className=\"bg-blue-50 border border-blue-100 rounded-lg p-4 mb-4 text-blue-800 font-medium\">\n              <p>Selected {selectedSlots.length} slot(s) - Total time: {calculateTotalHours()}</p>\n            </div>\n          )}\n          <div className=\"calendar-legend\">\n            {/* Legend for suggested/selected slots */}\n            <div className=\"legend-section\">\n              <div className=\"legend-item\">\n                <span className=\"legend-color suggested-event-color\"></span>\n                <span>Suggested Work Slots</span>\n              </div>\n              <div className=\"legend-item\">\n                <span className=\"legend-color selected-event-color\"></span>\n                <span>Selected Work Slots</span>\n              </div>\n            </div>\n            \n            {/* Legend for calendars */}\n            <div className=\"legend-section\">\n              <div className=\"legend-title\">Your Calendars:</div>\n              {selectedCalendars.map(cal => (\n                <div className=\"legend-item\" key={cal.id}>\n                  <span \n                    className=\"legend-color\" \n                    style={{ \n                      backgroundColor: cal.backgroundColor || getCalendarColor(cal.id),\n                      border: `1px solid ${cal.borderColor || getCalendarColor(cal.id, true)}`\n                    }}\n                  ></span>\n                  <span>{cal.summary}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Use the memoized calendar component with precalculated events */}\n          <CalendarComponent \n            events={currentEvents}\n            handleEventClick={handleEventClick}\n            handleDatesSet={handleDatesSet}\n            loading={loading || fetchingEvents} \n            renderEventContent={renderEventContent}\n          />\n          \n          <div className=\"flex mt-6 space-x-4\">\n            <button\n              onClick={handleScheduleSelected}\n              disabled={selectedSlots.length === 0 || loading}\n              className={`\n                px-6 py-3 rounded-lg font-medium flex items-center justify-center\n                ${selectedSlots.length === 0 || loading \n                  ? 'bg-gray-300 cursor-not-allowed text-gray-500' \n                  : 'bg-green-600 hover:bg-green-700 text-white shadow-md hover:shadow-lg transition-all duration-200'}\n              `}\n            >\n              {loading ? (\n                <div className=\"flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Scheduling...\n                </div>\n              ) : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`}\n            </button>\n            <button\n              onClick={handleFindDifferentTimes}\n              disabled={loading}\n              className=\"px-6 py-3 bg-red-500 hover:bg-red-600 text-white rounded-lg font-medium shadow-md hover:shadow-lg transition-all duration-200\"\n            >\n              Find Different Times\n            </button>\n          </div>\n        </div>\n      </ChatMessage>\n    );\n  };\n\n  // Format events in a user-friendly way\n  const formatStyledEventList = (responseText) => {\n    // Check if this is a schedule/calendar response with events\n    if ((responseText.includes(\"schedule\") || responseText.includes(\"calendar\") || responseText.includes(\"looks like for\")) && \n        responseText.includes(\"**\") && responseText.includes(\":\")) {\n      try {\n        // Extract date\n        let dateMatch = responseText.match(/for\\s+([A-Za-z]+\\s+\\d+(?:st|nd|rd|th)?,\\s+\\d{4})/i);\n        const dateStr = dateMatch ? dateMatch[1] : \"Today\";\n        \n        // Parse events from the text - improved regex pattern to better capture events\n        const eventPattern = /\\*\\*([0-9:.APM\\s-]+)\\*\\*:\\s*([^*\\n]+?)(?:\\sin\\s+([^*\\n]*))?(?=\\s*\\*\\*|\\s*$)/g;\n        let match;\n        const events = [];\n        \n        while ((match = eventPattern.exec(responseText)) !== null) {\n          const timeRange = match[1].trim();\n          const title = match[2].trim();\n          const location = match[3] ? match[3].trim() : '';\n          \n          // Calculate duration if it's a time range\n          let duration = \"\";\n          if (timeRange.includes(\"-\")) {\n            const [startTime, endTime] = timeRange.split(\"-\").map(t => t.trim());\n            \n            // Simple duration calculation (just for display)\n            try {\n              const parseTime = (timeStr) => {\n                const [time, modifier] = timeStr.split(/\\s+/);\n                let [hours, minutes] = time.split(':').map(Number);\n                if (modifier === 'PM' && hours < 12) hours += 12;\n                if (modifier === 'AM' && hours === 12) hours = 0;\n                return hours * 60 + (minutes || 0);\n              };\n              \n              const startMinutes = parseTime(startTime);\n              const endMinutes = parseTime(endTime);\n              const durationMinutes = endMinutes - startMinutes;\n              \n              if (durationMinutes > 0) {\n                const hours = Math.floor(durationMinutes / 60);\n                const mins = durationMinutes % 60;\n                duration = hours > 0 \n                  ? `${hours} hour${hours > 1 ? 's' : ''}${mins > 0 ? ` ${mins} min` : ''}` \n                  : `${mins} min`;\n              }\n            } catch (e) {\n              console.error(\"Error calculating duration:\", e);\n            }\n          }\n          \n          events.push({\n            timeRange,\n            title,\n            location,\n            duration\n          });\n        }\n        \n        // If we extracted events, format them nicely\n        if (events.length > 0) {\n          // Generate intro text\n          const introMatch = responseText.match(/^([^*]+)/);\n          const introText = introMatch ? introMatch[0].trim() : `Here's your schedule for ${dateStr}:`;\n          \n          // Generate HTML for styled events with distinctive course colors\n          return `\n            <div>\n              <p>${introText}</p>\n              <div class=\"styled-event-list\">\n                <div class=\"event-date\">${dateStr}</div>\n                ${events.length > 0 ? events.map(event => {\n                  // Determine background color based on event title (for courses)\n                  let bgColor = '#e5edff'; // default blue background\n                  let iconColor = '#3b82f6'; // default blue icon\n                  \n                  if (event.title.includes('CMPT 310') || event.title.includes('Cmpt 310')) {\n                    bgColor = '#f3e8ff'; // purple for CMPT 310\n                    iconColor = '#8b5cf6';\n                  } else if (event.title.includes('CMPT 213') || event.title.includes('Cmpt 213')) {\n                    bgColor = '#e0f2fe'; // light blue for CMPT 213\n                    iconColor = '#0ea5e9';\n                  } else if (event.title.includes('CMPT 276') || event.title.includes('Cmpt 276')) {\n                    bgColor = '#dcfce7'; // green for CMPT 276\n                    iconColor = '#22c55e';\n                  } else if (event.title.includes('CMPT 105W') || event.title.includes('Cmpt 105W')) {\n                    bgColor = '#ffedd5'; // orange for CMPT 105W\n                    iconColor = '#f97316';\n                  }\n                  \n                  return `\n                  <div class=\"event-item\">\n                    <div class=\"event-item-icon\" style=\"background-color: ${bgColor}; color: ${iconColor};\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                        <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n                        <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n                        <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n                      </svg>\n                    </div>\n                    <div>\n                      <div class=\"event-time\">${event.timeRange}</div>\n                      <div class=\"event-content\">\n                        <div class=\"event-title\">${event.title}</div>\n                        ${event.location ? `\n                          <div class=\"event-location\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                              <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                              <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                            </svg>\n                            ${event.location}\n                          </div>\n                        ` : ''}\n                        ${event.duration ? `<div class=\"event-duration\">${event.duration}</div>` : ''}\n                      </div>\n                    </div>\n                  </div>\n                  `;\n                }).join('') : `\n                  <div class=\"no-events\">No events scheduled for this day</div>\n                `}\n              </div>\n            </div>\n          `;\n        }\n      } catch (error) {\n        console.error(\"Error formatting events:\", error);\n        // If we encounter an error parsing, return a basic styled format instead\n        return `\n          <div class=\"styled-event-list\">\n            <div class=\"event-item\">\n              <div class=\"event-item-icon\" style=\"background-color: #f5f3ff; color: #8b5cf6;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                  <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n                  <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n                  <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n                </svg>\n              </div>\n              <div class=\"event-content\">\n                <p>${responseText}</p>\n              </div>\n            </div>\n          </div>\n        `;\n      }\n    }\n    \n    // For regular text responses, make them more visually interesting\n    if (!responseText.includes(\"<div\") && !responseText.includes(\"<p\") && !responseText.includes(\"<ul\")) {\n      // If it mentions free time, use a special format\n      if (responseText.toLowerCase().includes(\"free time\") || \n          responseText.toLowerCase().includes(\"available\") || \n          responseText.toLowerCase().includes(\"time slot\")) {\n        return generateFreeTimeHTML(responseText);\n      }\n      \n      // If it's a confirmation or completion message\n      if (responseText.toLowerCase().includes(\"scheduled\") || \n          responseText.toLowerCase().includes(\"created\") || \n          responseText.toLowerCase().includes(\"added\")) {\n        return generateConfirmationHTML(responseText);\n      }\n      \n      // Default enhanced format for other responses\n      return defaultStyledFormat(responseText);\n    }\n    \n    // Return original if no formatting applied\n    return responseText;\n  };\n  \n  // Helper function to calculate duration from a time range\n  const calculateDuration = (timeRange) => {\n    if (!timeRange || !timeRange.includes(\"-\")) return \"\";\n    \n    try {\n      const [startTime, endTime] = timeRange.split(\"-\").map(t => t.trim());\n      \n      const parseTime = (timeStr) => {\n        const [time, modifier] = timeStr.split(/\\s+/);\n        let [hours, minutes] = (time || \"\").split(':').map(Number);\n        minutes = minutes || 0;\n        if (modifier && modifier.toUpperCase() === 'PM' && hours < 12) hours += 12;\n        if (modifier && modifier.toUpperCase() === 'AM' && hours === 12) hours = 0;\n        return hours * 60 + minutes;\n      };\n      \n      const startMinutes = parseTime(startTime);\n      const endMinutes = parseTime(endTime);\n      const durationMinutes = endMinutes - startMinutes;\n      \n      if (durationMinutes > 0) {\n        const hours = Math.floor(durationMinutes / 60);\n        const mins = durationMinutes % 60;\n        return hours > 0 \n          ? `${hours} hour${hours > 1 ? 's' : ''}${mins > 0 ? ` ${mins} min` : ''}` \n          : `${mins} min`;\n      }\n      return \"\";\n    } catch (e) {\n      console.error(\"Error calculating duration:\", e);\n      return \"\";\n    }\n  };\n  \n  // Helper function to generate HTML for events\n  const generateEventHTML = (introText, dateStr, events) => {\n    return `\n      <div>\n        <p>${introText}</p>\n        <div class=\"styled-event-list\">\n          <div class=\"event-date\">${dateStr}</div>\n          ${events.map(event => {\n            // Determine background color based on event title (for courses)\n            let bgColor = '#e5edff'; // default blue background\n            let iconColor = '#3b82f6'; // default blue icon\n            \n            if (event.title.includes('CMPT 310') || event.title.includes('Cmpt 310')) {\n              bgColor = '#f3e8ff'; // purple for CMPT 310\n              iconColor = '#8b5cf6';\n            } else if (event.title.includes('CMPT 213') || event.title.includes('Cmpt 213')) {\n              bgColor = '#e0f2fe'; // light blue for CMPT 213\n              iconColor = '#0ea5e9';\n            } else if (event.title.includes('CMPT 276') || event.title.includes('Cmpt 276')) {\n              bgColor = '#dcfce7'; // green for CMPT 276\n              iconColor = '#22c55e';\n            } else if (event.title.includes('CMPT 105W') || event.title.includes('Cmpt 105W')) {\n              bgColor = '#ffedd5'; // orange for CMPT 105W\n              iconColor = '#f97316';\n            } else if (event.title.includes('OH') || event.title.includes('Office Hours')) {\n              bgColor = '#ffe4e6'; // pink for Office Hours\n              iconColor = '#e11d48';\n            }\n            \n            return `\n            <div class=\"event-item\">\n              <div class=\"event-item-icon\" style=\"background-color: ${bgColor}; color: ${iconColor};\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                  <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n                  <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n                  <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n                </svg>\n              </div>\n              <div>\n                <div class=\"event-time\">${event.timeRange}</div>\n                <div class=\"event-content\">\n                  <div class=\"event-title\">${event.title}</div>\n                  ${event.location ? `\n                    <div class=\"event-location\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                        <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n                        <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n                      </svg>\n                      ${event.location}\n                    </div>\n                  ` : ''}\n                  ${event.duration ? `<div class=\"event-duration\">${event.duration}</div>` : ''}\n                </div>\n              </div>\n            </div>\n            `;\n          }).join('')}\n        </div>\n      </div>\n    `;\n  };\n  \n  // Helper function for free time format\n  const generateFreeTimeHTML = (responseText) => {\n    return `\n      <div class=\"styled-event-list\">\n        <div class=\"event-item\">\n          <div class=\"event-item-icon\" style=\"background-color: #ebf7ee; color: #34d399;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n              <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n            </svg>\n          </div>\n          <div class=\"event-content\">\n            <p>${responseText}</p>\n          </div>\n        </div>\n      </div>\n    `;\n  };\n  \n  // Helper function for confirmation format\n  const generateConfirmationHTML = (responseText) => {\n    return `\n      <div class=\"styled-event-list\">\n        <div class=\"event-item\">\n          <div class=\"event-item-icon\" style=\"background-color: #e5edff; color: #3b82f6;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <polyline points=\"20 6 9 17 4 12\"></polyline>\n            </svg>\n          </div>\n          <div class=\"event-content\">\n            <p>${responseText}</p>\n          </div>\n        </div>\n      </div>\n    `;\n  };\n  \n  // Helper function for default format\n  const defaultStyledFormat = (responseText) => {\n    return `\n      <div class=\"styled-event-list\">\n        <div class=\"event-item\">\n          <div class=\"event-item-icon\" style=\"background-color: #f5f3ff; color: #8b5cf6;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n              <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n              <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n            </svg>\n          </div>\n          <div class=\"event-content\">\n            <p>${responseText}</p>\n          </div>\n        </div>\n      </div>\n    `;\n  };\n  \n  // Render message content based on type\n  const renderMessage = (message, index) => {\n    if (message.type === 'welcome') {\n      return <WelcomeMessage key={index} />;\n    }\n    \n    if (message.type === 'error') {\n      return (\n        <ChatMessage \n          key={index} \n          sender={message.sender} \n          content={`<div class=\"error-content\">${message.content}</div>`} \n        />\n      );\n    }\n    \n    if (message.type === 'success') {\n      return (\n        <ChatMessage \n          key={index} \n          sender={message.sender} \n          content={`<div class=\"success-content\">${message.content}</div>`} \n        />\n      );\n    }\n    \n    // Format event lists in responses\n    const formattedContent = message.sender === 'bot' \n      ? formatStyledEventList(message.content) \n      : message.content;\n    \n    return (\n      <ChatMessage \n        key={index} \n        sender={message.sender} \n        content={formattedContent} \n      />\n    );\n  };\n\n  return (\n    <div className=\"w-full h-full\">\n      <ChatContainer>\n        <div className=\"relative\">\n          <ChatHeader />\n          <SettingsButton \n            onClick={() => setShowSettings(!showSettings)} \n            isOpen={showSettings} \n          />\n        </div>\n        \n        <div className={`settings-transition ${showSettings ? 'settings-open' : 'settings-closed'}`}>\n          {showSettings && (\n            <CalendarSettings \n              calendars={calendars}\n              selected={selectedCalendars}\n              onSelect={handleCalendarSelect}\n              disabled={loading}\n            />\n          )}\n        </div>\n        \n        <ChatMessages>\n          {chatMessages.map((msg, idx) => renderMessage(msg, idx))}\n          {showCalendar && renderCalendarMessage()}\n        </ChatMessages>\n        \n        <ChatInput\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onSubmit={handleSubmit}\n          loading={loading}\n        />\n      </ChatContainer>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App w-full min-h-screen bg-gray-50 py-6\">\n      <div className=\"container mx-auto px-4\">\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">ScheduleSync Assistant</h1>\n        <Suspense fallback={<div className=\"text-center p-10\">Loading application...</div>}>\n          <NaturalLanguageForm />\n        </Suspense>\n      </div>\n      \n      <script dangerouslySetInnerHTML={{\n        __html: `\n          // Directly define functions in the global scope\n          window.scheduleBreak = function(startTime, endTime) {\n            console.log(\"DOM scheduleBreak called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'break',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          window.scheduleTask = function(startTime, endTime) {\n            console.log(\"DOM scheduleTask called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'task',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          // Duration selector functions\n          window.showDurationSelector = function(startTime, endTime, selectorId, displayId, sliderId) {\n            console.log(\"Showing duration selector\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'block';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          window.updateDurationDisplay = function(minutes, displayId) {\n            console.log(\"Updating duration display to\", minutes, \"for\", displayId);\n            const durationDisplay = document.getElementById(displayId);\n            if (!durationDisplay) {\n              console.error(\"Duration display element not found:\", displayId);\n              return;\n            }\n            \n            let display = \"\";\n            if (minutes >= 60) {\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              display = hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\n              if (remainingMinutes > 0) {\n                display += \" \" + remainingMinutes + \" min\";\n              }\n            } else {\n              display = minutes + \" min\";\n            }\n            durationDisplay.textContent = display;\n          };\n          \n          window.scheduleBreakWithDuration = function(startTime, endTime, sliderId) {\n            console.log(\"Scheduling break with duration using slider\", sliderId);\n            const durationSlider = document.getElementById(sliderId);\n            if (!durationSlider) {\n              console.error(\"Duration slider not found:\", sliderId);\n              return;\n            }\n            \n            const durationMinutes = durationSlider.value;\n            console.log(\"Duration selected:\", durationMinutes);\n            \n            const startDateTime = new Date();\n            const [startHours, startMinutes] = startTime.split(':').map(Number);\n            startDateTime.setHours(startHours, startMinutes, 0);\n            \n            // Calculate end time based on selected duration\n            const endDateTime = new Date(startDateTime);\n            endDateTime.setMinutes(startDateTime.getMinutes() + parseInt(durationMinutes));\n            \n            const formattedEndTime = endDateTime.getHours().toString().padStart(2, '0') + ':' + \n                                  endDateTime.getMinutes().toString().padStart(2, '0');\n            \n            console.log(\"Calculated end time:\", formattedEndTime);\n            \n            // Call the existing scheduleBreak function\n            window.scheduleBreak(startTime, formattedEndTime);\n          };\n          \n          window.cancelDurationSelection = function(selectorId) {\n            console.log(\"Canceling duration selection for\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'none';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          console.log(\"Inline scheduling functions defined and attached to window object\");\n        `\n      }} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}