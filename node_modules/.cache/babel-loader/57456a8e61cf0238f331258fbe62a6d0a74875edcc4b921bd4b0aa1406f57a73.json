{"ast":null,"code":"var _jsxFileName = \"/Users/Rushik/Documents/caledar-example/calendar-example-react copy 2/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Chat Message Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessage = ({\n  message,\n  type\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${type}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n// Calendar Selector Component\n_c = ChatMessage;\nconst CalendarSelector = ({\n  calendars,\n  selectedCalendar,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-selector\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCalendar,\n      onChange: e => onSelect(e.target.value),\n      className: \"calendar-select\",\n      children: calendars.map(calendar => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: calendar.id,\n        children: calendar.summary\n      }, calendar.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// Free Time Display Component\n_c2 = CalendarSelector;\nconst FreeTimeDisplay = ({\n  freeSlots\n}) => {\n  if (!freeSlots || freeSlots.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-free-time\",\n      children: \"No free time slots found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"free-time-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Available Time Slots:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"free-slots-list\",\n      children: freeSlots.map((slot, index) => {\n        const startTime = new Date(slot.start).toLocaleString();\n        const endTime = new Date(slot.end).toLocaleString();\n        const duration = Math.round(slot.duration_minutes);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"free-slot-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slot-time\",\n            children: [startTime, \" - \", endTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slot-duration\",\n            children: [\"(\", duration, \" minutes)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n// Event List Component\n_c3 = FreeTimeDisplay;\nconst EventList = ({\n  events\n}) => {\n  if (!events || events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-events\",\n      children: \"No events found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Events:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"events-list\",\n      children: events.map((event, index) => {\n        const startTime = new Date(event.start).toLocaleString();\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"event-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-summary\",\n            children: event.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-time\",\n            children: startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), event.location && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-location\",\n            children: [\"\\uD83D\\uDCCD \", event.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 34\n          }, this), event.htmlLink && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: event.htmlLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"event-link\",\n            children: \"View in Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Calendar Chat Component\n_c4 = EventList;\nfunction CalendarChat() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([{\n    type: 'assistant',\n    content: \"Hi! I'm your calendar assistant. How can I help you today?\"\n  }]);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendar, setSelectedCalendar] = useState('primary');\n  const [colors, setColors] = useState({});\n  const [context, setContext] = useState({\n    selectedCalendar: 'primary',\n    recentQueries: []\n  });\n  const messagesEndRef = useRef(null);\n\n  // Fetch calendars on component mount\n  useEffect(() => {\n    const fetchCalendars = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/get-calendars');\n        if (response.data.success) {\n          setCalendars(response.data.calendars);\n\n          // Set primary calendar as default if available\n          const primaryCalendar = response.data.calendars.find(cal => cal.primary);\n          if (primaryCalendar) {\n            setSelectedCalendar(primaryCalendar.id);\n            setContext(prev => ({\n              ...prev,\n              selectedCalendar: primaryCalendar.id\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching calendars:', error);\n        addMessage('assistant', 'Sorry, I had trouble connecting to your calendars. Please try again later.');\n      }\n    };\n    const fetchColors = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/get-calendar-colors');\n        if (response.data.success) {\n          setColors(response.data.colors);\n        }\n      } catch (error) {\n        console.error('Error fetching colors:', error);\n      }\n    };\n    fetchCalendars();\n    fetchColors();\n  }, []);\n\n  // Scroll to bottom of messages when new messages are added\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Add a message to the chat\n  const addMessage = (type, content) => {\n    setMessages(prevMessages => [...prevMessages, {\n      type,\n      content\n    }]);\n  };\n\n  // Handle calendar selection\n  const handleCalendarSelect = calendarId => {\n    setSelectedCalendar(calendarId);\n    setContext(prev => ({\n      ...prev,\n      selectedCalendar: calendarId\n    }));\n\n    // Update the user about the calendar change\n    const selectedCal = calendars.find(cal => cal.id === calendarId);\n    if (selectedCal) {\n      addMessage('assistant', `I've switched to the \"${selectedCal.summary}\" calendar.`);\n    }\n  };\n\n  // Handle chat submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputText.trim()) return;\n\n    // Add user message to chat\n    addMessage('user', inputText);\n\n    // Add recent query to context\n    const updatedContext = {\n      ...context,\n      recentQueries: [...context.recentQueries, inputText].slice(-5) // Keep last 5 queries\n    };\n    setContext(updatedContext);\n\n    // Clear input and show loading\n    setInputText(\"\");\n    setLoading(true);\n    try {\n      // Send request to backend\n      const response = await axios.post('http://127.0.0.1:5000/api/chat', {\n        message: inputText,\n        context: updatedContext\n      });\n      if (response.data.success) {\n        // Add response message\n        addMessage('assistant', response.data.message);\n\n        // Handle action data based on intent\n        const {\n          intent,\n          action_data\n        } = response.data;\n\n        // Handle different intents with visual components\n        if (intent === 'create_event' && action_data !== null && action_data !== void 0 && action_data.event_created) {\n          // Add link to created event\n          addMessage('system', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-created\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Event created successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), action_data.event_created.eventLink && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: action_data.event_created.eventLink,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"event-link\",\n              children: \"View in Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this));\n        } else if (intent === 'find_free_time' && action_data !== null && action_data !== void 0 && action_data.free_slots) {\n          // Display free time slots\n          addMessage('system', /*#__PURE__*/_jsxDEV(FreeTimeDisplay, {\n            freeSlots: action_data.free_slots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 32\n          }, this));\n        } else if (intent === 'list_events' && action_data !== null && action_data !== void 0 && action_data.events) {\n          // Display list of events\n          addMessage('system', /*#__PURE__*/_jsxDEV(EventList, {\n            events: action_data.events\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 32\n          }, this));\n        } else if (intent === 'update_event' && action_data !== null && action_data !== void 0 && action_data.event_updated) {\n          // Confirm event update\n          addMessage('system', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-updated\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Event updated successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), action_data.event_updated.eventLink && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: action_data.event_updated.eventLink,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"event-link\",\n              children: \"View in Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this));\n        } else if (intent === 'delete_event' && action_data !== null && action_data !== void 0 && action_data.event_deleted) {\n          // Confirm event deletion\n          addMessage('system', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-deleted\",\n            children: \"Event deleted successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 32\n          }, this));\n        }\n      } else {\n        // Handle error response\n        addMessage('assistant', response.data.message || 'Sorry, I encountered an error.');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage('assistant', 'Sorry, I had trouble processing your request. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n\n  // Handle keypress (Enter to submit)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Calendar Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalendarSelector, {\n        calendars: calendars,\n        selectedCalendar: selectedCalendar,\n        onSelect: handleCalendarSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg.content,\n        type: msg.type\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chat-input\",\n        value: inputText,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask about your calendar...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: loading || !inputText.trim(),\n        children: loading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarChat, \"FHpB6rh1h6E2cV2Od1lk4ohz9Cc=\");\n_c5 = CalendarChat;\nexport default CalendarChat;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ChatMessage\");\n$RefreshReg$(_c2, \"CalendarSelector\");\n$RefreshReg$(_c3, \"FreeTimeDisplay\");\n$RefreshReg$(_c4, \"EventList\");\n$RefreshReg$(_c5, \"CalendarChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatMessage","message","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","CalendarSelector","calendars","selectedCalendar","onSelect","value","onChange","e","target","map","calendar","id","summary","_c2","FreeTimeDisplay","freeSlots","length","slot","index","startTime","Date","start","toLocaleString","endTime","end","duration","Math","round","duration_minutes","_c3","EventList","events","event","location","htmlLink","href","rel","_c4","CalendarChat","_s","inputText","setInputText","loading","setLoading","messages","setMessages","content","setCalendars","setSelectedCalendar","colors","setColors","context","setContext","recentQueries","messagesEndRef","fetchCalendars","response","get","data","success","primaryCalendar","find","cal","primary","prev","error","console","addMessage","fetchColors","_messagesEndRef$curre","current","scrollIntoView","behavior","prevMessages","handleCalendarSelect","calendarId","selectedCal","handleSubmit","preventDefault","trim","updatedContext","slice","post","intent","action_data","event_created","eventLink","free_slots","event_updated","event_deleted","handleInputChange","handleKeyPress","key","shiftKey","msg","ref","onSubmit","onKeyPress","placeholder","disabled","_c5","$RefreshReg$"],"sources":["/Users/Rushik/Documents/caledar-example/calendar-example-react copy 2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Chat Message Component\nconst ChatMessage = ({ message, type }) => {\n  return (\n    <div className={`chat-message ${type}`}>\n      <div className=\"message-content\">\n        {message}\n      </div>\n    </div>\n  );\n};\n\n// Calendar Selector Component\nconst CalendarSelector = ({ calendars, selectedCalendar, onSelect }) => {\n  return (\n    <div className=\"calendar-selector\">\n      <select\n        value={selectedCalendar}\n        onChange={(e) => onSelect(e.target.value)}\n        className=\"calendar-select\"\n      >\n        {calendars.map((calendar) => (\n          <option key={calendar.id} value={calendar.id}>\n            {calendar.summary}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\n// Free Time Display Component\nconst FreeTimeDisplay = ({ freeSlots }) => {\n  if (!freeSlots || freeSlots.length === 0) {\n    return <div className=\"no-free-time\">No free time slots found.</div>;\n  }\n\n  return (\n    <div className=\"free-time-display\">\n      <h4>Available Time Slots:</h4>\n      <ul className=\"free-slots-list\">\n        {freeSlots.map((slot, index) => {\n          const startTime = new Date(slot.start).toLocaleString();\n          const endTime = new Date(slot.end).toLocaleString();\n          const duration = Math.round(slot.duration_minutes);\n          \n          return (\n            <li key={index} className=\"free-slot-item\">\n              <span className=\"slot-time\">{startTime} - {endTime}</span>\n              <span className=\"slot-duration\">({duration} minutes)</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\n// Event List Component\nconst EventList = ({ events }) => {\n  if (!events || events.length === 0) {\n    return <div className=\"no-events\">No events found.</div>;\n  }\n\n  return (\n    <div className=\"event-list\">\n      <h4>Events:</h4>\n      <ul className=\"events-list\">\n        {events.map((event, index) => {\n          const startTime = new Date(event.start).toLocaleString();\n          \n          return (\n            <li key={index} className=\"event-item\">\n              <div className=\"event-summary\">{event.summary}</div>\n              <div className=\"event-time\">{startTime}</div>\n              {event.location && <div className=\"event-location\">📍 {event.location}</div>}\n              {event.htmlLink && (\n                <a href={event.htmlLink} target=\"_blank\" rel=\"noopener noreferrer\" className=\"event-link\">\n                  View in Calendar\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\n// Main Calendar Chat Component\nfunction CalendarChat() {\n  const [inputText, setInputText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([\n    { type: 'assistant', content: \"Hi! I'm your calendar assistant. How can I help you today?\" }\n  ]);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendar, setSelectedCalendar] = useState('primary');\n  const [colors, setColors] = useState({});\n  const [context, setContext] = useState({\n    selectedCalendar: 'primary',\n    recentQueries: []\n  });\n  \n  const messagesEndRef = useRef(null);\n  \n  // Fetch calendars on component mount\n  useEffect(() => {\n    const fetchCalendars = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/get-calendars');\n        if (response.data.success) {\n          setCalendars(response.data.calendars);\n          \n          // Set primary calendar as default if available\n          const primaryCalendar = response.data.calendars.find(cal => cal.primary);\n          if (primaryCalendar) {\n            setSelectedCalendar(primaryCalendar.id);\n            setContext(prev => ({ ...prev, selectedCalendar: primaryCalendar.id }));\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching calendars:', error);\n        addMessage('assistant', 'Sorry, I had trouble connecting to your calendars. Please try again later.');\n      }\n    };\n    \n    const fetchColors = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/get-calendar-colors');\n        if (response.data.success) {\n          setColors(response.data.colors);\n        }\n      } catch (error) {\n        console.error('Error fetching colors:', error);\n      }\n    };\n    \n    fetchCalendars();\n    fetchColors();\n  }, []);\n  \n  // Scroll to bottom of messages when new messages are added\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Add a message to the chat\n  const addMessage = (type, content) => {\n    setMessages(prevMessages => [...prevMessages, { type, content }]);\n  };\n  \n  // Handle calendar selection\n  const handleCalendarSelect = (calendarId) => {\n    setSelectedCalendar(calendarId);\n    setContext(prev => ({ ...prev, selectedCalendar: calendarId }));\n    \n    // Update the user about the calendar change\n    const selectedCal = calendars.find(cal => cal.id === calendarId);\n    if (selectedCal) {\n      addMessage('assistant', `I've switched to the \"${selectedCal.summary}\" calendar.`);\n    }\n  };\n  \n  // Handle chat submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!inputText.trim()) return;\n    \n    // Add user message to chat\n    addMessage('user', inputText);\n    \n    // Add recent query to context\n    const updatedContext = {\n      ...context,\n      recentQueries: [...context.recentQueries, inputText].slice(-5) // Keep last 5 queries\n    };\n    setContext(updatedContext);\n    \n    // Clear input and show loading\n    setInputText(\"\");\n    setLoading(true);\n    \n    try {\n      // Send request to backend\n      const response = await axios.post('http://127.0.0.1:5000/api/chat', {\n        message: inputText,\n        context: updatedContext\n      });\n      \n      if (response.data.success) {\n        // Add response message\n        addMessage('assistant', response.data.message);\n        \n        // Handle action data based on intent\n        const { intent, action_data } = response.data;\n        \n        // Handle different intents with visual components\n        if (intent === 'create_event' && action_data?.event_created) {\n          // Add link to created event\n          addMessage('system', (\n            <div className=\"event-created\">\n              <p>Event created successfully!</p>\n              {action_data.event_created.eventLink && (\n                <a \n                  href={action_data.event_created.eventLink} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"event-link\"\n                >\n                  View in Calendar\n                </a>\n              )}\n            </div>\n          ));\n        } else if (intent === 'find_free_time' && action_data?.free_slots) {\n          // Display free time slots\n          addMessage('system', <FreeTimeDisplay freeSlots={action_data.free_slots} />);\n        } else if (intent === 'list_events' && action_data?.events) {\n          // Display list of events\n          addMessage('system', <EventList events={action_data.events} />);\n        } else if (intent === 'update_event' && action_data?.event_updated) {\n          // Confirm event update\n          addMessage('system', (\n            <div className=\"event-updated\">\n              <p>Event updated successfully!</p>\n              {action_data.event_updated.eventLink && (\n                <a \n                  href={action_data.event_updated.eventLink} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"event-link\"\n                >\n                  View in Calendar\n                </a>\n              )}\n            </div>\n          ));\n        } else if (intent === 'delete_event' && action_data?.event_deleted) {\n          // Confirm event deletion\n          addMessage('system', <div className=\"event-deleted\">Event deleted successfully!</div>);\n        }\n      } else {\n        // Handle error response\n        addMessage('assistant', response.data.message || 'Sorry, I encountered an error.');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage('assistant', 'Sorry, I had trouble processing your request. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Handle input change\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  // Handle keypress (Enter to submit)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <div className=\"calendar-chat-container\">\n      <div className=\"chat-header\">\n        <h2>Calendar Assistant</h2>\n        <CalendarSelector \n          calendars={calendars} \n          selectedCalendar={selectedCalendar} \n          onSelect={handleCalendarSelect} \n        />\n      </div>\n      \n      <div className=\"chat-messages\">\n        {messages.map((msg, index) => (\n          <ChatMessage \n            key={index} \n            message={msg.content} \n            type={msg.type} \n          />\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <form className=\"chat-input-form\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"chat-input\"\n          value={inputText}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Ask about your calendar...\"\n          disabled={loading}\n        />\n        <button \n          type=\"submit\" \n          className=\"send-button\"\n          disabled={loading || !inputText.trim()}\n        >\n          {loading ? 'Sending...' : 'Send'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CalendarChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}