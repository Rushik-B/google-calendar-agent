{"ast":null,"code":"var _jsxFileName = \"/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, memo, useMemo, Suspense, lazy } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Remove lazy loading for FullCalendar and its plugins\n// Old code:\n// const FullCalendar = lazy(() => import('@fullcalendar/react'));\n// const dayGridPlugin = lazy(() => import('@fullcalendar/daygrid'));\n// const timeGridPlugin = lazy(() => import('@fullcalendar/timegrid'));\n// const interactionPlugin = lazy(() => import('@fullcalendar/interaction'));\n\n// New code: import synchronously\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n// Define the script at global level to ensure the functions are globally accessible\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setupGlobalFunctions = () => {\n  if (typeof window !== 'undefined') {\n    // Create a custom event for scheduling breaks\n    window.scheduleBreak = (startTime, endTime) => {\n      console.log(\"scheduleBreak called with:\", startTime, endTime);\n      // Dispatch a custom event that the React component can listen for\n      window.dispatchEvent(new CustomEvent('scheduleCalendarItem', {\n        detail: {\n          type: 'break',\n          startTime,\n          endTime\n        }\n      }));\n    };\n\n    // Create a custom event for scheduling tasks  \n    window.scheduleTask = (startTime, endTime) => {\n      console.log(\"scheduleTask called with:\", startTime, endTime);\n      window.dispatchEvent(new CustomEvent('scheduleCalendarItem', {\n        detail: {\n          type: 'task',\n          startTime,\n          endTime\n        }\n      }));\n    };\n\n    // Log to verify functions are attached\n    console.log(\"Global scheduling functions attached:\", typeof window.scheduleBreak === 'function', typeof window.scheduleTask === 'function');\n  }\n};\n\n// Memoize the renderEventContent function to avoid recreating it on each render\nconst renderEventContent = eventInfo => {\n  var _eventInfo$event$exte, _eventInfo$event$exte2, _eventInfo$event$exte3, _eventInfo$event$exte4;\n  // Determine if this is a suggested slot or existing event\n  const isSuggested = ((_eventInfo$event$exte = eventInfo.event.extendedProps) === null || _eventInfo$event$exte === void 0 ? void 0 : _eventInfo$event$exte.suggestedSlot) === true;\n  const isExisting = ((_eventInfo$event$exte2 = eventInfo.event.extendedProps) === null || _eventInfo$event$exte2 === void 0 ? void 0 : _eventInfo$event$exte2.existingEvent) === true;\n\n  // Format the time more cleanly\n  let timeText = eventInfo.timeText || '';\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n\n  // Get the calendar name if available\n  let calendarName = '';\n  if (isExisting && (_eventInfo$event$exte3 = eventInfo.event.extendedProps) !== null && _eventInfo$event$exte3 !== void 0 && _eventInfo$event$exte3.calendarName) {\n    calendarName = `(${eventInfo.event.extendedProps.calendarName})`;\n  }\n\n  // Get the event title with fallback options\n  const title = eventInfo.event.title || ((_eventInfo$event$exte4 = eventInfo.event.extendedProps) === null || _eventInfo$event$exte4 === void 0 ? void 0 : _eventInfo$event$exte4.summary) || (isSuggested ? 'Suggested Time' : 'Event');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [title, \" \", calendarName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// Define the Calendar component outside of the main component\nconst CalendarComponent = /*#__PURE__*/memo(_c = ({\n  events,\n  handleEventClick,\n  handleDatesSet,\n  loading,\n  renderEventContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `calendar-container ${loading ? 'loading' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      events: events,\n      eventClick: handleEventClick,\n      eventContent: renderEventContent,\n      height: \"800px\",\n      nowIndicator: true,\n      datesSet: handleDatesSet,\n      slotMinTime: \"07:00:00\",\n      slotMaxTime: \"23:00:00\",\n      eventTimeFormat: {\n        hour: 'numeric',\n        minute: '2-digit',\n        meridiem: 'short'\n      },\n      slotLabelFormat: {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      },\n      allDaySlot: false,\n      eventDisplay: \"block\",\n      eventBackgroundColor: \"#4285f4\",\n      eventBorderColor: \"#3b78e7\",\n      eventTextColor: \"#ffffff\",\n      displayEventTime: true,\n      displayEventEnd: true,\n      forceEventDuration: true,\n      eventMinHeight: 30,\n      lazyFetching: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n});\n_c2 = CalendarComponent;\nCalendarComponent.displayName = 'CalendarComponent';\n\n// The calendar selection component\nconst CalendarSelectionComponent = /*#__PURE__*/memo(_c3 = ({\n  calendars,\n  selected,\n  onSelect,\n  disabled\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Calendars to Monitor:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), calendars.length > 0 ? calendars.map(cal => /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block',\n        margin: '5px 0',\n        padding: '8px',\n        backgroundColor: selected.some(s => s.id === cal.id) ? '#f0f7ff' : 'transparent',\n        borderRadius: '4px',\n        cursor: disabled ? 'not-allowed' : 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selected.some(s => s.id === cal.id),\n        onChange: () => onSelect(cal),\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '8px',\n          color: cal.primary ? '#1a73e8' : 'inherit',\n          fontWeight: cal.primary ? '500' : 'normal'\n        },\n        children: [cal.summary, \" \", cal.primary ? '(Primary)' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, cal.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading calendars...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n});\n_c4 = CalendarSelectionComponent;\nCalendarSelectionComponent.displayName = 'CalendarSelectionComponent';\nfunction NaturalLanguageForm() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  // Add cache for events data\n  const [eventsCache, setEventsCache] = useState({});\n  const [fetchingEvents, setFetchingEvents] = useState(false);\n\n  // Call the setup function on load\n  useEffect(() => {\n    setupGlobalFunctions();\n  }, []);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Helper function to format date to YYYY-MM-DD\n  const formatDate = date => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  };\n\n  // Helper function to get color for a specific calendar\n  const getCalendarColor = (calendarId, darker = false) => {\n    // Find the calendar in our list\n    const calendar = calendars.find(cal => cal.id === calendarId);\n    if (calendar && calendar.backgroundColor) {\n      // Enhance color vibrancy by ensuring full opacity\n      let color = calendar.backgroundColor;\n\n      // If it's an RGBA color, convert to fully opaque\n      if (color.startsWith('rgba')) {\n        const rgbaPattern = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*[\\d.]+\\s*\\)/;\n        const match = color.match(rgbaPattern);\n        if (match) {\n          color = `rgb(${match[1]}, ${match[2]}, ${match[3]})`;\n        }\n      }\n      if (darker) {\n        // Create a slightly darker version for the border\n        return darkenColor(color, 0.2);\n      }\n      return color;\n    }\n    // Default color if calendar not found - using a more vibrant blue\n    return darker ? '#1565C0' : '#1E88E5';\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    try {\n      // Handle RGB format\n      if (color.startsWith('rgb')) {\n        const rgbPattern = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\n        const match = color.match(rgbPattern);\n        if (match) {\n          let r = parseInt(match[1], 10);\n          let g = parseInt(match[2], 10);\n          let b = parseInt(match[3], 10);\n          r = Math.max(0, Math.floor(r * (1 - amount)));\n          g = Math.max(0, Math.floor(g * (1 - amount)));\n          b = Math.max(0, Math.floor(b * (1 - amount)));\n          return `rgb(${r}, ${g}, ${b})`;\n        }\n      }\n\n      // Remove the hash if it exists for hex colors\n      color = color.replace('#', '');\n\n      // Parse the color\n      let r = parseInt(color.substring(0, 2), 16);\n      let g = parseInt(color.substring(2, 4), 16);\n      let b = parseInt(color.substring(4, 6), 16);\n\n      // Darken the color\n      r = Math.max(0, Math.floor(r * (1 - amount)));\n      g = Math.max(0, Math.floor(g * (1 - amount)));\n      b = Math.max(0, Math.floor(b * (1 - amount)));\n\n      // Convert back to hex\n      return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    } catch (e) {\n      console.error('Error darkening color:', e);\n      return color; // Return original color if there's an error\n    }\n  };\n\n  // Define fetchExistingEvents before it's used in the event listener\n  const fetchExistingEvents = useCallback(async (forceRefresh = false) => {\n    // Prevent multiple simultaneous requests\n    if (fetchingEvents) return;\n    try {\n      setFetchingEvents(true);\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n\n      // Skip logging in production\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\"Fetching events from:\", startDate, \"to\", endDate);\n      }\n\n      // Create the calendar IDs parameter\n      const calendarIds = selectedCalendars.map(cal => cal.id).join(',');\n\n      // Create a cache key based on date range and selected calendars\n      const cacheKey = `${startDate}_${endDate}_${calendarIds}`;\n\n      // Check if we have cached data and not forcing refresh\n      if (!forceRefresh && eventsCache[cacheKey] && eventsCache[cacheKey].expiry > Date.now()) {\n        setExistingEvents(eventsCache[cacheKey].data);\n        setFetchingEvents(false);\n        return;\n      }\n\n      // Add retry logic\n      let retries = 0;\n      const maxRetries = 3;\n      let response;\n      while (retries < maxRetries) {\n        try {\n          response = await axios.get(`http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}&calendars=${calendarIds}`);\n          break; // Success, exit retry loop\n        } catch (err) {\n          const currentRetry = retries; // Capture current value to avoid the loop reference issue\n          retries++;\n          if (currentRetry === maxRetries - 1) throw err;\n          // Wait before retrying (exponential backoff)\n          await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, currentRetry + 1)));\n        }\n      }\n      if (response.data.success) {\n        // Check if there are any events in the response\n        let events = response.data.events || [];\n\n        // If no events are returned and we're in development mode, add some mock events for testing\n        if (events.length === 0 && process.env.NODE_ENV === 'development') {\n          console.log(\"No events returned from API, adding mock events for testing\");\n          // Create a few mock events for the current week\n          const now = new Date();\n          const tomorrow = new Date(now);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          events = [{\n            id: 'mock-1',\n            title: 'Team Meeting',\n            start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0).toISOString(),\n            end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 11, 0).toISOString(),\n            calendarId: 'primary',\n            calendarName: 'Primary Calendar'\n          }, {\n            id: 'mock-2',\n            title: 'Lunch Break',\n            start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 12, 0).toISOString(),\n            end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 13, 0).toISOString(),\n            calendarId: 'primary',\n            calendarName: 'Primary Calendar'\n          }, {\n            id: 'mock-3',\n            title: 'Project Review',\n            start: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 14, 0).toISOString(),\n            end: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 15, 30).toISOString(),\n            calendarId: 'work',\n            calendarName: 'Work Calendar'\n          }];\n        }\n        if (events.length > 0) {\n          // Process all events at once with minimal logging\n          const eventsWithMetadata = events.map(event => ({\n            ...event,\n            title: event.title || event.summary || \"Untitled Event\",\n            existingEvent: true,\n            backgroundColor: event.backgroundColor || getCalendarColor(event.calendarId),\n            borderColor: event.borderColor || getCalendarColor(event.calendarId, true),\n            textColor: event.textColor || '#ffffff',\n            classNames: ['calendar-event'] // Add a class for additional styling\n          }));\n\n          // Update the cache with a 5-minute expiration\n          setEventsCache(prev => ({\n            ...prev,\n            [cacheKey]: {\n              data: eventsWithMetadata,\n              expiry: Date.now() + 5 * 60 * 1000 // 5 minutes\n            }\n          }));\n          setExistingEvents(eventsWithMetadata);\n        } else {\n          setExistingEvents([]);\n        }\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      setError('Failed to load events. Please try again.');\n    } finally {\n      setFetchingEvents(false);\n    }\n  }, [dateRange, formatDate, getCalendarColor, selectedCalendars, eventsCache, fetchingEvents, setError]);\n\n  // Define handleSubmit with useCallback before it's used in handleScheduleItem\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    console.log(\"handleSubmit called with text:\", text);\n    if (!text.trim()) return;\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    setShowCalendar(false);\n    try {\n      console.log(\"Making API call with text:\", text);\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      console.log(\"API response:\", response.data);\n      if (response.data.success) {\n        // Use humanizedResponse from backend if available\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent, we need to render HTML\n            setMessage('');\n            // Use a timeout to ensure state updates don't conflict\n            setTimeout(() => {\n              const messageElement = document.querySelector('.success-message');\n              if (messageElement) {\n                messageElement.innerHTML = response.data.humanizedResponse;\n              } else {\n                // Fallback in case the element isn't found\n                setMessage(response.data.humanizedResponse);\n              }\n            }, 10);\n            setText(\"\");\n          } else {\n            // For other intents, just set the text message\n            setMessage(response.data.humanizedResponse);\n          }\n        }\n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n\n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // eslint-disable-next-line no-unused-vars\n            const requestedHours = response.data.requestedHours;\n            // eslint-disable-next-line no-unused-vars\n            const foundHours = response.data.foundHours;\n            // Use the humanizedResponse for error message if available\n            setError(`INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setMessage(\"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\");\n          }\n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.humanizedResponse || response.data.message}`);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [text, setLoading, setError, setMessage, setAvailableSlots, setCalendarEvents, setSelectedSlots, setShowCalendar, setText, setEventDetails]);\n\n  // Event handler for scheduling items - using useCallback to avoid dependency issues\n  const handleScheduleItem = useCallback(event => {\n    console.log(\"Custom event received:\", event.detail);\n    const {\n      type,\n      startTime,\n      endTime\n    } = event.detail;\n    const startDate = new Date();\n    const formattedDate = startDate.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n    if (type === 'break') {\n      const newText = `Schedule a break on ${formattedDate} from ${startTime} to ${endTime}`;\n      console.log(\"Setting text for break:\", newText);\n      setText(newText);\n      // Submit after React has updated the state\n      setTimeout(() => {\n        handleSubmit({\n          preventDefault: () => {}\n        });\n      }, 50);\n    } else if (type === 'task') {\n      // Show prompt for task name\n      const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n      if (taskName) {\n        const newText = `Schedule ${taskName} on ${formattedDate} from ${startTime} to ${endTime}`;\n        console.log(\"Setting text for task:\", newText);\n        setText(newText);\n        // Submit after React has updated the state\n        setTimeout(() => {\n          handleSubmit({\n            preventDefault: () => {}\n          });\n        }, 50);\n      }\n    }\n  }, [setText, handleSubmit]);\n\n  // Set up event listeners\n  useEffect(() => {\n    window.addEventListener('scheduleCalendarItem', handleScheduleItem);\n\n    // Add event listener for refreshCalendar event\n    const handleRefreshCalendar = () => {\n      if (showCalendar) {\n        console.log(\"Refreshing calendar events via refreshCalendar event\");\n        fetchExistingEvents();\n      }\n    };\n    window.addEventListener('refreshCalendar', handleRefreshCalendar);\n\n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('scheduleCalendarItem', handleScheduleItem);\n      window.removeEventListener('refreshCalendar', handleRefreshCalendar);\n    };\n  }, [handleScheduleItem, fetchExistingEvents, showCalendar]);\n\n  // Fetch existing events when calendar is shown or date range changes\n  useEffect(() => {\n    if (showCalendar) {\n      console.log(\"Fetching existing events because calendar is shown or date range changed\");\n      fetchExistingEvents();\n    }\n  }, [showCalendar, dateRange, fetchExistingEvents]);\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Use Promise.all to fetch calendars and preferences in parallel\n        const [calendarsResponse, prefsResponse] = await Promise.all([axios.get('http://127.0.0.1:5000/api/get-calendars'), axios.get('http://127.0.0.1:5000/api/get-preferred-calendars')]);\n        if (!calendarsResponse.data.success) {\n          throw new Error(`Failed to fetch calendars: ${calendarsResponse.data.message || 'Unknown error'}`);\n        }\n        if (!prefsResponse.data.success) {\n          throw new Error(`Failed to fetch preferred calendars: ${prefsResponse.data.message || 'Unknown error'}`);\n        }\n        const allCalendars = calendarsResponse.data.calendars;\n        const preferredCals = prefsResponse.data.calendars;\n\n        // Update state all at once to avoid multiple re-renders\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data\n          const syncedPrefs = preferredCals.map(pref => allCalendars.find(cal => cal.id === pref.id) || pref);\n          setCalendars(allCalendars);\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          setCalendars(allCalendars);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(`Error loading calendars or preferences: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          // Debounce the API call to avoid excessive requests\n          const timeoutId = setTimeout(async () => {\n            const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n              calendars: selectedCalendars\n            });\n            if (!response.data.success) {\n              throw new Error(response.data.message);\n            }\n          }, 500); // Wait 500ms before sending the request\n\n          // Clear the timeout if the effect runs again before it fires\n          return () => clearTimeout(timeoutId);\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n  const handleCalendarSelect = useCallback(cal => {\n    setSelectedCalendars(prev => {\n      // Check if we're adding or removing a calendar\n      const isRemovingCalendar = prev.some(selected => selected.id === cal.id);\n      const newCalendars = isRemovingCalendar ? prev.filter(selected => selected.id !== cal.id) : [...prev, cal];\n\n      // Clear events cache when calendars change\n      setEventsCache({});\n      return newCalendars;\n    });\n  }, [setEventsCache]);\n  const getEventSummaryFromText = text => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n\n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n\n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => !(slot.start === eventData.start && slot.end === eventData.end));\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n\n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n        event.setProp('title', 'Selected Time');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n        event.setProp('title', 'Suggested Time');\n      }\n    } else {\n      // For existing events, show some details in a tooltip or alert\n      const eventTitle = event.title;\n      const eventTime = `${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()}`;\n      const calendarName = event.extendedProps.calendarName || 'Unknown Calendar';\n\n      // Simple alert for demonstration - in a real app, you might want a tooltip or modal\n      alert(`Event: ${eventTitle}\\nTime: ${eventTime}\\nCalendar: ${calendarName}`);\n    }\n  };\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      if (allSuccessful) {\n        setMessage(`All ${selectedSlots.length} events scheduled successfully!`);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        setError(`Error: Some events could not be scheduled.`);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(`Error: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFindDifferentTimes = () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  const handleDatesSet = dateInfo => {\n    console.log(\"Calendar dates changed:\", dateInfo.startStr, \"to\", dateInfo.endStr);\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n\n    // If calendar is currently showing, fetch events for the new date range\n    if (showCalendar) {\n      console.log(\"Fetching events for new date range\");\n      fetchExistingEvents();\n    }\n  };\n\n  // Optimize to avoid recalculation on each render\n  const getAllEvents = useCallback(() => {\n    // Start with existing events\n    const allEvents = [...existingEvents];\n\n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => slot.start === event.start && slot.end === event.end);\n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          textColor: '#ffffff',\n          title: isSelected ? 'Selected Time' : 'Suggested Time',\n          display: 'block',\n          extendedProps: {\n            ...event.extendedProps,\n            suggestedSlot: true\n          }\n        });\n      });\n    }\n    return allEvents;\n  }, [existingEvents, calendarEvents, selectedSlots]);\n\n  // Precalculate events to avoid useMemo in render\n  const currentEvents = getAllEvents();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"natural-language-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Event with Natural Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarSelectionComponent, {\n      calendars: calendars,\n      selected: selectedCalendars,\n      onSelect: handleCalendarSelect,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      dangerouslySetInnerHTML: {\n        __html: message\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 19\n    }, this), !showCalendar ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Describe your event:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          disabled: loading,\n          rows: 3,\n          placeholder: \"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-view\",\n      children: [selectedSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected \", selectedSlots.length, \" slot(s) - Total time: \", calculateTotalHours()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color suggested-event-color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Suggested Work Slots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color selected-event-color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Selected Work Slots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-title\",\n            children: \"Your Calendars:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 15\n          }, this), selectedCalendars.map(cal => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: cal.backgroundColor || getCalendarColor(cal.id),\n                border: `1px solid ${cal.borderColor || getCalendarColor(cal.id, true)}`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cal.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 19\n            }, this)]\n          }, cal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CalendarComponent, {\n        events: currentEvents,\n        handleEventClick: handleEventClick,\n        handleDatesSet: handleDatesSet,\n        loading: loading || fetchingEvents,\n        renderEventContent: renderEventContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScheduleSelected,\n          disabled: selectedSlots.length === 0 || loading,\n          className: \"confirm-button\",\n          children: loading ? 'Scheduling...' : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindDifferentTimes,\n          disabled: loading,\n          className: \"reject-button\",\n          children: \"Find Different Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 811,\n    columnNumber: 5\n  }, this);\n}\n_s(NaturalLanguageForm, \"7+J3VpHWMvL2Amfn8K7zrvuOHMU=\");\n_c5 = NaturalLanguageForm;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          // Directly define functions in the global scope\n          window.scheduleBreak = function(startTime, endTime) {\n            console.log(\"DOM scheduleBreak called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'break',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          window.scheduleTask = function(startTime, endTime) {\n            console.log(\"DOM scheduleTask called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'task',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          // Duration selector functions\n          window.showDurationSelector = function(startTime, endTime, selectorId, displayId, sliderId) {\n            console.log(\"Showing duration selector\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'block';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          window.updateDurationDisplay = function(minutes, displayId) {\n            console.log(\"Updating duration display to\", minutes, \"for\", displayId);\n            const durationDisplay = document.getElementById(displayId);\n            if (!durationDisplay) {\n              console.error(\"Duration display element not found:\", displayId);\n              return;\n            }\n            \n            let display = \"\";\n            if (minutes >= 60) {\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              display = hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\n              if (remainingMinutes > 0) {\n                display += \" \" + remainingMinutes + \" min\";\n              }\n            } else {\n              display = minutes + \" min\";\n            }\n            durationDisplay.textContent = display;\n          };\n          \n          window.scheduleBreakWithDuration = function(startTime, endTime, sliderId) {\n            console.log(\"Scheduling break with duration using slider\", sliderId);\n            const durationSlider = document.getElementById(sliderId);\n            if (!durationSlider) {\n              console.error(\"Duration slider not found:\", sliderId);\n              return;\n            }\n            \n            const durationMinutes = durationSlider.value;\n            console.log(\"Duration selected:\", durationMinutes);\n            \n            const startDateTime = new Date();\n            const [startHours, startMinutes] = startTime.split(':').map(Number);\n            startDateTime.setHours(startHours, startMinutes, 0);\n            \n            // Calculate end time based on selected duration\n            const endDateTime = new Date(startDateTime);\n            endDateTime.setMinutes(startDateTime.getMinutes() + parseInt(durationMinutes));\n            \n            const formattedEndTime = endDateTime.getHours().toString().padStart(2, '0') + ':' + \n                                  endDateTime.getMinutes().toString().padStart(2, '0');\n            \n            console.log(\"Calculated end time:\", formattedEndTime);\n            \n            // Call the existing scheduleBreak function\n            window.scheduleBreak(startTime, formattedEndTime);\n          };\n          \n          window.cancelDurationSelection = function(selectorId) {\n            console.log(\"Canceling duration selection for\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'none';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          console.log(\"Inline scheduling functions defined and attached to window object\");\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .success-message {\n          white-space: pre-line;\n          line-height: 1.5;\n          padding: 15px;\n          border-radius: 8px;\n          background-color: #f5f5f5;\n          margin: 15px 0;\n        }\n        \n        .success-message b {\n          font-weight: 600;\n        }\n        \n        .time-slot {\n          font-weight: 500;\n          color: #1a73e8;\n        }\n        \n        .free-time-card {\n          background-color: #e8f5e9;\n          border-radius: 8px;\n          padding: 15px;\n          margin: 10px 0;\n        }\n        \n        .free-time-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        \n        .action-button {\n          background-color: #4caf50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.3s;\n        }\n        \n        .action-button:hover {\n          background-color: #388e3c;\n        }\n        \n        .action-button.small {\n          padding: 4px 12px;\n          font-size: 12px;\n        }\n        \n        .slot-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 6px 10px;\n          margin: 8px 0;\n          background-color: #f0f8ff;\n          border-radius: 4px;\n        }\n        \n        .duration-selector {\n          background-color: #f9f9f9;\n          border-radius: 6px;\n          padding: 12px;\n          margin-top: 10px;\n          border: 1px solid #ddd;\n        }\n        \n        .duration-selector input[type=\"range\"] {\n          width: 100%;\n          margin: 10px 0;\n        }\n        \n        .action-button.secondary {\n          background-color: #9e9e9e;\n        }\n        \n        .action-button.secondary:hover {\n          background-color: #757575;\n        }\n        \n        .loading-calendar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 500px;\n          background-color: #f9f9f9;\n          border-radius: 8px;\n          font-size: 18px;\n          color: #666;\n          border: 1px dashed #ddd;\n        }\n        \n        .loading-calendar::after {\n          content: \"\";\n          display: inline-block;\n          width: 20px;\n          height: 20px;\n          margin-left: 10px;\n          border: 3px solid #ddd;\n          border-top-color: #3498db;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n          to {\n            transform: rotate(360deg);\n          }\n        }\n        \n        .calendar-container {\n          position: relative;\n          min-height: 500px;\n        }\n        \n        .calendar-container::before {\n          content: \"\";\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(255, 255, 255, 0.7);\n          z-index: 5;\n          display: none;\n        }\n        \n        .calendar-container.loading::before {\n          display: block;\n        }\n        \n        .fc-event {\n          transition: background-color 0.2s ease;\n        }\n        \n        .fc-event:hover {\n          filter: brightness(110%);\n        }\n        \n        .suggested-event-color {\n          background-color: #8bc34a;\n        }\n        \n        .selected-event-color {\n          background-color: #4caf50;\n        }\n        \n        .event-content {\n          padding: 2px 4px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          font-size: 12px;\n        }\n        \n        .suggested-event {\n          font-weight: bold;\n        }\n        \n        /* Optimize rendering performance */\n        .fc-view-harness {\n          contain: content;\n          will-change: transform;\n        }\n        \n        /* Prevent layout shifts */\n        .natural-language-form {\n          min-height: 800px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading application...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(NaturalLanguageForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 912,\n    columnNumber: 5\n  }, this);\n}\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CalendarComponent$memo\");\n$RefreshReg$(_c2, \"CalendarComponent\");\n$RefreshReg$(_c3, \"CalendarSelectionComponent$memo\");\n$RefreshReg$(_c4, \"CalendarSelectionComponent\");\n$RefreshReg$(_c5, \"NaturalLanguageForm\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","memo","useMemo","Suspense","lazy","axios","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","setupGlobalFunctions","window","scheduleBreak","startTime","endTime","console","log","dispatchEvent","CustomEvent","detail","type","scheduleTask","renderEventContent","eventInfo","_eventInfo$event$exte","_eventInfo$event$exte2","_eventInfo$event$exte3","_eventInfo$event$exte4","isSuggested","event","extendedProps","suggestedSlot","isExisting","existingEvent","timeText","includes","times","split","trim","calendarName","title","summary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","CalendarComponent","_c","events","handleEventClick","handleDatesSet","loading","plugins","initialView","headerToolbar","left","center","right","eventClick","eventContent","height","nowIndicator","datesSet","slotMinTime","slotMaxTime","eventTimeFormat","hour","minute","meridiem","slotLabelFormat","hour12","allDaySlot","eventDisplay","eventBackgroundColor","eventBorderColor","eventTextColor","displayEventTime","displayEventEnd","forceEventDuration","eventMinHeight","lazyFetching","_c2","displayName","CalendarSelectionComponent","_c3","calendars","selected","onSelect","disabled","length","map","cal","style","display","margin","padding","backgroundColor","some","s","id","borderRadius","cursor","checked","onChange","marginLeft","color","primary","fontWeight","_c4","NaturalLanguageForm","_s","text","setText","setLoading","message","setMessage","error","setError","availableSlots","setAvailableSlots","calendarEvents","setCalendarEvents","existingEvents","setExistingEvents","showCalendar","setShowCalendar","eventDetails","setEventDetails","selectedSlots","setSelectedSlots","eventsCache","setEventsCache","fetchingEvents","setFetchingEvents","setCalendars","selectedCalendars","setSelectedCalendars","dateRange","setDateRange","start","Date","end","setDate","getDate","formatDate","date","d","month","getMonth","day","year","getFullYear","join","getCalendarColor","calendarId","darker","calendar","find","startsWith","rgbaPattern","match","darkenColor","amount","rgbPattern","r","parseInt","g","b","Math","max","floor","replace","substring","toString","padStart","e","fetchExistingEvents","forceRefresh","startDate","endDate","process","env","NODE_ENV","calendarIds","cacheKey","expiry","now","data","retries","maxRetries","response","get","err","currentRetry","Promise","resolve","setTimeout","pow","success","tomorrow","toISOString","eventsWithMetadata","borderColor","textColor","classNames","prev","handleSubmit","preventDefault","post","humanizedResponse","intent","messageElement","document","querySelector","innerHTML","insufficientTime","requestedHours","foundHours","getEventSummaryFromText","description","eventLink","_error$response","_error$response$data","handleScheduleItem","formattedDate","toLocaleDateString","newText","taskName","prompt","addEventListener","handleRefreshCalendar","removeEventListener","fetchData","calendarsResponse","prefsResponse","all","Error","allCalendars","preferredCals","syncedPrefs","pref","primaryCal","sendPreferences","timeoutId","clearTimeout","handleCalendarSelect","isRemovingCalendar","newCalendars","filter","firstSentence","info","eventData","isAlreadySelected","slot","isSelected","setProp","eventTitle","eventTime","toLocaleTimeString","alert","calculateTotalHours","totalMinutes","forEach","diffMinutes","hours","minutes","handleScheduleSelected","promises","selectedSlot","results","allSuccessful","every","_error$response2","_error$response2$data","handleFindDifferentTimes","dateInfo","startStr","endStr","getAllEvents","allEvents","push","currentEvents","dangerouslySetInnerHTML","__html","onSubmit","value","target","rows","placeholder","required","border","onClick","_c5","App","jsx","fallback","_c6","$RefreshReg$"],"sources":["/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo, useMemo, Suspense, lazy } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Remove lazy loading for FullCalendar and its plugins\n// Old code:\n// const FullCalendar = lazy(() => import('@fullcalendar/react'));\n// const dayGridPlugin = lazy(() => import('@fullcalendar/daygrid'));\n// const timeGridPlugin = lazy(() => import('@fullcalendar/timegrid'));\n// const interactionPlugin = lazy(() => import('@fullcalendar/interaction'));\n\n// New code: import synchronously\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n// Define the script at global level to ensure the functions are globally accessible\nconst setupGlobalFunctions = () => {\n  if (typeof window !== 'undefined') {\n    // Create a custom event for scheduling breaks\n    window.scheduleBreak = (startTime, endTime) => {\n      console.log(\"scheduleBreak called with:\", startTime, endTime);\n      // Dispatch a custom event that the React component can listen for\n      window.dispatchEvent(\n        new CustomEvent('scheduleCalendarItem', {\n          detail: {\n            type: 'break',\n            startTime,\n            endTime\n          }\n        })\n      );\n    };\n    \n    // Create a custom event for scheduling tasks  \n    window.scheduleTask = (startTime, endTime) => {\n      console.log(\"scheduleTask called with:\", startTime, endTime);\n      window.dispatchEvent(\n        new CustomEvent('scheduleCalendarItem', {\n          detail: {\n            type: 'task',\n            startTime,\n            endTime\n          }\n        })\n      );\n    };\n    \n    // Log to verify functions are attached\n    console.log(\"Global scheduling functions attached:\", \n      typeof window.scheduleBreak === 'function', \n      typeof window.scheduleTask === 'function');\n  }\n};\n\n// Memoize the renderEventContent function to avoid recreating it on each render\nconst renderEventContent = (eventInfo) => {\n  // Determine if this is a suggested slot or existing event\n  const isSuggested = eventInfo.event.extendedProps?.suggestedSlot === true;\n  const isExisting = eventInfo.event.extendedProps?.existingEvent === true;\n  \n  // Format the time more cleanly\n  let timeText = eventInfo.timeText || '';\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n  \n  // Get the calendar name if available\n  let calendarName = '';\n  if (isExisting && eventInfo.event.extendedProps?.calendarName) {\n    calendarName = `(${eventInfo.event.extendedProps.calendarName})`;\n  }\n  \n  // Get the event title with fallback options\n  const title = eventInfo.event.title || \n                eventInfo.event.extendedProps?.summary || \n                (isSuggested ? 'Suggested Time' : 'Event');\n  \n  return (\n    <div className={`event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`}>\n      <b>{timeText}</b>\n      <i>{title} {calendarName}</i>\n    </div>\n  );\n};\n\n// Define the Calendar component outside of the main component\nconst CalendarComponent = memo(({ \n  events, \n  handleEventClick, \n  handleDatesSet, \n  loading,\n  renderEventContent \n}) => {\n  return (\n    <div className={`calendar-container ${loading ? 'loading' : ''}`}>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"timeGridWeek\"\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        }}\n        events={events}\n        eventClick={handleEventClick}\n        eventContent={renderEventContent}\n        height=\"800px\"\n        nowIndicator={true}\n        datesSet={handleDatesSet}\n        slotMinTime=\"07:00:00\"\n        slotMaxTime=\"23:00:00\"\n        eventTimeFormat={{\n          hour: 'numeric',\n          minute: '2-digit',\n          meridiem: 'short'\n        }}\n        slotLabelFormat={{\n          hour: 'numeric',\n          minute: '2-digit',\n          hour12: true\n        }}\n        allDaySlot={false}\n        eventDisplay=\"block\"\n        eventBackgroundColor=\"#4285f4\"\n        eventBorderColor=\"#3b78e7\"\n        eventTextColor=\"#ffffff\"\n        displayEventTime={true}\n        displayEventEnd={true}\n        forceEventDuration={true}\n        eventMinHeight={30}\n        lazyFetching={true}\n      />\n    </div>\n  );\n});\n\nCalendarComponent.displayName = 'CalendarComponent';\n\n// The calendar selection component\nconst CalendarSelectionComponent = memo(({ calendars, selected, onSelect, disabled }) => {\n  return (\n    <div className=\"calendar-selection\">\n      <h3>Select Calendars to Monitor:</h3>\n      {calendars.length > 0 ? (\n        calendars.map((cal) => (\n          <label key={cal.id} style={{ \n            display: 'block', \n            margin: '5px 0',\n            padding: '8px',\n            backgroundColor: selected.some(s => s.id === cal.id) ? '#f0f7ff' : 'transparent',\n            borderRadius: '4px',\n            cursor: disabled ? 'not-allowed' : 'pointer'\n          }}>\n            <input\n              type=\"checkbox\"\n              checked={selected.some((s) => s.id === cal.id)}\n              onChange={() => onSelect(cal)}\n              disabled={disabled}\n            />\n            <span style={{\n              marginLeft: '8px',\n              color: cal.primary ? '#1a73e8' : 'inherit',\n              fontWeight: cal.primary ? '500' : 'normal'\n            }}>\n              {cal.summary} {cal.primary ? '(Primary)' : ''}\n            </span>\n          </label>\n        ))\n      ) : (\n        <p>Loading calendars...</p>\n      )}\n    </div>\n  );\n});\n\nCalendarSelectionComponent.displayName = 'CalendarSelectionComponent';\n\nfunction NaturalLanguageForm() {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  // Add cache for events data\n  const [eventsCache, setEventsCache] = useState({});\n  const [fetchingEvents, setFetchingEvents] = useState(false);\n  \n  // Call the setup function on load\n  useEffect(() => {\n    setupGlobalFunctions();\n  }, []);\n  \n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Helper function to format date to YYYY-MM-DD\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  };\n\n  // Helper function to get color for a specific calendar\n  const getCalendarColor = (calendarId, darker = false) => {\n    // Find the calendar in our list\n    const calendar = calendars.find(cal => cal.id === calendarId);\n    if (calendar && calendar.backgroundColor) {\n      // Enhance color vibrancy by ensuring full opacity\n      let color = calendar.backgroundColor;\n      \n      // If it's an RGBA color, convert to fully opaque\n      if (color.startsWith('rgba')) {\n        const rgbaPattern = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*[\\d.]+\\s*\\)/;\n        const match = color.match(rgbaPattern);\n        if (match) {\n          color = `rgb(${match[1]}, ${match[2]}, ${match[3]})`;\n        }\n      }\n      \n      if (darker) {\n        // Create a slightly darker version for the border\n        return darkenColor(color, 0.2);\n      }\n      return color;\n    }\n    // Default color if calendar not found - using a more vibrant blue\n    return darker ? '#1565C0' : '#1E88E5';\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    try {\n      // Handle RGB format\n      if (color.startsWith('rgb')) {\n        const rgbPattern = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\n        const match = color.match(rgbPattern);\n        if (match) {\n          let r = parseInt(match[1], 10);\n          let g = parseInt(match[2], 10);\n          let b = parseInt(match[3], 10);\n          \n          r = Math.max(0, Math.floor(r * (1 - amount)));\n          g = Math.max(0, Math.floor(g * (1 - amount)));\n          b = Math.max(0, Math.floor(b * (1 - amount)));\n          \n          return `rgb(${r}, ${g}, ${b})`;\n        }\n      }\n      \n      // Remove the hash if it exists for hex colors\n      color = color.replace('#', '');\n      \n      // Parse the color\n      let r = parseInt(color.substring(0, 2), 16);\n      let g = parseInt(color.substring(2, 4), 16);\n      let b = parseInt(color.substring(4, 6), 16);\n      \n      // Darken the color\n      r = Math.max(0, Math.floor(r * (1 - amount)));\n      g = Math.max(0, Math.floor(g * (1 - amount)));\n      b = Math.max(0, Math.floor(b * (1 - amount)));\n      \n      // Convert back to hex\n      return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    } catch (e) {\n      console.error('Error darkening color:', e);\n      return color; // Return original color if there's an error\n    }\n  };\n\n  // Define fetchExistingEvents before it's used in the event listener\n  const fetchExistingEvents = useCallback(async (forceRefresh = false) => {\n    // Prevent multiple simultaneous requests\n    if (fetchingEvents) return;\n    \n    try {\n      setFetchingEvents(true);\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n      \n      // Skip logging in production\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\"Fetching events from:\", startDate, \"to\", endDate);\n      }\n      \n      // Create the calendar IDs parameter\n      const calendarIds = selectedCalendars.map(cal => cal.id).join(',');\n      \n      // Create a cache key based on date range and selected calendars\n      const cacheKey = `${startDate}_${endDate}_${calendarIds}`;\n      \n      // Check if we have cached data and not forcing refresh\n      if (!forceRefresh && eventsCache[cacheKey] && eventsCache[cacheKey].expiry > Date.now()) {\n        setExistingEvents(eventsCache[cacheKey].data);\n        setFetchingEvents(false);\n        return;\n      }\n      \n      // Add retry logic\n      let retries = 0;\n      const maxRetries = 3;\n      let response;\n      \n      while (retries < maxRetries) {\n        try {\n          response = await axios.get(\n            `http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}&calendars=${calendarIds}`\n          );\n          break; // Success, exit retry loop\n        } catch (err) {\n          const currentRetry = retries; // Capture current value to avoid the loop reference issue\n          retries++;\n          if (currentRetry === maxRetries - 1) throw err;\n          // Wait before retrying (exponential backoff)\n          await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, currentRetry + 1)));\n        }\n      }\n      \n      if (response.data.success) {\n        // Check if there are any events in the response\n        let events = response.data.events || [];\n        \n        // If no events are returned and we're in development mode, add some mock events for testing\n        if (events.length === 0 && process.env.NODE_ENV === 'development') {\n          console.log(\"No events returned from API, adding mock events for testing\");\n          // Create a few mock events for the current week\n          const now = new Date();\n          const tomorrow = new Date(now);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          \n          events = [\n            {\n              id: 'mock-1',\n              title: 'Team Meeting',\n              start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0).toISOString(),\n              end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 11, 0).toISOString(),\n              calendarId: 'primary',\n              calendarName: 'Primary Calendar'\n            },\n            {\n              id: 'mock-2',\n              title: 'Lunch Break',\n              start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 12, 0).toISOString(),\n              end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 13, 0).toISOString(),\n              calendarId: 'primary',\n              calendarName: 'Primary Calendar'\n            },\n            {\n              id: 'mock-3',\n              title: 'Project Review',\n              start: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 14, 0).toISOString(),\n              end: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 15, 30).toISOString(),\n              calendarId: 'work',\n              calendarName: 'Work Calendar'\n            }\n          ];\n        }\n        \n        if (events.length > 0) {\n          // Process all events at once with minimal logging\n          const eventsWithMetadata = events.map(event => ({\n            ...event,\n            title: event.title || event.summary || \"Untitled Event\",\n            existingEvent: true,\n            backgroundColor: event.backgroundColor || getCalendarColor(event.calendarId),\n            borderColor: event.borderColor || getCalendarColor(event.calendarId, true),\n            textColor: event.textColor || '#ffffff',\n            classNames: ['calendar-event']  // Add a class for additional styling\n          }));\n          \n          // Update the cache with a 5-minute expiration\n          setEventsCache(prev => ({\n            ...prev,\n            [cacheKey]: {\n              data: eventsWithMetadata,\n              expiry: Date.now() + 5 * 60 * 1000 // 5 minutes\n            }\n          }));\n          \n          setExistingEvents(eventsWithMetadata);\n        } else {\n          setExistingEvents([]);\n        }\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      setError('Failed to load events. Please try again.');\n    } finally {\n      setFetchingEvents(false);\n    }\n  }, [dateRange, formatDate, getCalendarColor, selectedCalendars, eventsCache, fetchingEvents, setError]);\n\n  // Define handleSubmit with useCallback before it's used in handleScheduleItem\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit called with text:\", text);\n    if (!text.trim()) return;\n\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    setShowCalendar(false);\n\n    try {\n      console.log(\"Making API call with text:\", text);\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      console.log(\"API response:\", response.data);\n\n      if (response.data.success) {\n        // Use humanizedResponse from backend if available\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent, we need to render HTML\n            setMessage('');\n            // Use a timeout to ensure state updates don't conflict\n            setTimeout(() => {\n              const messageElement = document.querySelector('.success-message');\n              if (messageElement) {\n                messageElement.innerHTML = response.data.humanizedResponse;\n              } else {\n                // Fallback in case the element isn't found\n                setMessage(response.data.humanizedResponse);\n              }\n            }, 10);\n            setText(\"\");\n          } else {\n            // For other intents, just set the text message\n            setMessage(response.data.humanizedResponse);\n          }\n        }\n        \n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n          \n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // eslint-disable-next-line no-unused-vars\n            const requestedHours = response.data.requestedHours;\n            // eslint-disable-next-line no-unused-vars\n            const foundHours = response.data.foundHours;\n            // Use the humanizedResponse for error message if available\n            setError(`INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setMessage(\"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\");\n          }\n          \n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.humanizedResponse || response.data.message}`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [text, setLoading, setError, setMessage, setAvailableSlots, setCalendarEvents, \n      setSelectedSlots, setShowCalendar, setText, setEventDetails]);\n\n  // Event handler for scheduling items - using useCallback to avoid dependency issues\n  const handleScheduleItem = useCallback((event) => {\n    console.log(\"Custom event received:\", event.detail);\n    const { type, startTime, endTime } = event.detail;\n    const startDate = new Date();\n    const formattedDate = startDate.toLocaleDateString('en-US', { \n      month: 'long', \n      day: 'numeric',\n      year: 'numeric'\n    });\n    \n    if (type === 'break') {\n      const newText = `Schedule a break on ${formattedDate} from ${startTime} to ${endTime}`;\n      console.log(\"Setting text for break:\", newText);\n      setText(newText);\n      // Submit after React has updated the state\n      setTimeout(() => {\n        handleSubmit({ preventDefault: () => {} });\n      }, 50);\n    } else if (type === 'task') {\n      // Show prompt for task name\n      const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n      if (taskName) {\n        const newText = `Schedule ${taskName} on ${formattedDate} from ${startTime} to ${endTime}`;\n        console.log(\"Setting text for task:\", newText);\n        setText(newText);\n        // Submit after React has updated the state\n        setTimeout(() => {\n          handleSubmit({ preventDefault: () => {} });\n        }, 50);\n      }\n    }\n  }, [setText, handleSubmit]);\n  \n  // Set up event listeners\n  useEffect(() => {\n    window.addEventListener('scheduleCalendarItem', handleScheduleItem);\n    \n    // Add event listener for refreshCalendar event\n    const handleRefreshCalendar = () => {\n      if (showCalendar) {\n        console.log(\"Refreshing calendar events via refreshCalendar event\");\n        fetchExistingEvents();\n      }\n    };\n    \n    window.addEventListener('refreshCalendar', handleRefreshCalendar);\n    \n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('scheduleCalendarItem', handleScheduleItem);\n      window.removeEventListener('refreshCalendar', handleRefreshCalendar);\n    };\n  }, [handleScheduleItem, fetchExistingEvents, showCalendar]);\n\n  // Fetch existing events when calendar is shown or date range changes\n  useEffect(() => {\n    if (showCalendar) {\n      console.log(\"Fetching existing events because calendar is shown or date range changed\");\n      fetchExistingEvents();\n    }\n  }, [showCalendar, dateRange, fetchExistingEvents]);\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Use Promise.all to fetch calendars and preferences in parallel\n        const [calendarsResponse, prefsResponse] = await Promise.all([\n          axios.get('http://127.0.0.1:5000/api/get-calendars'),\n          axios.get('http://127.0.0.1:5000/api/get-preferred-calendars')\n        ]);\n        \n        if (!calendarsResponse.data.success) {\n          throw new Error(`Failed to fetch calendars: ${calendarsResponse.data.message || 'Unknown error'}`);\n        }\n        \n        if (!prefsResponse.data.success) {\n          throw new Error(`Failed to fetch preferred calendars: ${prefsResponse.data.message || 'Unknown error'}`);\n        }\n        \n        const allCalendars = calendarsResponse.data.calendars;\n        const preferredCals = prefsResponse.data.calendars;\n\n        // Update state all at once to avoid multiple re-renders\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data\n          const syncedPrefs = preferredCals.map(pref => \n            allCalendars.find(cal => cal.id === pref.id) || pref\n          );\n          setCalendars(allCalendars);\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          setCalendars(allCalendars);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(`Error loading calendars or preferences: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          // Debounce the API call to avoid excessive requests\n          const timeoutId = setTimeout(async () => {\n            const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n              calendars: selectedCalendars\n            });\n            if (!response.data.success) {\n              throw new Error(response.data.message);\n            }\n          }, 500); // Wait 500ms before sending the request\n          \n          // Clear the timeout if the effect runs again before it fires\n          return () => clearTimeout(timeoutId);\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n\n  const handleCalendarSelect = useCallback((cal) => {\n    setSelectedCalendars((prev) => {\n      // Check if we're adding or removing a calendar\n      const isRemovingCalendar = prev.some((selected) => selected.id === cal.id);\n      const newCalendars = isRemovingCalendar\n        ? prev.filter((selected) => selected.id !== cal.id)\n        : [...prev, cal];\n        \n      // Clear events cache when calendars change\n      setEventsCache({});\n      return newCalendars;\n    });\n  }, [setEventsCache]);\n\n  const getEventSummaryFromText = (text) => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n\n  const handleEventClick = (info) => {\n    const { event } = info;\n    \n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n      \n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => \n          slot.start === eventData.start && slot.end === eventData.end\n        );\n        \n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => \n            !(slot.start === eventData.start && slot.end === eventData.end)\n          );\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n      \n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => \n        slot.start === eventData.start && slot.end === eventData.end\n      );\n      \n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n        event.setProp('title', 'Selected Time');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n        event.setProp('title', 'Suggested Time');\n      }\n    } else {\n      // For existing events, show some details in a tooltip or alert\n      const eventTitle = event.title;\n      const eventTime = `${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()}`;\n      const calendarName = event.extendedProps.calendarName || 'Unknown Calendar';\n      \n      // Simple alert for demonstration - in a real app, you might want a tooltip or modal\n      alert(`Event: ${eventTitle}\\nTime: ${eventTime}\\nCalendar: ${calendarName}`);\n    }\n  };\n\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      \n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      \n      if (allSuccessful) {\n        setMessage(`All ${selectedSlots.length} events scheduled successfully!`);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        setError(`Error: Some events could not be scheduled.`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFindDifferentTimes = () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  \n  const handleDatesSet = (dateInfo) => {\n    console.log(\"Calendar dates changed:\", dateInfo.startStr, \"to\", dateInfo.endStr);\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n    \n    // If calendar is currently showing, fetch events for the new date range\n    if (showCalendar) {\n      console.log(\"Fetching events for new date range\");\n      fetchExistingEvents();\n    }\n  };\n  \n  // Optimize to avoid recalculation on each render\n  const getAllEvents = useCallback(() => {\n    // Start with existing events\n    const allEvents = [...existingEvents];\n    \n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => \n          slot.start === event.start && slot.end === event.end\n        );\n        \n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          textColor: '#ffffff',\n          title: isSelected ? 'Selected Time' : 'Suggested Time',\n          display: 'block',\n          extendedProps: {\n            ...event.extendedProps,\n            suggestedSlot: true\n          }\n        });\n      });\n    }\n    \n    return allEvents;\n  }, [existingEvents, calendarEvents, selectedSlots]);\n\n  // Precalculate events to avoid useMemo in render\n  const currentEvents = getAllEvents();\n\n  return (\n    <div className=\"natural-language-form\">\n      <h2>Create Event with Natural Language</h2>\n\n      <CalendarSelectionComponent \n        calendars={calendars}\n        selected={selectedCalendars}\n        onSelect={handleCalendarSelect}\n        disabled={loading}\n      />\n\n      {error && <div className=\"error-message\">{error}</div>}\n      {message && <div className=\"success-message\" dangerouslySetInnerHTML={{ __html: message }} />}\n\n      {!showCalendar ? (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Describe your event:</label>\n            <textarea\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              disabled={loading}\n              rows={3}\n              placeholder=\"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\"\n              required\n            />\n          </div>\n          <button type=\"submit\" disabled={loading} className=\"submit-button\">\n            {loading ? 'Processing...' : 'Submit'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"calendar-view\">\n          {selectedSlots.length > 0 && (\n            <div className=\"selection-summary\">\n              <p>Selected {selectedSlots.length} slot(s) - Total time: {calculateTotalHours()}</p>\n            </div>\n          )}\n          <div className=\"calendar-legend\">\n            {/* Legend for suggested/selected slots */}\n            <div className=\"legend-section\">\n              <div className=\"legend-item\">\n                <span className=\"legend-color suggested-event-color\"></span>\n                <span>Suggested Work Slots</span>\n              </div>\n              <div className=\"legend-item\">\n                <span className=\"legend-color selected-event-color\"></span>\n                <span>Selected Work Slots</span>\n              </div>\n            </div>\n            \n            {/* Legend for calendars */}\n            <div className=\"legend-section\">\n              <div className=\"legend-title\">Your Calendars:</div>\n              {selectedCalendars.map(cal => (\n                <div className=\"legend-item\" key={cal.id}>\n                  <span \n                    className=\"legend-color\" \n                    style={{ \n                      backgroundColor: cal.backgroundColor || getCalendarColor(cal.id),\n                      border: `1px solid ${cal.borderColor || getCalendarColor(cal.id, true)}`\n                    }}\n                  ></span>\n                  <span>{cal.summary}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Use the memoized calendar component with precalculated events */}\n          <CalendarComponent \n            events={currentEvents}\n            handleEventClick={handleEventClick}\n            handleDatesSet={handleDatesSet}\n            loading={loading || fetchingEvents} \n            renderEventContent={renderEventContent}\n          />\n          \n          <div className=\"calendar-actions\">\n            <button\n              onClick={handleScheduleSelected}\n              disabled={selectedSlots.length === 0 || loading}\n              className=\"confirm-button\"\n            >\n              {loading ? 'Scheduling...' : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`}\n            </button>\n            <button\n              onClick={handleFindDifferentTimes}\n              disabled={loading}\n              className=\"reject-button\"\n            >\n              Find Different Times\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <script dangerouslySetInnerHTML={{\n        __html: `\n          // Directly define functions in the global scope\n          window.scheduleBreak = function(startTime, endTime) {\n            console.log(\"DOM scheduleBreak called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'break',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          window.scheduleTask = function(startTime, endTime) {\n            console.log(\"DOM scheduleTask called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'task',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          // Duration selector functions\n          window.showDurationSelector = function(startTime, endTime, selectorId, displayId, sliderId) {\n            console.log(\"Showing duration selector\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'block';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          window.updateDurationDisplay = function(minutes, displayId) {\n            console.log(\"Updating duration display to\", minutes, \"for\", displayId);\n            const durationDisplay = document.getElementById(displayId);\n            if (!durationDisplay) {\n              console.error(\"Duration display element not found:\", displayId);\n              return;\n            }\n            \n            let display = \"\";\n            if (minutes >= 60) {\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              display = hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\n              if (remainingMinutes > 0) {\n                display += \" \" + remainingMinutes + \" min\";\n              }\n            } else {\n              display = minutes + \" min\";\n            }\n            durationDisplay.textContent = display;\n          };\n          \n          window.scheduleBreakWithDuration = function(startTime, endTime, sliderId) {\n            console.log(\"Scheduling break with duration using slider\", sliderId);\n            const durationSlider = document.getElementById(sliderId);\n            if (!durationSlider) {\n              console.error(\"Duration slider not found:\", sliderId);\n              return;\n            }\n            \n            const durationMinutes = durationSlider.value;\n            console.log(\"Duration selected:\", durationMinutes);\n            \n            const startDateTime = new Date();\n            const [startHours, startMinutes] = startTime.split(':').map(Number);\n            startDateTime.setHours(startHours, startMinutes, 0);\n            \n            // Calculate end time based on selected duration\n            const endDateTime = new Date(startDateTime);\n            endDateTime.setMinutes(startDateTime.getMinutes() + parseInt(durationMinutes));\n            \n            const formattedEndTime = endDateTime.getHours().toString().padStart(2, '0') + ':' + \n                                  endDateTime.getMinutes().toString().padStart(2, '0');\n            \n            console.log(\"Calculated end time:\", formattedEndTime);\n            \n            // Call the existing scheduleBreak function\n            window.scheduleBreak(startTime, formattedEndTime);\n          };\n          \n          window.cancelDurationSelection = function(selectorId) {\n            console.log(\"Canceling duration selection for\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'none';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          console.log(\"Inline scheduling functions defined and attached to window object\");\n        `\n      }} />\n      <style jsx=\"true\">{`\n        .success-message {\n          white-space: pre-line;\n          line-height: 1.5;\n          padding: 15px;\n          border-radius: 8px;\n          background-color: #f5f5f5;\n          margin: 15px 0;\n        }\n        \n        .success-message b {\n          font-weight: 600;\n        }\n        \n        .time-slot {\n          font-weight: 500;\n          color: #1a73e8;\n        }\n        \n        .free-time-card {\n          background-color: #e8f5e9;\n          border-radius: 8px;\n          padding: 15px;\n          margin: 10px 0;\n        }\n        \n        .free-time-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        \n        .action-button {\n          background-color: #4caf50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.3s;\n        }\n        \n        .action-button:hover {\n          background-color: #388e3c;\n        }\n        \n        .action-button.small {\n          padding: 4px 12px;\n          font-size: 12px;\n        }\n        \n        .slot-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 6px 10px;\n          margin: 8px 0;\n          background-color: #f0f8ff;\n          border-radius: 4px;\n        }\n        \n        .duration-selector {\n          background-color: #f9f9f9;\n          border-radius: 6px;\n          padding: 12px;\n          margin-top: 10px;\n          border: 1px solid #ddd;\n        }\n        \n        .duration-selector input[type=\"range\"] {\n          width: 100%;\n          margin: 10px 0;\n        }\n        \n        .action-button.secondary {\n          background-color: #9e9e9e;\n        }\n        \n        .action-button.secondary:hover {\n          background-color: #757575;\n        }\n        \n        .loading-calendar {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 500px;\n          background-color: #f9f9f9;\n          border-radius: 8px;\n          font-size: 18px;\n          color: #666;\n          border: 1px dashed #ddd;\n        }\n        \n        .loading-calendar::after {\n          content: \"\";\n          display: inline-block;\n          width: 20px;\n          height: 20px;\n          margin-left: 10px;\n          border: 3px solid #ddd;\n          border-top-color: #3498db;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n          to {\n            transform: rotate(360deg);\n          }\n        }\n        \n        .calendar-container {\n          position: relative;\n          min-height: 500px;\n        }\n        \n        .calendar-container::before {\n          content: \"\";\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(255, 255, 255, 0.7);\n          z-index: 5;\n          display: none;\n        }\n        \n        .calendar-container.loading::before {\n          display: block;\n        }\n        \n        .fc-event {\n          transition: background-color 0.2s ease;\n        }\n        \n        .fc-event:hover {\n          filter: brightness(110%);\n        }\n        \n        .suggested-event-color {\n          background-color: #8bc34a;\n        }\n        \n        .selected-event-color {\n          background-color: #4caf50;\n        }\n        \n        .event-content {\n          padding: 2px 4px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          font-size: 12px;\n        }\n        \n        .suggested-event {\n          font-weight: bold;\n        }\n        \n        /* Optimize rendering performance */\n        .fc-view-harness {\n          contain: content;\n          will-change: transform;\n        }\n        \n        /* Prevent layout shifts */\n        .natural-language-form {\n          min-height: 800px;\n        }\n      `}</style>\n      <Suspense fallback={<div>Loading application...</div>}>\n        <NaturalLanguageForm />\n      </Suspense>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,OAAO;AAC9F,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACjC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC;IACAA,MAAM,CAACC,aAAa,GAAG,CAACC,SAAS,EAAEC,OAAO,KAAK;MAC7CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,SAAS,EAAEC,OAAO,CAAC;MAC7D;MACAH,MAAM,CAACM,aAAa,CAClB,IAAIC,WAAW,CAAC,sBAAsB,EAAE;QACtCC,MAAM,EAAE;UACNC,IAAI,EAAE,OAAO;UACbP,SAAS;UACTC;QACF;MACF,CAAC,CACH,CAAC;IACH,CAAC;;IAED;IACAH,MAAM,CAACU,YAAY,GAAG,CAACR,SAAS,EAAEC,OAAO,KAAK;MAC5CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEH,SAAS,EAAEC,OAAO,CAAC;MAC5DH,MAAM,CAACM,aAAa,CAClB,IAAIC,WAAW,CAAC,sBAAsB,EAAE;QACtCC,MAAM,EAAE;UACNC,IAAI,EAAE,MAAM;UACZP,SAAS;UACTC;QACF;MACF,CAAC,CACH,CAAC;IACH,CAAC;;IAED;IACAC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EACjD,OAAOL,MAAM,CAACC,aAAa,KAAK,UAAU,EAC1C,OAAOD,MAAM,CAACU,YAAY,KAAK,UAAU,CAAC;EAC9C;AACF,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAIC,SAAS,IAAK;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACxC;EACA,MAAMC,WAAW,GAAG,EAAAJ,qBAAA,GAAAD,SAAS,CAACM,KAAK,CAACC,aAAa,cAAAN,qBAAA,uBAA7BA,qBAAA,CAA+BO,aAAa,MAAK,IAAI;EACzE,MAAMC,UAAU,GAAG,EAAAP,sBAAA,GAAAF,SAAS,CAACM,KAAK,CAACC,aAAa,cAAAL,sBAAA,uBAA7BA,sBAAA,CAA+BQ,aAAa,MAAK,IAAI;;EAExE;EACA,IAAIC,QAAQ,GAAGX,SAAS,CAACW,QAAQ,IAAI,EAAE;EACvC,IAAIA,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1B;IACA,MAAMC,KAAK,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;IACjCH,QAAQ,GAAGE,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,GAAG,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;EACtD;;EAEA;EACA,IAAIC,YAAY,GAAG,EAAE;EACrB,IAAIP,UAAU,KAAAN,sBAAA,GAAIH,SAAS,CAACM,KAAK,CAACC,aAAa,cAAAJ,sBAAA,eAA7BA,sBAAA,CAA+Ba,YAAY,EAAE;IAC7DA,YAAY,GAAG,IAAIhB,SAAS,CAACM,KAAK,CAACC,aAAa,CAACS,YAAY,GAAG;EAClE;;EAEA;EACA,MAAMC,KAAK,GAAGjB,SAAS,CAACM,KAAK,CAACW,KAAK,MAAAb,sBAAA,GACrBJ,SAAS,CAACM,KAAK,CAACC,aAAa,cAAAH,sBAAA,uBAA7BA,sBAAA,CAA+Bc,OAAO,MACrCb,WAAW,GAAG,gBAAgB,GAAG,OAAO,CAAC;EAExD,oBACEnB,OAAA;IAAKiC,SAAS,EAAE,iBAAiBd,WAAW,GAAG,iBAAiB,GAAG,gBAAgB,EAAG;IAAAe,QAAA,gBACpFlC,OAAA;MAAAkC,QAAA,EAAIT;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBtC,OAAA;MAAAkC,QAAA,GAAIH,KAAK,EAAC,GAAC,EAACD,YAAY;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;;AAED;AACA,MAAMC,iBAAiB,gBAAGjD,IAAI,CAAAkD,EAAA,GAACA,CAAC;EAC9BC,MAAM;EACNC,gBAAgB;EAChBC,cAAc;EACdC,OAAO;EACP/B;AACF,CAAC,KAAK;EACJ,oBACEb,OAAA;IAAKiC,SAAS,EAAE,sBAAsBW,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAV,QAAA,eAC/DlC,OAAA,CAACL,YAAY;MACXkD,OAAO,EAAE,CAACjD,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;MAC5DgD,WAAW,EAAC,cAAc;MAC1BC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAE;MACFT,MAAM,EAAEA,MAAO;MACfU,UAAU,EAAET,gBAAiB;MAC7BU,YAAY,EAAEvC,kBAAmB;MACjCwC,MAAM,EAAC,OAAO;MACdC,YAAY,EAAE,IAAK;MACnBC,QAAQ,EAAEZ,cAAe;MACzBa,WAAW,EAAC,UAAU;MACtBC,WAAW,EAAC,UAAU;MACtBC,eAAe,EAAE;QACfC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE;MACZ,CAAE;MACFC,eAAe,EAAE;QACfH,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBG,MAAM,EAAE;MACV,CAAE;MACFC,UAAU,EAAE,KAAM;MAClBC,YAAY,EAAC,OAAO;MACpBC,oBAAoB,EAAC,SAAS;MAC9BC,gBAAgB,EAAC,SAAS;MAC1BC,cAAc,EAAC,SAAS;MACxBC,gBAAgB,EAAE,IAAK;MACvBC,eAAe,EAAE,IAAK;MACtBC,kBAAkB,EAAE,IAAK;MACzBC,cAAc,EAAE,EAAG;MACnBC,YAAY,EAAE;IAAK;MAAAtC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC,CAAC;AAACoC,GAAA,GAhDGnC,iBAAiB;AAkDvBA,iBAAiB,CAACoC,WAAW,GAAG,mBAAmB;;AAEnD;AACA,MAAMC,0BAA0B,gBAAGtF,IAAI,CAAAuF,GAAA,GAACA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACvF,oBACEjF,OAAA;IAAKiC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjClC,OAAA;MAAAkC,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpCwC,SAAS,CAACI,MAAM,GAAG,CAAC,GACnBJ,SAAS,CAACK,GAAG,CAAEC,GAAG,iBAChBpF,OAAA;MAAoBqF,KAAK,EAAE;QACzBC,OAAO,EAAE,OAAO;QAChBC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE,KAAK;QACdC,eAAe,EAAEV,QAAQ,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKR,GAAG,CAACQ,EAAE,CAAC,GAAG,SAAS,GAAG,aAAa;QAChFC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAEb,QAAQ,GAAG,aAAa,GAAG;MACrC,CAAE;MAAA/C,QAAA,gBACAlC,OAAA;QACEW,IAAI,EAAC,UAAU;QACfoF,OAAO,EAAEhB,QAAQ,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,GAAG,CAACQ,EAAE,CAAE;QAC/CI,QAAQ,EAAEA,CAAA,KAAMhB,QAAQ,CAACI,GAAG,CAAE;QAC9BH,QAAQ,EAAEA;MAAS;QAAA9C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFtC,OAAA;QAAMqF,KAAK,EAAE;UACXY,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAEd,GAAG,CAACe,OAAO,GAAG,SAAS,GAAG,SAAS;UAC1CC,UAAU,EAAEhB,GAAG,CAACe,OAAO,GAAG,KAAK,GAAG;QACpC,CAAE;QAAAjE,QAAA,GACCkD,GAAG,CAACpD,OAAO,EAAC,GAAC,EAACoD,GAAG,CAACe,OAAO,GAAG,WAAW,GAAG,EAAE;MAAA;QAAAhE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GApBG8C,GAAG,CAACQ,EAAE;MAAAzD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBX,CACR,CAAC,gBAEFtC,OAAA;MAAAkC,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC,CAAC;AAAC+D,GAAA,GAlCGzB,0BAA0B;AAoChCA,0BAA0B,CAACD,WAAW,GAAG,4BAA4B;AAErE,SAAS2B,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyD,OAAO,EAAE8D,UAAU,CAAC,GAAGvH,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwH,OAAO,EAAEC,UAAU,CAAC,GAAGzH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0H,KAAK,EAAEC,QAAQ,CAAC,GAAG3H,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM,CAAC4H,cAAc,EAAEC,iBAAiB,CAAC,GAAG7H,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC8H,cAAc,EAAEC,iBAAiB,CAAC,GAAG/H,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgI,cAAc,EAAEC,iBAAiB,CAAC,GAAGjI,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkI,YAAY,EAAEC,eAAe,CAAC,GAAGnI,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACoI,YAAY,EAAEC,eAAe,CAAC,GAAGrI,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACsI,aAAa,EAAEC,gBAAgB,CAAC,GAAGvI,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA,MAAM,CAACwI,WAAW,EAAEC,cAAc,CAAC,GAAGzI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC0I,cAAc,EAAEC,iBAAiB,CAAC,GAAG3I,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACAC,SAAS,CAAC,MAAM;IACda,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAAC6E,SAAS,EAAEiD,YAAY,CAAC,GAAG5I,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC6I,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9I,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC+I,SAAS,EAAEC,YAAY,CAAC,GAAGhJ,QAAQ,CAAC;IACzCiJ,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC;IACjBC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACE,OAAO,CAAC,IAAIF,IAAI,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC5D,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,CAAC,GAAG,IAAIN,IAAI,CAACK,IAAI,CAAC;IACxB,IAAIE,KAAK,GAAG,EAAE,IAAID,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IACnC,IAAIC,GAAG,GAAG,EAAE,GAAGH,CAAC,CAACH,OAAO,CAAC,CAAC;IAC1B,MAAMO,IAAI,GAAGJ,CAAC,CAACK,WAAW,CAAC,CAAC;IAE5B,IAAIJ,KAAK,CAAC1D,MAAM,GAAG,CAAC,EAAE0D,KAAK,GAAG,GAAG,GAAGA,KAAK;IACzC,IAAIE,GAAG,CAAC5D,MAAM,GAAG,CAAC,EAAE4D,GAAG,GAAG,GAAG,GAAGA,GAAG;IAEnC,OAAO,CAACC,IAAI,EAAEH,KAAK,EAAEE,GAAG,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAACC,UAAU,EAAEC,MAAM,GAAG,KAAK,KAAK;IACvD;IACA,MAAMC,QAAQ,GAAGvE,SAAS,CAACwE,IAAI,CAAClE,GAAG,IAAIA,GAAG,CAACQ,EAAE,KAAKuD,UAAU,CAAC;IAC7D,IAAIE,QAAQ,IAAIA,QAAQ,CAAC5D,eAAe,EAAE;MACxC;MACA,IAAIS,KAAK,GAAGmD,QAAQ,CAAC5D,eAAe;;MAEpC;MACA,IAAIS,KAAK,CAACqD,UAAU,CAAC,MAAM,CAAC,EAAE;QAC5B,MAAMC,WAAW,GAAG,0DAA0D;QAC9E,MAAMC,KAAK,GAAGvD,KAAK,CAACuD,KAAK,CAACD,WAAW,CAAC;QACtC,IAAIC,KAAK,EAAE;UACTvD,KAAK,GAAG,OAAOuD,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,GAAG;QACtD;MACF;MAEA,IAAIL,MAAM,EAAE;QACV;QACA,OAAOM,WAAW,CAACxD,KAAK,EAAE,GAAG,CAAC;MAChC;MACA,OAAOA,KAAK;IACd;IACA;IACA,OAAOkD,MAAM,GAAG,SAAS,GAAG,SAAS;EACvC,CAAC;;EAED;EACA,MAAMM,WAAW,GAAGA,CAACxD,KAAK,EAAEyD,MAAM,KAAK;IACrC,IAAI;MACF;MACA,IAAIzD,KAAK,CAACqD,UAAU,CAAC,KAAK,CAAC,EAAE;QAC3B,MAAMK,UAAU,GAAG,4CAA4C;QAC/D,MAAMH,KAAK,GAAGvD,KAAK,CAACuD,KAAK,CAACG,UAAU,CAAC;QACrC,IAAIH,KAAK,EAAE;UACT,IAAII,CAAC,GAAGC,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UAC9B,IAAIM,CAAC,GAAGD,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UAC9B,IAAIO,CAAC,GAAGF,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UAE9BI,CAAC,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACN,CAAC,IAAI,CAAC,GAAGF,MAAM,CAAC,CAAC,CAAC;UAC7CI,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACJ,CAAC,IAAI,CAAC,GAAGJ,MAAM,CAAC,CAAC,CAAC;UAC7CK,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACH,CAAC,IAAI,CAAC,GAAGL,MAAM,CAAC,CAAC,CAAC;UAE7C,OAAO,OAAOE,CAAC,KAAKE,CAAC,KAAKC,CAAC,GAAG;QAChC;MACF;;MAEA;MACA9D,KAAK,GAAGA,KAAK,CAACkE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;;MAE9B;MACA,IAAIP,CAAC,GAAGC,QAAQ,CAAC5D,KAAK,CAACmE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC3C,IAAIN,CAAC,GAAGD,QAAQ,CAAC5D,KAAK,CAACmE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC3C,IAAIL,CAAC,GAAGF,QAAQ,CAAC5D,KAAK,CAACmE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;;MAE3C;MACAR,CAAC,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACN,CAAC,IAAI,CAAC,GAAGF,MAAM,CAAC,CAAC,CAAC;MAC7CI,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACJ,CAAC,IAAI,CAAC,GAAGJ,MAAM,CAAC,CAAC,CAAC;MAC7CK,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACH,CAAC,IAAI,CAAC,GAAGL,MAAM,CAAC,CAAC,CAAC;;MAE7C;MACA,OAAO,IAAIE,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGR,CAAC,CAACO,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGP,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAClH,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVlK,OAAO,CAACuG,KAAK,CAAC,wBAAwB,EAAE2D,CAAC,CAAC;MAC1C,OAAOtE,KAAK,CAAC,CAAC;IAChB;EACF,CAAC;;EAED;EACA,MAAMuE,mBAAmB,GAAGpL,WAAW,CAAC,OAAOqL,YAAY,GAAG,KAAK,KAAK;IACtE;IACA,IAAI7C,cAAc,EAAE;IAEpB,IAAI;MACFC,iBAAiB,CAAC,IAAI,CAAC;MACvB,MAAM6C,SAAS,GAAGlC,UAAU,CAACP,SAAS,CAACE,KAAK,CAAC;MAC7C,MAAMwC,OAAO,GAAGnC,UAAU,CAACP,SAAS,CAACI,GAAG,CAAC;;MAEzC;MACA,IAAIuC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzCzK,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEoK,SAAS,EAAE,IAAI,EAAEC,OAAO,CAAC;MAChE;;MAEA;MACA,MAAMI,WAAW,GAAGhD,iBAAiB,CAAC7C,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACQ,EAAE,CAAC,CAACqD,IAAI,CAAC,GAAG,CAAC;;MAElE;MACA,MAAMgC,QAAQ,GAAG,GAAGN,SAAS,IAAIC,OAAO,IAAII,WAAW,EAAE;;MAEzD;MACA,IAAI,CAACN,YAAY,IAAI/C,WAAW,CAACsD,QAAQ,CAAC,IAAItD,WAAW,CAACsD,QAAQ,CAAC,CAACC,MAAM,GAAG7C,IAAI,CAAC8C,GAAG,CAAC,CAAC,EAAE;QACvF/D,iBAAiB,CAACO,WAAW,CAACsD,QAAQ,CAAC,CAACG,IAAI,CAAC;QAC7CtD,iBAAiB,CAAC,KAAK,CAAC;QACxB;MACF;;MAEA;MACA,IAAIuD,OAAO,GAAG,CAAC;MACf,MAAMC,UAAU,GAAG,CAAC;MACpB,IAAIC,QAAQ;MAEZ,OAAOF,OAAO,GAAGC,UAAU,EAAE;QAC3B,IAAI;UACFC,QAAQ,GAAG,MAAM7L,KAAK,CAAC8L,GAAG,CACxB,8CAA8Cb,SAAS,QAAQC,OAAO,cAAcI,WAAW,EACjG,CAAC;UACD,MAAM,CAAC;QACT,CAAC,CAAC,OAAOS,GAAG,EAAE;UACZ,MAAMC,YAAY,GAAGL,OAAO,CAAC,CAAC;UAC9BA,OAAO,EAAE;UACT,IAAIK,YAAY,KAAKJ,UAAU,GAAG,CAAC,EAAE,MAAMG,GAAG;UAC9C;UACA,MAAM,IAAIE,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,GAAG3B,IAAI,CAAC6B,GAAG,CAAC,CAAC,EAAEJ,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;QACzF;MACF;MAEA,IAAIH,QAAQ,CAACH,IAAI,CAACW,OAAO,EAAE;QACzB;QACA,IAAItJ,MAAM,GAAG8I,QAAQ,CAACH,IAAI,CAAC3I,MAAM,IAAI,EAAE;;QAEvC;QACA,IAAIA,MAAM,CAACyC,MAAM,KAAK,CAAC,IAAI2F,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UACjEzK,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC;UAC1E;UACA,MAAM4K,GAAG,GAAG,IAAI9C,IAAI,CAAC,CAAC;UACtB,MAAM2D,QAAQ,GAAG,IAAI3D,IAAI,CAAC8C,GAAG,CAAC;UAC9Ba,QAAQ,CAACzD,OAAO,CAACyD,QAAQ,CAACxD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;UAExC/F,MAAM,GAAG,CACP;YACEmD,EAAE,EAAE,QAAQ;YACZ7D,KAAK,EAAE,cAAc;YACrBqG,KAAK,EAAE,IAAIC,IAAI,CAAC8C,GAAG,CAACnC,WAAW,CAAC,CAAC,EAAEmC,GAAG,CAACtC,QAAQ,CAAC,CAAC,EAAEsC,GAAG,CAAC3C,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAACyD,WAAW,CAAC,CAAC;YACtF3D,GAAG,EAAE,IAAID,IAAI,CAAC8C,GAAG,CAACnC,WAAW,CAAC,CAAC,EAAEmC,GAAG,CAACtC,QAAQ,CAAC,CAAC,EAAEsC,GAAG,CAAC3C,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAACyD,WAAW,CAAC,CAAC;YACpF9C,UAAU,EAAE,SAAS;YACrBrH,YAAY,EAAE;UAChB,CAAC,EACD;YACE8D,EAAE,EAAE,QAAQ;YACZ7D,KAAK,EAAE,aAAa;YACpBqG,KAAK,EAAE,IAAIC,IAAI,CAAC8C,GAAG,CAACnC,WAAW,CAAC,CAAC,EAAEmC,GAAG,CAACtC,QAAQ,CAAC,CAAC,EAAEsC,GAAG,CAAC3C,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAACyD,WAAW,CAAC,CAAC;YACtF3D,GAAG,EAAE,IAAID,IAAI,CAAC8C,GAAG,CAACnC,WAAW,CAAC,CAAC,EAAEmC,GAAG,CAACtC,QAAQ,CAAC,CAAC,EAAEsC,GAAG,CAAC3C,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAACyD,WAAW,CAAC,CAAC;YACpF9C,UAAU,EAAE,SAAS;YACrBrH,YAAY,EAAE;UAChB,CAAC,EACD;YACE8D,EAAE,EAAE,QAAQ;YACZ7D,KAAK,EAAE,gBAAgB;YACvBqG,KAAK,EAAE,IAAIC,IAAI,CAAC2D,QAAQ,CAAChD,WAAW,CAAC,CAAC,EAAEgD,QAAQ,CAACnD,QAAQ,CAAC,CAAC,EAAEmD,QAAQ,CAACxD,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAACyD,WAAW,CAAC,CAAC;YACrG3D,GAAG,EAAE,IAAID,IAAI,CAAC2D,QAAQ,CAAChD,WAAW,CAAC,CAAC,EAAEgD,QAAQ,CAACnD,QAAQ,CAAC,CAAC,EAAEmD,QAAQ,CAACxD,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAACyD,WAAW,CAAC,CAAC;YACpG9C,UAAU,EAAE,MAAM;YAClBrH,YAAY,EAAE;UAChB,CAAC,CACF;QACH;QAEA,IAAIW,MAAM,CAACyC,MAAM,GAAG,CAAC,EAAE;UACrB;UACA,MAAMgH,kBAAkB,GAAGzJ,MAAM,CAAC0C,GAAG,CAAC/D,KAAK,KAAK;YAC9C,GAAGA,KAAK;YACRW,KAAK,EAAEX,KAAK,CAACW,KAAK,IAAIX,KAAK,CAACY,OAAO,IAAI,gBAAgB;YACvDR,aAAa,EAAE,IAAI;YACnBiE,eAAe,EAAErE,KAAK,CAACqE,eAAe,IAAIyD,gBAAgB,CAAC9H,KAAK,CAAC+H,UAAU,CAAC;YAC5EgD,WAAW,EAAE/K,KAAK,CAAC+K,WAAW,IAAIjD,gBAAgB,CAAC9H,KAAK,CAAC+H,UAAU,EAAE,IAAI,CAAC;YAC1EiD,SAAS,EAAEhL,KAAK,CAACgL,SAAS,IAAI,SAAS;YACvCC,UAAU,EAAE,CAAC,gBAAgB,CAAC,CAAE;UAClC,CAAC,CAAC,CAAC;;UAEH;UACAzE,cAAc,CAAC0E,IAAI,KAAK;YACtB,GAAGA,IAAI;YACP,CAACrB,QAAQ,GAAG;cACVG,IAAI,EAAEc,kBAAkB;cACxBhB,MAAM,EAAE7C,IAAI,CAAC8C,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;YACrC;UACF,CAAC,CAAC,CAAC;UAEH/D,iBAAiB,CAAC8E,kBAAkB,CAAC;QACvC,CAAC,MAAM;UACL9E,iBAAiB,CAAC,EAAE,CAAC;QACvB;MACF,CAAC,MAAM;QACL9G,OAAO,CAACuG,KAAK,CAAC,wBAAwB,EAAE0E,QAAQ,CAACH,IAAI,CAACzE,OAAO,CAAC;MAChE;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdvG,OAAO,CAACuG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,0CAA0C,CAAC;IACtD,CAAC,SAAS;MACRgB,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACI,SAAS,EAAEO,UAAU,EAAES,gBAAgB,EAAElB,iBAAiB,EAAEL,WAAW,EAAEE,cAAc,EAAEf,QAAQ,CAAC,CAAC;;EAEvG;EACA,MAAMyF,YAAY,GAAGlN,WAAW,CAAC,MAAOmL,CAAC,IAAK;IAC5CA,CAAC,CAACgC,cAAc,CAAC,CAAC;IAClBlM,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEiG,IAAI,CAAC;IACnD,IAAI,CAACA,IAAI,CAAC3E,IAAI,CAAC,CAAC,EAAE;IAElB6E,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,EAAE,CAAC;IACdI,iBAAiB,CAAC,EAAE,CAAC;IACrBE,iBAAiB,CAAC,EAAE,CAAC;IACrBQ,gBAAgB,CAAC,EAAE,CAAC;IACpBJ,eAAe,CAAC,KAAK,CAAC;IAEtB,IAAI;MACFhH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEiG,IAAI,CAAC;MAC/C,MAAM+E,QAAQ,GAAG,MAAM7L,KAAK,CAAC+M,IAAI,CAAC,kDAAkD,EAAE;QACpFjG;MACF,CAAC,CAAC;MACFlG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEgL,QAAQ,CAACH,IAAI,CAAC;MAE3C,IAAIG,QAAQ,CAACH,IAAI,CAACW,OAAO,EAAE;QACzB;QACA,IAAIR,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,EAAE;UACnC,IAAInB,QAAQ,CAACH,IAAI,CAACuB,MAAM,KAAK,iBAAiB,EAAE;YAC9C;YACA/F,UAAU,CAAC,EAAE,CAAC;YACd;YACAiF,UAAU,CAAC,MAAM;cACf,MAAMe,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;cACjE,IAAIF,cAAc,EAAE;gBAClBA,cAAc,CAACG,SAAS,GAAGxB,QAAQ,CAACH,IAAI,CAACsB,iBAAiB;cAC5D,CAAC,MAAM;gBACL;gBACA9F,UAAU,CAAC2E,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,CAAC;cAC7C;YACF,CAAC,EAAE,EAAE,CAAC;YACNjG,OAAO,CAAC,EAAE,CAAC;UACb,CAAC,MAAM;YACL;YACAG,UAAU,CAAC2E,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,CAAC;UAC7C;QACF;QAEA,IAAInB,QAAQ,CAACH,IAAI,CAACuB,MAAM,KAAK,WAAW,EAAE;UACxC3F,iBAAiB,CAACuE,QAAQ,CAACH,IAAI,CAACrE,cAAc,CAAC;UAC/CG,iBAAiB,CAACqE,QAAQ,CAACH,IAAI,CAAC3I,MAAM,IAAI,EAAE,CAAC;UAC7C6E,eAAe,CAAC,IAAI,CAAC;;UAErB;UACA,IAAIiE,QAAQ,CAACH,IAAI,CAAC4B,gBAAgB,EAAE;YAClC;YACA,MAAMC,cAAc,GAAG1B,QAAQ,CAACH,IAAI,CAAC6B,cAAc;YACnD;YACA,MAAMC,UAAU,GAAG3B,QAAQ,CAACH,IAAI,CAAC8B,UAAU;YAC3C;YACApG,QAAQ,CAAC,sBAAsByE,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,IAAInB,QAAQ,CAACH,IAAI,CAACzE,OAAO,mDAAmD,CAAC;UAC7I,CAAC,MAAM,IAAI,CAAC4E,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,EAAE;YAC3C;YACA9F,UAAU,CAAC,wGAAwG,CAAC;UACtH;UAEAY,eAAe,CAAC;YACdxF,OAAO,EAAEmL,uBAAuB,CAAC3G,IAAI,CAAC;YACtC4G,WAAW,EAAE5G,IAAI;YACjB2C,UAAU,EAAE;UACd,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIoC,QAAQ,CAACH,IAAI,CAACuB,MAAM,KAAK,aAAa,EAAE;UACjD;UACAlG,OAAO,CAAC,EAAE,CAAC;QACb,CAAC,MAAM,IAAI8E,QAAQ,CAACH,IAAI,CAACuB,MAAM,KAAK,cAAc,IAAI,CAACpB,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,EAAE;UACtF;UACA9F,UAAU,CAAC,kBAAkB2E,QAAQ,CAACH,IAAI,CAACiC,SAAS,GAAG,iBAAiB9B,QAAQ,CAACH,IAAI,CAACiC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC;UACzG5G,OAAO,CAAC,EAAE,CAAC;QACb,CAAC,MAAM;UACL;UACAA,OAAO,CAAC,EAAE,CAAC;QACb;MACF,CAAC,MAAM;QACLK,QAAQ,CAAC,UAAUyE,QAAQ,CAACH,IAAI,CAACsB,iBAAiB,IAAInB,QAAQ,CAACH,IAAI,CAACzE,OAAO,EAAE,CAAC;MAChF;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MAAA,IAAAyG,eAAA,EAAAC,oBAAA;MACdzG,QAAQ,CAAC,UAAU,EAAAwG,eAAA,GAAAzG,KAAK,CAAC0E,QAAQ,cAAA+B,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBlC,IAAI,cAAAmC,oBAAA,uBAApBA,oBAAA,CAAsB5G,OAAO,KAAIE,KAAK,CAACF,OAAO,EAAE,CAAC;IACtE,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACF,IAAI,EAAEE,UAAU,EAAEI,QAAQ,EAAEF,UAAU,EAAEI,iBAAiB,EAAEE,iBAAiB,EAC5EQ,gBAAgB,EAAEJ,eAAe,EAAEb,OAAO,EAAEe,eAAe,CAAC,CAAC;;EAEjE;EACA,MAAMgG,kBAAkB,GAAGnO,WAAW,CAAE+B,KAAK,IAAK;IAChDd,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEa,KAAK,CAACV,MAAM,CAAC;IACnD,MAAM;MAAEC,IAAI;MAAEP,SAAS;MAAEC;IAAQ,CAAC,GAAGe,KAAK,CAACV,MAAM;IACjD,MAAMiK,SAAS,GAAG,IAAItC,IAAI,CAAC,CAAC;IAC5B,MAAMoF,aAAa,GAAG9C,SAAS,CAAC+C,kBAAkB,CAAC,OAAO,EAAE;MAC1D9E,KAAK,EAAE,MAAM;MACbE,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAIpI,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMgN,OAAO,GAAG,uBAAuBF,aAAa,SAASrN,SAAS,OAAOC,OAAO,EAAE;MACtFC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEoN,OAAO,CAAC;MAC/ClH,OAAO,CAACkH,OAAO,CAAC;MAChB;MACA9B,UAAU,CAAC,MAAM;QACfU,YAAY,CAAC;UAAEC,cAAc,EAAEA,CAAA,KAAM,CAAC;QAAE,CAAC,CAAC;MAC5C,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,MAAM,IAAI7L,IAAI,KAAK,MAAM,EAAE;MAC1B;MACA,MAAMiN,QAAQ,GAAGC,MAAM,CAAC,wCAAwC,EAAE,cAAc,CAAC;MACjF,IAAID,QAAQ,EAAE;QACZ,MAAMD,OAAO,GAAG,YAAYC,QAAQ,OAAOH,aAAa,SAASrN,SAAS,OAAOC,OAAO,EAAE;QAC1FC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEoN,OAAO,CAAC;QAC9ClH,OAAO,CAACkH,OAAO,CAAC;QAChB;QACA9B,UAAU,CAAC,MAAM;UACfU,YAAY,CAAC;YAAEC,cAAc,EAAEA,CAAA,KAAM,CAAC;UAAE,CAAC,CAAC;QAC5C,CAAC,EAAE,EAAE,CAAC;MACR;IACF;EACF,CAAC,EAAE,CAAC/F,OAAO,EAAE8F,YAAY,CAAC,CAAC;;EAE3B;EACAnN,SAAS,CAAC,MAAM;IACdc,MAAM,CAAC4N,gBAAgB,CAAC,sBAAsB,EAAEN,kBAAkB,CAAC;;IAEnE;IACA,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;MAClC,IAAI1G,YAAY,EAAE;QAChB/G,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;QACnEkK,mBAAmB,CAAC,CAAC;MACvB;IACF,CAAC;IAEDvK,MAAM,CAAC4N,gBAAgB,CAAC,iBAAiB,EAAEC,qBAAqB,CAAC;;IAEjE;IACA,OAAO,MAAM;MACX7N,MAAM,CAAC8N,mBAAmB,CAAC,sBAAsB,EAAER,kBAAkB,CAAC;MACtEtN,MAAM,CAAC8N,mBAAmB,CAAC,iBAAiB,EAAED,qBAAqB,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,CAACP,kBAAkB,EAAE/C,mBAAmB,EAAEpD,YAAY,CAAC,CAAC;;EAE3D;EACAjI,SAAS,CAAC,MAAM;IACd,IAAIiI,YAAY,EAAE;MAChB/G,OAAO,CAACC,GAAG,CAAC,0EAA0E,CAAC;MACvFkK,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACpD,YAAY,EAAEa,SAAS,EAAEuC,mBAAmB,CAAC,CAAC;;EAElD;EACArL,SAAS,CAAC,MAAM;IACd,MAAM6O,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAM,CAACC,iBAAiB,EAAEC,aAAa,CAAC,GAAG,MAAMxC,OAAO,CAACyC,GAAG,CAAC,CAC3D1O,KAAK,CAAC8L,GAAG,CAAC,yCAAyC,CAAC,EACpD9L,KAAK,CAAC8L,GAAG,CAAC,mDAAmD,CAAC,CAC/D,CAAC;QAEF,IAAI,CAAC0C,iBAAiB,CAAC9C,IAAI,CAACW,OAAO,EAAE;UACnC,MAAM,IAAIsC,KAAK,CAAC,8BAA8BH,iBAAiB,CAAC9C,IAAI,CAACzE,OAAO,IAAI,eAAe,EAAE,CAAC;QACpG;QAEA,IAAI,CAACwH,aAAa,CAAC/C,IAAI,CAACW,OAAO,EAAE;UAC/B,MAAM,IAAIsC,KAAK,CAAC,wCAAwCF,aAAa,CAAC/C,IAAI,CAACzE,OAAO,IAAI,eAAe,EAAE,CAAC;QAC1G;QAEA,MAAM2H,YAAY,GAAGJ,iBAAiB,CAAC9C,IAAI,CAACtG,SAAS;QACrD,MAAMyJ,aAAa,GAAGJ,aAAa,CAAC/C,IAAI,CAACtG,SAAS;;QAElD;QACA,IAAIyJ,aAAa,CAACrJ,MAAM,GAAG,CAAC,EAAE;UAC5B;UACA,MAAMsJ,WAAW,GAAGD,aAAa,CAACpJ,GAAG,CAACsJ,IAAI,IACxCH,YAAY,CAAChF,IAAI,CAAClE,GAAG,IAAIA,GAAG,CAACQ,EAAE,KAAK6I,IAAI,CAAC7I,EAAE,CAAC,IAAI6I,IAClD,CAAC;UACD1G,YAAY,CAACuG,YAAY,CAAC;UAC1BrG,oBAAoB,CAACuG,WAAW,CAAC;QACnC,CAAC,MAAM;UACL,MAAME,UAAU,GAAGJ,YAAY,CAAChF,IAAI,CAAClE,GAAG,IAAIA,GAAG,CAACe,OAAO,CAAC;UACxD4B,YAAY,CAACuG,YAAY,CAAC;UAC1B,IAAII,UAAU,EAAE;YACdzG,oBAAoB,CAAC,CAACyG,UAAU,CAAC,CAAC;UACpC;QACF;MACF,CAAC,CAAC,OAAO7H,KAAK,EAAE;QACdvG,OAAO,CAACuG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,2CAA2CD,KAAK,CAACF,OAAO,EAAE,CAAC;MACtE;IACF,CAAC;IACDsH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7O,SAAS,CAAC,MAAM;IACd,IAAI4I,iBAAiB,CAAC9C,MAAM,GAAG,CAAC,EAAE;MAChC,MAAMyJ,eAAe,GAAG,MAAAA,CAAA,KAAY;QAClC,IAAI;UACF;UACA,MAAMC,SAAS,GAAG/C,UAAU,CAAC,YAAY;YACvC,MAAMN,QAAQ,GAAG,MAAM7L,KAAK,CAAC+M,IAAI,CAAC,mDAAmD,EAAE;cACrF3H,SAAS,EAAEkD;YACb,CAAC,CAAC;YACF,IAAI,CAACuD,QAAQ,CAACH,IAAI,CAACW,OAAO,EAAE;cAC1B,MAAM,IAAIsC,KAAK,CAAC9C,QAAQ,CAACH,IAAI,CAACzE,OAAO,CAAC;YACxC;UACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;UAET;UACA,OAAO,MAAMkI,YAAY,CAACD,SAAS,CAAC;QACtC,CAAC,CAAC,OAAO/H,KAAK,EAAE;UACdvG,OAAO,CAACuG,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;UAC1DC,QAAQ,CAAC,oCAAoC,CAAC;QAChD;MACF,CAAC;MACD6H,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAAC3G,iBAAiB,CAAC,CAAC;EAEvB,MAAM8G,oBAAoB,GAAGzP,WAAW,CAAE+F,GAAG,IAAK;IAChD6C,oBAAoB,CAAEqE,IAAI,IAAK;MAC7B;MACA,MAAMyC,kBAAkB,GAAGzC,IAAI,CAAC5G,IAAI,CAAEX,QAAQ,IAAKA,QAAQ,CAACa,EAAE,KAAKR,GAAG,CAACQ,EAAE,CAAC;MAC1E,MAAMoJ,YAAY,GAAGD,kBAAkB,GACnCzC,IAAI,CAAC2C,MAAM,CAAElK,QAAQ,IAAKA,QAAQ,CAACa,EAAE,KAAKR,GAAG,CAACQ,EAAE,CAAC,GACjD,CAAC,GAAG0G,IAAI,EAAElH,GAAG,CAAC;;MAElB;MACAwC,cAAc,CAAC,CAAC,CAAC,CAAC;MAClB,OAAOoH,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpH,cAAc,CAAC,CAAC;EAEpB,MAAMuF,uBAAuB,GAAI3G,IAAI,IAAK;IACxC,MAAM0I,aAAa,GAAG1I,IAAI,CAAC5E,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,IAAIsN,aAAa,CAAChK,MAAM,IAAI,EAAE,EAAE,OAAOgK,aAAa;IACpD,OAAOA,aAAa,CAAC7E,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;EAC/C,CAAC;EAED,MAAM3H,gBAAgB,GAAIyM,IAAI,IAAK;IACjC,MAAM;MAAE/N;IAAM,CAAC,GAAG+N,IAAI;;IAEtB;IACA,IAAI/N,KAAK,CAACC,aAAa,CAACC,aAAa,EAAE;MACrC,MAAM8N,SAAS,GAAG;QAChBhH,KAAK,EAAEhH,KAAK,CAACgH,KAAK,CAAC6D,WAAW,CAAC,CAAC;QAChC3D,GAAG,EAAElH,KAAK,CAACkH,GAAG,CAAC2D,WAAW,CAAC;MAC7B,CAAC;;MAED;MACAvE,gBAAgB,CAAC4E,IAAI,IAAI;QACvB,MAAM+C,iBAAiB,GAAG/C,IAAI,CAAC5G,IAAI,CAAC4J,IAAI,IACtCA,IAAI,CAAClH,KAAK,KAAKgH,SAAS,CAAChH,KAAK,IAAIkH,IAAI,CAAChH,GAAG,KAAK8G,SAAS,CAAC9G,GAC3D,CAAC;QAED,IAAI+G,iBAAiB,EAAE;UACrB;UACA,OAAO/C,IAAI,CAAC2C,MAAM,CAACK,IAAI,IACrB,EAAEA,IAAI,CAAClH,KAAK,KAAKgH,SAAS,CAAChH,KAAK,IAAIkH,IAAI,CAAChH,GAAG,KAAK8G,SAAS,CAAC9G,GAAG,CAChE,CAAC;QACH,CAAC,MAAM;UACL;UACA,OAAO,CAAC,GAAGgE,IAAI,EAAE8C,SAAS,CAAC;QAC7B;MACF,CAAC,CAAC;;MAEF;MACA,MAAMG,UAAU,GAAG,CAAC9H,aAAa,CAAC/B,IAAI,CAAC4J,IAAI,IACzCA,IAAI,CAAClH,KAAK,KAAKgH,SAAS,CAAChH,KAAK,IAAIkH,IAAI,CAAChH,GAAG,KAAK8G,SAAS,CAAC9G,GAC3D,CAAC;MAED,IAAIiH,UAAU,EAAE;QACdnO,KAAK,CAACoO,OAAO,CAAC,iBAAiB,EAAE,SAAS,CAAC;QAC3CpO,KAAK,CAACoO,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC;QACvCpO,KAAK,CAACoO,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC;MACzC,CAAC,MAAM;QACLpO,KAAK,CAACoO,OAAO,CAAC,iBAAiB,EAAE,SAAS,CAAC;QAC3CpO,KAAK,CAACoO,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC;QACvCpO,KAAK,CAACoO,OAAO,CAAC,OAAO,EAAE,gBAAgB,CAAC;MAC1C;IACF,CAAC,MAAM;MACL;MACA,MAAMC,UAAU,GAAGrO,KAAK,CAACW,KAAK;MAC9B,MAAM2N,SAAS,GAAG,GAAGtO,KAAK,CAACgH,KAAK,CAACuH,kBAAkB,CAAC,CAAC,MAAMvO,KAAK,CAACkH,GAAG,CAACqH,kBAAkB,CAAC,CAAC,EAAE;MAC3F,MAAM7N,YAAY,GAAGV,KAAK,CAACC,aAAa,CAACS,YAAY,IAAI,kBAAkB;;MAE3E;MACA8N,KAAK,CAAC,UAAUH,UAAU,WAAWC,SAAS,eAAe5N,YAAY,EAAE,CAAC;IAC9E;EACF,CAAC;EAED,MAAM+N,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,YAAY,GAAG,CAAC;IACpBrI,aAAa,CAACsI,OAAO,CAACT,IAAI,IAAI;MAC5B,MAAMlH,KAAK,GAAG,IAAIC,IAAI,CAACiH,IAAI,CAAClH,KAAK,CAAC;MAClC,MAAME,GAAG,GAAG,IAAID,IAAI,CAACiH,IAAI,CAAChH,GAAG,CAAC;MAC9B,MAAM0H,WAAW,GAAG,CAAC1H,GAAG,GAAGF,KAAK,KAAK,IAAI,GAAG,EAAE,CAAC;MAC/C0H,YAAY,IAAIE,WAAW;IAC7B,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGhG,IAAI,CAACE,KAAK,CAAC2F,YAAY,GAAG,EAAE,CAAC;IAC3C,MAAMI,OAAO,GAAGjG,IAAI,CAACE,KAAK,CAAC2F,YAAY,GAAG,EAAE,CAAC;IAC7C,OAAO,GAAGG,KAAK,KAAKC,OAAO,GAAG;EAChC,CAAC;EAED,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI1I,aAAa,CAACvC,MAAM,KAAK,CAAC,EAAE;IAEhCwB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAM0J,QAAQ,GAAG3I,aAAa,CAACtC,GAAG,CAACmK,IAAI,IAAI;QACzC,OAAO5P,KAAK,CAAC+M,IAAI,CAAC,kDAAkD,EAAE;UACpE4D,YAAY,EAAEf,IAAI;UAClB/H;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,MAAM+I,OAAO,GAAG,MAAM3E,OAAO,CAACyC,GAAG,CAACgC,QAAQ,CAAC;MAC3C,MAAMG,aAAa,GAAGD,OAAO,CAACE,KAAK,CAAC3G,CAAC,IAAIA,CAAC,CAACuB,IAAI,CAACW,OAAO,CAAC;MAExD,IAAIwE,aAAa,EAAE;QACjB3J,UAAU,CAAC,OAAOa,aAAa,CAACvC,MAAM,iCAAiC,CAAC;QACxEuB,OAAO,CAAC,EAAE,CAAC;QACXa,eAAe,CAAC,KAAK,CAAC;QACtBN,iBAAiB,CAAC,EAAE,CAAC;QACrBE,iBAAiB,CAAC,EAAE,CAAC;QACrBQ,gBAAgB,CAAC,EAAE,CAAC;MACtB,CAAC,MAAM;QACLZ,QAAQ,CAAC,4CAA4C,CAAC;MACxD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA,IAAA4J,gBAAA,EAAAC,qBAAA;MACd5J,QAAQ,CAAC,UAAU,EAAA2J,gBAAA,GAAA5J,KAAK,CAAC0E,QAAQ,cAAAkF,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrF,IAAI,cAAAsF,qBAAA,uBAApBA,qBAAA,CAAsB/J,OAAO,KAAIE,KAAK,CAACF,OAAO,EAAE,CAAC;IACtE,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiK,wBAAwB,GAAGA,CAAA,KAAM;IACrC/J,UAAU,CAAC,uDAAuD,CAAC;IACnEU,eAAe,CAAC,KAAK,CAAC;IACtBN,iBAAiB,CAAC,EAAE,CAAC;IACrBE,iBAAiB,CAAC,EAAE,CAAC;IACrBQ,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAM/E,cAAc,GAAIiO,QAAQ,IAAK;IACnCtQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEqQ,QAAQ,CAACC,QAAQ,EAAE,IAAI,EAAED,QAAQ,CAACE,MAAM,CAAC;IAChF3I,YAAY,CAAC;MACXC,KAAK,EAAEwI,QAAQ,CAACxI,KAAK;MACrBE,GAAG,EAAEsI,QAAQ,CAACtI;IAChB,CAAC,CAAC;;IAEF;IACA,IAAIjB,YAAY,EAAE;MAChB/G,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDkK,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMsG,YAAY,GAAG1R,WAAW,CAAC,MAAM;IACrC;IACA,MAAM2R,SAAS,GAAG,CAAC,GAAG7J,cAAc,CAAC;;IAErC;IACA,IAAIF,cAAc,CAAC/B,MAAM,GAAG,CAAC,EAAE;MAC7B+B,cAAc,CAAC8I,OAAO,CAAC3O,KAAK,IAAI;QAC9B,MAAMmO,UAAU,GAAG9H,aAAa,CAAC/B,IAAI,CAAC4J,IAAI,IACxCA,IAAI,CAAClH,KAAK,KAAKhH,KAAK,CAACgH,KAAK,IAAIkH,IAAI,CAAChH,GAAG,KAAKlH,KAAK,CAACkH,GACnD,CAAC;QAED0I,SAAS,CAACC,IAAI,CAAC;UACb,GAAG7P,KAAK;UACRqE,eAAe,EAAE8J,UAAU,GAAG,SAAS,GAAG,SAAS;UACnDpD,WAAW,EAAEoD,UAAU,GAAG,SAAS,GAAG,SAAS;UAC/CnD,SAAS,EAAE,SAAS;UACpBrK,KAAK,EAAEwN,UAAU,GAAG,eAAe,GAAG,gBAAgB;UACtDjK,OAAO,EAAE,OAAO;UAChBjE,aAAa,EAAE;YACb,GAAGD,KAAK,CAACC,aAAa;YACtBC,aAAa,EAAE;UACjB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA,OAAO0P,SAAS;EAClB,CAAC,EAAE,CAAC7J,cAAc,EAAEF,cAAc,EAAEQ,aAAa,CAAC,CAAC;;EAEnD;EACA,MAAMyJ,aAAa,GAAGH,YAAY,CAAC,CAAC;EAEpC,oBACE/Q,OAAA;IAAKiC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpClC,OAAA;MAAAkC,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3CtC,OAAA,CAAC4E,0BAA0B;MACzBE,SAAS,EAAEA,SAAU;MACrBC,QAAQ,EAAEiD,iBAAkB;MAC5BhD,QAAQ,EAAE8J,oBAAqB;MAC/B7J,QAAQ,EAAErC;IAAQ;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EAEDuE,KAAK,iBAAI7G,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE2E;IAAK;MAAA1E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrDqE,OAAO,iBAAI3G,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAACkP,uBAAuB,EAAE;QAAEC,MAAM,EAAEzK;MAAQ;IAAE;MAAAxE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5F,CAAC+E,YAAY,gBACZrH,OAAA;MAAMqR,QAAQ,EAAE9E,YAAa;MAAArK,QAAA,gBAC3BlC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnCtC,OAAA;UACEsR,KAAK,EAAE9K,IAAK;UACZR,QAAQ,EAAGwE,CAAC,IAAK/D,OAAO,CAAC+D,CAAC,CAAC+G,MAAM,CAACD,KAAK,CAAE;UACzCrM,QAAQ,EAAErC,OAAQ;UAClB4O,IAAI,EAAE,CAAE;UACRC,WAAW,EAAC,gHAAgH;UAC5HC,QAAQ;QAAA;UAAAvP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtC,OAAA;QAAQW,IAAI,EAAC,QAAQ;QAACsE,QAAQ,EAAErC,OAAQ;QAACX,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC/DU,OAAO,GAAG,eAAe,GAAG;MAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAEPtC,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BuF,aAAa,CAACvC,MAAM,GAAG,CAAC,iBACvBlF,OAAA;QAAKiC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChClC,OAAA;UAAAkC,QAAA,GAAG,WAAS,EAACuF,aAAa,CAACvC,MAAM,EAAC,yBAAuB,EAAC2K,mBAAmB,CAAC,CAAC;QAAA;UAAA1N,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CACN,eACDtC,OAAA;QAAKiC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAE9BlC,OAAA;UAAKiC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BlC,OAAA;YAAKiC,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BlC,OAAA;cAAMiC,SAAS,EAAC;YAAoC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5DtC,OAAA;cAAAkC,QAAA,EAAM;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACNtC,OAAA;YAAKiC,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BlC,OAAA;cAAMiC,SAAS,EAAC;YAAmC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3DtC,OAAA;cAAAkC,QAAA,EAAM;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNtC,OAAA;UAAKiC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BlC,OAAA;YAAKiC,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAClD0F,iBAAiB,CAAC7C,GAAG,CAACC,GAAG,iBACxBpF,OAAA;YAAKiC,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BlC,OAAA;cACEiC,SAAS,EAAC,cAAc;cACxBoD,KAAK,EAAE;gBACLI,eAAe,EAAEL,GAAG,CAACK,eAAe,IAAIyD,gBAAgB,CAAC9D,GAAG,CAACQ,EAAE,CAAC;gBAChE+L,MAAM,EAAE,aAAavM,GAAG,CAAC+G,WAAW,IAAIjD,gBAAgB,CAAC9D,GAAG,CAACQ,EAAE,EAAE,IAAI,CAAC;cACxE;YAAE;cAAAzD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRtC,OAAA;cAAAkC,QAAA,EAAOkD,GAAG,CAACpD;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GARM8C,GAAG,CAACQ,EAAE;YAAAzD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASnC,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNtC,OAAA,CAACuC,iBAAiB;QAChBE,MAAM,EAAEyO,aAAc;QACtBxO,gBAAgB,EAAEA,gBAAiB;QACnCC,cAAc,EAAEA,cAAe;QAC/BC,OAAO,EAAEA,OAAO,IAAIiF,cAAe;QACnChH,kBAAkB,EAAEA;MAAmB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eAEFtC,OAAA;QAAKiC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BlC,OAAA;UACE4R,OAAO,EAAEzB,sBAAuB;UAChClL,QAAQ,EAAEwC,aAAa,CAACvC,MAAM,KAAK,CAAC,IAAItC,OAAQ;UAChDX,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAEzBU,OAAO,GAAG,eAAe,GAAG,YAAY6E,aAAa,CAACvC,MAAM,iBAAiBuC,aAAa,CAACvC,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG;QAAE;UAAA/C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/G,CAAC,eACTtC,OAAA;UACE4R,OAAO,EAAEjB,wBAAyB;UAClC1L,QAAQ,EAAErC,OAAQ;UAClBX,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACiE,EAAA,CAttBQD,mBAAmB;AAAAuL,GAAA,GAAnBvL,mBAAmB;AAwtB5B,SAASwL,GAAGA,CAAA,EAAG;EACb,oBACE9R,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlC,OAAA;MAAQmR,uBAAuB,EAAE;QAC/BC,MAAM,EAAE;AAChjP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACLtC,OAAA;MAAO+R,GAAG,EAAC,MAAM;MAAA7P,QAAA,EAAE;AACzeACVtC,OAAA,CAACR,QAAQ;MAACwS,QAAQ,eAAEhS,OAAA;QAAAkC,QAAA,EAAK;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;MAAAJ,QAAA,eACpDlC,OAAA,CAACsG,mBAAmB;QAAAnE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACXtC,OAAA;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC2P,GAAA,GAjSQH,GAAG;AAmSZ,eAAeA,GAAG;AAAC,IAAAtP,EAAA,EAAAkC,GAAA,EAAAG,GAAA,EAAAwB,GAAA,EAAAwL,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAA1P,EAAA;AAAA0P,YAAA,CAAAxN,GAAA;AAAAwN,YAAA,CAAArN,GAAA;AAAAqN,YAAA,CAAA7L,GAAA;AAAA6L,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}