{"ast":null,"code":"var _jsxFileName = \"/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NaturalLanguageForm() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch all calendars\n        const calendarsResponse = await axios.get('http://127.0.0.1:5000/api/get-calendars');\n        if (!calendarsResponse.data.success) {\n          throw new Error('Failed to fetch calendars');\n        }\n        const allCalendars = calendarsResponse.data.calendars;\n        setCalendars(allCalendars);\n\n        // Fetch current preferred calendars\n        const prefsResponse = await axios.get('http://127.0.0.1:5000/api/get-preferred-calendars');\n        if (!prefsResponse.data.success) {\n          throw new Error('Failed to fetch preferred calendars');\n        }\n        const preferredCals = prefsResponse.data.calendars;\n\n        // If there are saved preferences, use them; otherwise, default to primary\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data (e.g., include all fields)\n          const syncedPrefs = preferredCals.map(pref => allCalendars.find(cal => cal.id === pref.id) || pref);\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error loading calendars or preferences.');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n            calendars: selectedCalendars\n          });\n          if (!response.data.success) {\n            throw new Error(response.data.message);\n          }\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n  const fetchExistingEvents = useCallback(async () => {\n    try {\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n      const response = await axios.get(`http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}`);\n      if (response.data.success) {\n        setExistingEvents(response.data.events);\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  }, [dateRange]);\n\n  // Fetch existing events when dateRange changes or when viewing calendar\n  useEffect(() => {\n    if (showCalendar) {\n      fetchExistingEvents();\n    }\n  }, [dateRange, showCalendar, fetchExistingEvents]);\n  const formatDate = date => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  };\n  const handleCalendarSelect = cal => {\n    setSelectedCalendars(prev => {\n      if (prev.some(selected => selected.id === cal.id)) {\n        return prev.filter(selected => selected.id !== cal.id);\n      } else {\n        return [...prev, cal];\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    setShowCalendar(false);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      if (response.data.success) {\n        // Use humanizedResponse from backend if available\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent, we need to render HTML\n            setMessage('');\n            // Use a timeout to ensure state updates don't conflict\n            setTimeout(() => {\n              const messageElement = document.querySelector('.success-message');\n              if (messageElement) {\n                messageElement.innerHTML = response.data.humanizedResponse;\n              } else {\n                // Fallback in case the element isn't found\n                setMessage(response.data.humanizedResponse);\n              }\n            }, 10);\n          } else {\n            // For other intents, just set the text message\n            setMessage(response.data.humanizedResponse);\n          }\n        }\n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n\n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // eslint-disable-next-line no-unused-vars\n            const requestedHours = response.data.requestedHours;\n            // eslint-disable-next-line no-unused-vars\n            const foundHours = response.data.foundHours;\n            // Use the humanizedResponse for error message if available\n            setError(`INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setMessage(\"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\");\n          }\n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.humanizedResponse || response.data.message}`);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getEventSummaryFromText = text => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n\n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n\n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => !(slot.start === eventData.start && slot.end === eventData.end));\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n\n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n      }\n    }\n  };\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      if (allSuccessful) {\n        setMessage(`All ${selectedSlots.length} events scheduled successfully!`);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        setError(`Error: Some events could not be scheduled.`);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(`Error: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFindDifferentTimes = () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  const handleDatesSet = dateInfo => {\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n  };\n  const getAllEvents = () => {\n    // Combine existing events with suggested slots\n    const allEvents = [...existingEvents];\n\n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => slot.start === event.start && slot.end === event.end);\n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          title: isSelected ? 'Selected Time' : 'Suggested Time'\n        });\n      });\n    }\n    return allEvents;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"natural-language-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Event with Natural Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Calendars to Monitor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), calendars.length > 0 ? calendars.map(cal => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCalendars.some(selected => selected.id === cal.id),\n          onChange: () => handleCalendarSelect(cal),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), cal.summary, \" \", cal.primary ? '(Primary)' : '']\n      }, cal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendars...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      dangerouslySetInnerHTML: {\n        __html: message\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 19\n    }, this), !showCalendar ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Describe your event:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          disabled: loading,\n          rows: 3,\n          placeholder: \"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-view\",\n      children: [selectedSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected \", selectedSlots.length, \" slot(s) - Total time: \", calculateTotalHours()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color existing-event-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Existing Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color suggested-event-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Suggested Work Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color selected-event-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selected Work Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          initialView: \"timeGridWeek\",\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          events: getAllEvents(),\n          eventClick: handleEventClick,\n          eventContent: renderEventContent,\n          height: \"800px\",\n          nowIndicator: true,\n          datesSet: handleDatesSet,\n          slotMinTime: \"00:00:00\",\n          slotMaxTime: \"24:00:00\",\n          eventTimeFormat: {\n            hour: 'numeric',\n            minute: '2-digit',\n            meridiem: 'short'\n          },\n          slotLabelFormat: {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true\n          },\n          allDaySlot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScheduleSelected,\n          disabled: selectedSlots.length === 0 || loading,\n          className: \"confirm-button\",\n          children: loading ? 'Scheduling...' : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindDifferentTimes,\n          disabled: loading,\n          className: \"reject-button\",\n          children: \"Find Different Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}\n_s(NaturalLanguageForm, \"41Waygmf8N3n4MLLR0CPa4I7O/U=\");\n_c = NaturalLanguageForm;\nfunction renderEventContent(eventInfo) {\n  const isSuggested = eventInfo.event.extendedProps.suggestedSlot;\n  // eslint-disable-next-line no-unused-vars\n  const isExisting = eventInfo.event.extendedProps.existingEvent;\n\n  // Format the time more cleanly\n  let timeText = eventInfo.timeText;\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .success-message {\n          white-space: pre-line;\n          line-height: 1.5;\n          padding: 15px;\n          border-radius: 8px;\n          background-color: #f5f5f5;\n          margin: 15px 0;\n        }\n        \n        .success-message b {\n          font-weight: 600;\n        }\n        \n        .time-slot {\n          font-weight: 500;\n          color: #1a73e8;\n        }\n        \n        .free-time-card {\n          background-color: #e8f5e9;\n          border-radius: 8px;\n          padding: 15px;\n          margin: 10px 0;\n        }\n        \n        .free-time-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        \n        .action-button {\n          background-color: #4caf50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.3s;\n        }\n        \n        .action-button:hover {\n          background-color: #388e3c;\n        }\n        \n        .action-button.small {\n          padding: 4px 12px;\n          font-size: 12px;\n        }\n        \n        .slot-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 6px 10px;\n          margin: 8px 0;\n          background-color: #f0f8ff;\n          border-radius: 4px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          // Function to schedule a break\n          function scheduleBreak(startTime, endTime) {\n            const textArea = document.querySelector('.natural-language-form textarea');\n            if (textArea) {\n              const startDate = new Date();\n              const formattedDate = startDate.toLocaleDateString('en-US', { \n                month: 'long', \n                day: 'numeric',\n                year: 'numeric'\n              });\n              textArea.value = \"Schedule a break on \" + formattedDate + \" from \" + \n                startTime + \" to \" + endTime;\n              \n              // Trigger the form submission\n              const submitButton = document.querySelector('.submit-button');\n              if (submitButton) {\n                submitButton.click();\n              }\n            }\n          }\n          \n          // Function to schedule a task\n          function scheduleTask(startTime, endTime) {\n            const textArea = document.querySelector('.natural-language-form textarea');\n            if (textArea) {\n              const startDate = new Date();\n              const formattedDate = startDate.toLocaleDateString('en-US', { \n                month: 'long', \n                day: 'numeric',\n                year: 'numeric'\n              });\n              textArea.value = \"Schedule a work session on \" + formattedDate + \" from \" + \n                startTime + \" to \" + endTime;\n              \n              // Show prompt for task name\n              setTimeout(() => {\n                const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n                if (taskName) {\n                  textArea.value = \"Schedule \" + taskName + \" on \" + formattedDate + \n                    \" from \" + startTime + \" to \" + endTime;\n                  \n                  // Trigger the form submission\n                  const submitButton = document.querySelector('.submit-button');\n                  if (submitButton) {\n                    submitButton.click();\n                  }\n                }\n              }, 100);\n            }\n          }\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NaturalLanguageForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NaturalLanguageForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","NaturalLanguageForm","_s","text","setText","loading","setLoading","message","setMessage","error","setError","availableSlots","setAvailableSlots","calendarEvents","setCalendarEvents","existingEvents","setExistingEvents","showCalendar","setShowCalendar","eventDetails","setEventDetails","selectedSlots","setSelectedSlots","calendars","setCalendars","selectedCalendars","setSelectedCalendars","dateRange","setDateRange","start","Date","end","setDate","getDate","fetchData","calendarsResponse","get","data","success","Error","allCalendars","prefsResponse","preferredCals","length","syncedPrefs","map","pref","find","cal","id","primaryCal","primary","console","sendPreferences","response","post","fetchExistingEvents","startDate","formatDate","endDate","events","date","d","month","getMonth","day","year","getFullYear","join","handleCalendarSelect","prev","some","selected","filter","handleSubmit","e","preventDefault","trim","humanizedResponse","intent","setTimeout","messageElement","document","querySelector","innerHTML","insufficientTime","requestedHours","foundHours","summary","getEventSummaryFromText","description","calendarId","eventLink","_error$response","_error$response$data","firstSentence","split","substring","handleEventClick","info","event","extendedProps","suggestedSlot","eventData","toISOString","isAlreadySelected","slot","isSelected","setProp","calculateTotalHours","totalMinutes","forEach","diffMinutes","hours","Math","floor","minutes","handleScheduleSelected","promises","selectedSlot","results","Promise","all","allSuccessful","every","r","_error$response2","_error$response2$data","handleFindDifferentTimes","handleDatesSet","dateInfo","getAllEvents","allEvents","push","backgroundColor","borderColor","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","margin","type","checked","onChange","disabled","dangerouslySetInnerHTML","__html","onSubmit","value","target","rows","placeholder","required","plugins","initialView","headerToolbar","left","center","right","eventClick","eventContent","renderEventContent","height","nowIndicator","datesSet","slotMinTime","slotMaxTime","eventTimeFormat","hour","minute","meridiem","slotLabelFormat","hour12","allDaySlot","onClick","_c","eventInfo","isSuggested","isExisting","existingEvent","timeText","includes","times","App","jsx","_c2","$RefreshReg$"],"sources":["/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nfunction NaturalLanguageForm() {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch all calendars\n        const calendarsResponse = await axios.get('http://127.0.0.1:5000/api/get-calendars');\n        if (!calendarsResponse.data.success) {\n          throw new Error('Failed to fetch calendars');\n        }\n        const allCalendars = calendarsResponse.data.calendars;\n        setCalendars(allCalendars);\n\n        // Fetch current preferred calendars\n        const prefsResponse = await axios.get('http://127.0.0.1:5000/api/get-preferred-calendars');\n        if (!prefsResponse.data.success) {\n          throw new Error('Failed to fetch preferred calendars');\n        }\n        const preferredCals = prefsResponse.data.calendars;\n\n        // If there are saved preferences, use them; otherwise, default to primary\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data (e.g., include all fields)\n          const syncedPrefs = preferredCals.map(pref => \n            allCalendars.find(cal => cal.id === pref.id) || pref\n          );\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error loading calendars or preferences.');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n            calendars: selectedCalendars\n          });\n          if (!response.data.success) {\n            throw new Error(response.data.message);\n          }\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n\n  const fetchExistingEvents = useCallback(async () => {\n    try {\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n      const response = await axios.get(`http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}`);\n      \n      if (response.data.success) {\n        setExistingEvents(response.data.events);\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  }, [dateRange]);\n\n  // Fetch existing events when dateRange changes or when viewing calendar\n  useEffect(() => {\n    if (showCalendar) {\n      fetchExistingEvents();\n    }\n  }, [dateRange, showCalendar, fetchExistingEvents]);\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  };\n\n  const handleCalendarSelect = (cal) => {\n    setSelectedCalendars((prev) => {\n      if (prev.some((selected) => selected.id === cal.id)) {\n        return prev.filter((selected) => selected.id !== cal.id);\n      } else {\n        return [...prev, cal];\n      }\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) return;\n\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    setShowCalendar(false);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n\n      if (response.data.success) {\n        // Use humanizedResponse from backend if available\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent, we need to render HTML\n            setMessage('');\n            // Use a timeout to ensure state updates don't conflict\n            setTimeout(() => {\n              const messageElement = document.querySelector('.success-message');\n              if (messageElement) {\n                messageElement.innerHTML = response.data.humanizedResponse;\n              } else {\n                // Fallback in case the element isn't found\n                setMessage(response.data.humanizedResponse);\n              }\n            }, 10);\n          } else {\n            // For other intents, just set the text message\n            setMessage(response.data.humanizedResponse);\n          }\n        }\n        \n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n          \n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // eslint-disable-next-line no-unused-vars\n            const requestedHours = response.data.requestedHours;\n            // eslint-disable-next-line no-unused-vars\n            const foundHours = response.data.foundHours;\n            // Use the humanizedResponse for error message if available\n            setError(`INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setMessage(\"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\");\n          }\n          \n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.humanizedResponse || response.data.message}`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getEventSummaryFromText = (text) => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n\n  const handleEventClick = (info) => {\n    const { event } = info;\n    \n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n      \n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => \n          slot.start === eventData.start && slot.end === eventData.end\n        );\n        \n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => \n            !(slot.start === eventData.start && slot.end === eventData.end)\n          );\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n      \n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => \n        slot.start === eventData.start && slot.end === eventData.end\n      );\n      \n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n      }\n    }\n  };\n\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      \n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      \n      if (allSuccessful) {\n        setMessage(`All ${selectedSlots.length} events scheduled successfully!`);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        setError(`Error: Some events could not be scheduled.`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFindDifferentTimes = () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  \n  const handleDatesSet = (dateInfo) => {\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n  };\n  \n  const getAllEvents = () => {\n    // Combine existing events with suggested slots\n    const allEvents = [...existingEvents];\n    \n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => \n          slot.start === event.start && slot.end === event.end\n        );\n        \n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          title: isSelected ? 'Selected Time' : 'Suggested Time'\n        });\n      });\n    }\n    \n    return allEvents;\n  };\n\n  return (\n    <div className=\"natural-language-form\">\n      <h2>Create Event with Natural Language</h2>\n\n      <div className=\"calendar-selection\">\n        <h3>Select Calendars to Monitor:</h3>\n        {calendars.length > 0 ? (\n          calendars.map((cal) => (\n            <label key={cal.id} style={{ display: 'block', margin: '5px 0' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedCalendars.some((selected) => selected.id === cal.id)}\n                onChange={() => handleCalendarSelect(cal)}\n                disabled={loading}\n              />\n              {cal.summary} {cal.primary ? '(Primary)' : ''}\n            </label>\n          ))\n        ) : (\n          <p>Loading calendars...</p>\n        )}\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n      {message && <div className=\"success-message\" dangerouslySetInnerHTML={{ __html: message }} />}\n\n      {!showCalendar ? (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Describe your event:</label>\n            <textarea\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              disabled={loading}\n              rows={3}\n              placeholder=\"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\"\n              required\n            />\n          </div>\n          <button type=\"submit\" disabled={loading} className=\"submit-button\">\n            {loading ? 'Processing...' : 'Submit'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"calendar-view\">\n          {selectedSlots.length > 0 && (\n            <div className=\"selection-summary\">\n              <p>Selected {selectedSlots.length} slot(s) - Total time: {calculateTotalHours()}</p>\n            </div>\n          )}\n          <div className=\"calendar-legend\">\n            <div className=\"legend-item\">\n              <span className=\"legend-color existing-event-color\"></span>\n              <span>Existing Events</span>\n            </div>\n            <div className=\"legend-item\">\n              <span className=\"legend-color suggested-event-color\"></span>\n              <span>Suggested Work Slots</span>\n            </div>\n            <div className=\"legend-item\">\n              <span className=\"legend-color selected-event-color\"></span>\n              <span>Selected Work Slots</span>\n            </div>\n          </div>\n          <div className=\"calendar-container\">\n            <FullCalendar\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              initialView=\"timeGridWeek\"\n              headerToolbar={{\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              }}\n              events={getAllEvents()}\n              eventClick={handleEventClick}\n              eventContent={renderEventContent}\n              height=\"800px\"\n              nowIndicator={true}\n              datesSet={handleDatesSet}\n              slotMinTime=\"00:00:00\"\n              slotMaxTime=\"24:00:00\"\n              eventTimeFormat={{\n                hour: 'numeric',\n                minute: '2-digit',\n                meridiem: 'short'\n              }}\n              slotLabelFormat={{\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: true\n              }}\n              allDaySlot={false}\n            />\n          </div>\n          <div className=\"calendar-actions\">\n            <button\n              onClick={handleScheduleSelected}\n              disabled={selectedSlots.length === 0 || loading}\n              className=\"confirm-button\"\n            >\n              {loading ? 'Scheduling...' : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`}\n            </button>\n            <button\n              onClick={handleFindDifferentTimes}\n              disabled={loading}\n              className=\"reject-button\"\n            >\n              Find Different Times\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderEventContent(eventInfo) {\n  const isSuggested = eventInfo.event.extendedProps.suggestedSlot;\n  // eslint-disable-next-line no-unused-vars\n  const isExisting = eventInfo.event.extendedProps.existingEvent;\n  \n  // Format the time more cleanly\n  let timeText = eventInfo.timeText;\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n  \n  return (\n    <div className={`event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`}>\n      <b>{timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <style jsx=\"true\">{`\n        .success-message {\n          white-space: pre-line;\n          line-height: 1.5;\n          padding: 15px;\n          border-radius: 8px;\n          background-color: #f5f5f5;\n          margin: 15px 0;\n        }\n        \n        .success-message b {\n          font-weight: 600;\n        }\n        \n        .time-slot {\n          font-weight: 500;\n          color: #1a73e8;\n        }\n        \n        .free-time-card {\n          background-color: #e8f5e9;\n          border-radius: 8px;\n          padding: 15px;\n          margin: 10px 0;\n        }\n        \n        .free-time-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        \n        .action-button {\n          background-color: #4caf50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.3s;\n        }\n        \n        .action-button:hover {\n          background-color: #388e3c;\n        }\n        \n        .action-button.small {\n          padding: 4px 12px;\n          font-size: 12px;\n        }\n        \n        .slot-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 6px 10px;\n          margin: 8px 0;\n          background-color: #f0f8ff;\n          border-radius: 4px;\n        }\n      `}</style>\n      <script dangerouslySetInnerHTML={{\n        __html: `\n          // Function to schedule a break\n          function scheduleBreak(startTime, endTime) {\n            const textArea = document.querySelector('.natural-language-form textarea');\n            if (textArea) {\n              const startDate = new Date();\n              const formattedDate = startDate.toLocaleDateString('en-US', { \n                month: 'long', \n                day: 'numeric',\n                year: 'numeric'\n              });\n              textArea.value = \"Schedule a break on \" + formattedDate + \" from \" + \n                startTime + \" to \" + endTime;\n              \n              // Trigger the form submission\n              const submitButton = document.querySelector('.submit-button');\n              if (submitButton) {\n                submitButton.click();\n              }\n            }\n          }\n          \n          // Function to schedule a task\n          function scheduleTask(startTime, endTime) {\n            const textArea = document.querySelector('.natural-language-form textarea');\n            if (textArea) {\n              const startDate = new Date();\n              const formattedDate = startDate.toLocaleDateString('en-US', { \n                month: 'long', \n                day: 'numeric',\n                year: 'numeric'\n              });\n              textArea.value = \"Schedule a work session on \" + formattedDate + \" from \" + \n                startTime + \" to \" + endTime;\n              \n              // Show prompt for task name\n              setTimeout(() => {\n                const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n                if (taskName) {\n                  textArea.value = \"Schedule \" + taskName + \" on \" + formattedDate + \n                    \" from \" + startTime + \" to \" + endTime;\n                  \n                  // Trigger the form submission\n                  const submitButton = document.querySelector('.submit-button');\n                  if (submitButton) {\n                    submitButton.click();\n                  }\n                }\n              }, 100);\n            }\n          }\n        `\n      }} />\n      <NaturalLanguageForm />\n      <hr />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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,GAAG,EAAC,MAAM;MAAAnD,QAAA,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACV9I,OAAA;MAAQsJ,uBAAuB,EAAE;QAC/BC,MAAM,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACL9I,OAAA,CAACC,mBAAmB;MAAA0I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvB9I,OAAA;MAAA2I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACgD,GAAA,GA3HQF,GAAG;AA6HZ,eAAeA,GAAG;AAAC,IAAAR,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}