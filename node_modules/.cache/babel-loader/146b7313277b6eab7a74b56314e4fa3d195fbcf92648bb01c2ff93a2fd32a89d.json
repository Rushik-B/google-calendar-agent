{"ast":null,"code":"var _jsxFileName = \"/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n// Define the script at global level to ensure the functions are globally accessible\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setupGlobalFunctions = () => {\n  if (typeof window !== 'undefined') {\n    // Create a custom event for scheduling breaks\n    window.scheduleBreak = (startTime, endTime) => {\n      console.log(\"scheduleBreak called with:\", startTime, endTime);\n      // Dispatch a custom event that the React component can listen for\n      window.dispatchEvent(new CustomEvent('scheduleCalendarItem', {\n        detail: {\n          type: 'break',\n          startTime,\n          endTime\n        }\n      }));\n    };\n\n    // Create a custom event for scheduling tasks  \n    window.scheduleTask = (startTime, endTime) => {\n      console.log(\"scheduleTask called with:\", startTime, endTime);\n      window.dispatchEvent(new CustomEvent('scheduleCalendarItem', {\n        detail: {\n          type: 'task',\n          startTime,\n          endTime\n        }\n      }));\n    };\n\n    // Log to verify functions are attached\n    console.log(\"Global scheduling functions attached:\", typeof window.scheduleBreak === 'function', typeof window.scheduleTask === 'function');\n  }\n};\nfunction NaturalLanguageForm() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n\n  // Call the setup function on load\n  useEffect(() => {\n    setupGlobalFunctions();\n  }, []);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Helper function to format date to YYYY-MM-DD\n  const formatDate = date => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  };\n\n  // Define handleSubmit with useCallback before it's used in handleScheduleItem\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    console.log(\"handleSubmit called with text:\", text);\n    if (!text.trim()) return;\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    setShowCalendar(false);\n    try {\n      console.log(\"Making API call with text:\", text);\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      console.log(\"API response:\", response.data);\n      if (response.data.success) {\n        // Use humanizedResponse from backend if available\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent, we need to render HTML\n            setMessage('');\n            // Use a timeout to ensure state updates don't conflict\n            setTimeout(() => {\n              const messageElement = document.querySelector('.success-message');\n              if (messageElement) {\n                messageElement.innerHTML = response.data.humanizedResponse;\n              } else {\n                // Fallback in case the element isn't found\n                setMessage(response.data.humanizedResponse);\n              }\n            }, 10);\n            setText(\"\");\n          } else {\n            // For other intents, just set the text message\n            setMessage(response.data.humanizedResponse);\n          }\n        }\n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n\n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // eslint-disable-next-line no-unused-vars\n            const requestedHours = response.data.requestedHours;\n            // eslint-disable-next-line no-unused-vars\n            const foundHours = response.data.foundHours;\n            // Use the humanizedResponse for error message if available\n            setError(`INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setMessage(\"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\");\n          }\n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.humanizedResponse || response.data.message}`);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [text, setLoading, setError, setMessage, setAvailableSlots, setCalendarEvents, setSelectedSlots, setShowCalendar, setText, setEventDetails]);\n\n  // Event handler for scheduling items - using useCallback to avoid dependency issues\n  const handleScheduleItem = useCallback(event => {\n    console.log(\"Custom event received:\", event.detail);\n    const {\n      type,\n      startTime,\n      endTime\n    } = event.detail;\n    const startDate = new Date();\n    const formattedDate = startDate.toLocaleDateString('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n    if (type === 'break') {\n      const newText = `Schedule a break on ${formattedDate} from ${startTime} to ${endTime}`;\n      console.log(\"Setting text for break:\", newText);\n      setText(newText);\n      // Submit after React has updated the state\n      setTimeout(() => {\n        handleSubmit({\n          preventDefault: () => {}\n        });\n      }, 50);\n    } else if (type === 'task') {\n      // Show prompt for task name\n      const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n      if (taskName) {\n        const newText = `Schedule ${taskName} on ${formattedDate} from ${startTime} to ${endTime}`;\n        console.log(\"Setting text for task:\", newText);\n        setText(newText);\n        // Submit after React has updated the state\n        setTimeout(() => {\n          handleSubmit({\n            preventDefault: () => {}\n          });\n        }, 50);\n      }\n    }\n  }, [setText, handleSubmit]);\n\n  // Helper function to get color for a specific calendar\n  const getCalendarColor = (calendarId, darker = false) => {\n    // Find the calendar in our list\n    const calendar = calendars.find(cal => cal.id === calendarId);\n    if (calendar && calendar.backgroundColor) {\n      if (darker) {\n        // Create a slightly darker version for the border\n        return darkenColor(calendar.backgroundColor, 0.2);\n      }\n      return calendar.backgroundColor;\n    }\n    // Default color if calendar not found\n    return darker ? '#1a73e8' : '#4285f4';\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    try {\n      // Remove the hash if it exists\n      color = color.replace('#', '');\n\n      // Parse the color\n      let r = parseInt(color.substring(0, 2), 16);\n      let g = parseInt(color.substring(2, 4), 16);\n      let b = parseInt(color.substring(4, 6), 16);\n\n      // Darken the color\n      r = Math.max(0, Math.floor(r * (1 - amount)));\n      g = Math.max(0, Math.floor(g * (1 - amount)));\n      b = Math.max(0, Math.floor(b * (1 - amount)));\n\n      // Convert back to hex\n      return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    } catch (e) {\n      console.error('Error darkening color:', e);\n      return color; // Return original color if there's an error\n    }\n  };\n  const fetchExistingEvents = useCallback(async () => {\n    try {\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n      console.log(\"Fetching events from:\", startDate, \"to\", endDate);\n      const response = await axios.get(`http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}`);\n      console.log(\"API Response:\", response.data);\n      if (response.data.success) {\n        // Check if there are any events in the response\n        let events = response.data.events || [];\n\n        // If no events are returned and we're in development mode, add some mock events for testing\n        if (events.length === 0) {\n          console.log(\"Adding mock events for testing\");\n          // Create a few mock events for the current week\n          const now = new Date();\n          const tomorrow = new Date(now);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          events = [{\n            id: 'mock-1',\n            title: 'Team Meeting',\n            start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0).toISOString(),\n            end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 11, 0).toISOString(),\n            calendarId: 'primary',\n            calendarName: 'Primary Calendar'\n          }, {\n            id: 'mock-2',\n            title: 'Lunch Break',\n            start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 12, 0).toISOString(),\n            end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 13, 0).toISOString(),\n            calendarId: 'primary',\n            calendarName: 'Primary Calendar'\n          }, {\n            id: 'mock-3',\n            title: 'Project Review',\n            start: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 14, 0).toISOString(),\n            end: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 15, 30).toISOString(),\n            calendarId: 'work',\n            calendarName: 'Work Calendar'\n          }];\n        }\n        if (events.length > 0) {\n          console.log(\"Event data sample:\", events[0]);\n\n          // Make sure each event has existingEvent flag and preserve calendar color\n          const eventsWithMetadata = events.map(event => {\n            console.log(\"Processing event:\", event.title || \"No title\");\n            return {\n              ...event,\n              // Ensure event has a title - use summary field if title is missing\n              title: event.title || event.summary || \"Untitled Event\",\n              existingEvent: true,\n              // If the event doesn't already have these properties, add them\n              backgroundColor: event.backgroundColor || getCalendarColor(event.calendarId),\n              borderColor: event.borderColor || getCalendarColor(event.calendarId, true),\n              textColor: event.textColor || '#ffffff'\n            };\n          });\n          console.log(\"Processed events:\", eventsWithMetadata);\n          setExistingEvents(eventsWithMetadata);\n        } else {\n          console.log(\"No events found in the date range\");\n          setExistingEvents([]);\n        }\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  }, [dateRange, formatDate, getCalendarColor]);\n\n  // Set up event listeners\n  useEffect(() => {\n    window.addEventListener('scheduleCalendarItem', handleScheduleItem);\n\n    // Add event listener for refreshCalendar event\n    const handleRefreshCalendar = () => {\n      if (showCalendar) {\n        console.log(\"Refreshing calendar events via refreshCalendar event\");\n        fetchExistingEvents();\n      }\n    };\n    window.addEventListener('refreshCalendar', handleRefreshCalendar);\n\n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('scheduleCalendarItem', handleScheduleItem);\n      window.removeEventListener('refreshCalendar', handleRefreshCalendar);\n    };\n  }, [handleScheduleItem, fetchExistingEvents, showCalendar]);\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Attempting to fetch calendars...\");\n        // Fetch all calendars\n        const calendarsResponse = await axios.get('http://127.0.0.1:5000/api/get-calendars').catch(error => {\n          console.error(\"Calendar fetch error details:\", error.message);\n          if (error.response) console.error(\"Response data:\", error.response.data);\n          throw new Error(`Failed to fetch calendars: ${error.message}`);\n        });\n        console.log(\"Calendars response:\", calendarsResponse);\n        if (!calendarsResponse.data.success) {\n          throw new Error(`Failed to fetch calendars: ${calendarsResponse.data.message || 'Unknown error'}`);\n        }\n        const allCalendars = calendarsResponse.data.calendars;\n        setCalendars(allCalendars);\n        console.log(\"Attempting to fetch preferred calendars...\");\n        // Fetch current preferred calendars\n        const prefsResponse = await axios.get('http://127.0.0.1:5000/api/get-preferred-calendars').catch(error => {\n          console.error(\"Preferences fetch error details:\", error.message);\n          if (error.response) console.error(\"Response data:\", error.response.data);\n          throw new Error(`Failed to fetch preferred calendars: ${error.message}`);\n        });\n        console.log(\"Preferences response:\", prefsResponse);\n        if (!prefsResponse.data.success) {\n          throw new Error(`Failed to fetch preferred calendars: ${prefsResponse.data.message || 'Unknown error'}`);\n        }\n        const preferredCals = prefsResponse.data.calendars;\n\n        // If there are saved preferences, use them; otherwise, default to primary\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data (e.g., include all fields)\n          const syncedPrefs = preferredCals.map(pref => allCalendars.find(cal => cal.id === pref.id) || pref);\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(`Error loading calendars or preferences: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n            calendars: selectedCalendars\n          });\n          if (!response.data.success) {\n            throw new Error(response.data.message);\n          }\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n  const handleCalendarSelect = cal => {\n    setSelectedCalendars(prev => {\n      if (prev.some(selected => selected.id === cal.id)) {\n        return prev.filter(selected => selected.id !== cal.id);\n      } else {\n        return [...prev, cal];\n      }\n    });\n  };\n  const getEventSummaryFromText = text => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n  const handleEventClick = info => {\n    const {\n      event\n    } = info;\n\n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n\n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => !(slot.start === eventData.start && slot.end === eventData.end));\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n\n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => slot.start === eventData.start && slot.end === eventData.end);\n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n        event.setProp('title', 'Selected Time');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n        event.setProp('title', 'Suggested Time');\n      }\n    } else {\n      // For existing events, show some details in a tooltip or alert\n      const eventTitle = event.title;\n      const eventTime = `${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()}`;\n      const calendarName = event.extendedProps.calendarName || 'Unknown Calendar';\n\n      // Simple alert for demonstration - in a real app, you might want a tooltip or modal\n      alert(`Event: ${eventTitle}\\nTime: ${eventTime}\\nCalendar: ${calendarName}`);\n    }\n  };\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      if (allSuccessful) {\n        setMessage(`All ${selectedSlots.length} events scheduled successfully!`);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        setError(`Error: Some events could not be scheduled.`);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(`Error: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFindDifferentTimes = () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  const handleDatesSet = dateInfo => {\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n  };\n  const getAllEvents = () => {\n    console.log(\"Getting all events. Existing events:\", existingEvents.length);\n\n    // Start with existing events, preserving their properties\n    const allEvents = [...existingEvents].map(event => {\n      console.log(\"Processing existing event:\", event.title || \"No title\");\n      return {\n        ...event,\n        title: event.title || event.summary || \"Untitled Event\",\n        backgroundColor: event.backgroundColor || '#4285f4',\n        borderColor: event.borderColor || '#1a73e8',\n        textColor: event.textColor || '#ffffff',\n        display: 'block',\n        extendedProps: {\n          ...event.extendedProps,\n          existingEvent: true,\n          calendarName: event.calendarName || 'Calendar'\n        }\n      };\n    });\n\n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      console.log(\"Adding suggested slots:\", calendarEvents.length);\n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => slot.start === event.start && slot.end === event.end);\n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          textColor: '#ffffff',\n          title: isSelected ? 'Selected Time' : 'Suggested Time',\n          display: 'block',\n          extendedProps: {\n            ...event.extendedProps,\n            suggestedSlot: true // Mark as suggested slot for the event click handler\n          }\n        });\n      });\n    }\n    console.log(\"Total events to display:\", allEvents.length);\n    return allEvents;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"natural-language-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Event with Natural Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Calendars to Monitor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), calendars.length > 0 ? calendars.map(cal => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCalendars.some(selected => selected.id === cal.id),\n          onChange: () => handleCalendarSelect(cal),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this), cal.summary, \" \", cal.primary ? '(Primary)' : '']\n      }, cal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendars...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      dangerouslySetInnerHTML: {\n        __html: message\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 19\n    }, this), !showCalendar ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Describe your event:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          disabled: loading,\n          rows: 3,\n          placeholder: \"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-view\",\n      children: [selectedSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected \", selectedSlots.length, \" slot(s) - Total time: \", calculateTotalHours()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color suggested-event-color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Suggested Work Slots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color selected-event-color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Selected Work Slots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-title\",\n            children: \"Your Calendars:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this), selectedCalendars.map(cal => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: cal.backgroundColor || getCalendarColor(cal.id),\n                border: `1px solid ${cal.borderColor || getCalendarColor(cal.id, true)}`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cal.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 19\n            }, this)]\n          }, cal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          initialView: \"timeGridWeek\",\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          events: getAllEvents(),\n          eventClick: handleEventClick,\n          eventContent: renderEventContent,\n          height: \"800px\",\n          nowIndicator: false,\n          datesSet: handleDatesSet,\n          slotMinTime: \"00:00:00\",\n          slotMaxTime: \"24:00:00\",\n          eventTimeFormat: {\n            hour: 'numeric',\n            minute: '2-digit',\n            meridiem: 'short'\n          },\n          slotLabelFormat: {\n            hour: 'numeric',\n            minute: '2-digit',\n            hour12: true\n          },\n          allDaySlot: false,\n          eventDisplay: \"block\",\n          eventBackgroundColor: \"#4285f4\",\n          eventBorderColor: \"#3b78e7\",\n          eventTextColor: \"#ffffff\",\n          displayEventTime: true,\n          displayEventEnd: true,\n          forceEventDuration: true,\n          eventMinHeight: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScheduleSelected,\n          disabled: selectedSlots.length === 0 || loading,\n          className: \"confirm-button\",\n          children: loading ? 'Scheduling...' : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindDifferentTimes,\n          disabled: loading,\n          className: \"reject-button\",\n          children: \"Find Different Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 607,\n    columnNumber: 5\n  }, this);\n}\n_s(NaturalLanguageForm, \"TPfAApBsZrZQRRi9TBvwaTtpE4E=\");\n_c = NaturalLanguageForm;\nfunction renderEventContent(eventInfo) {\n  var _eventInfo$event$exte, _eventInfo$event$exte2, _eventInfo$event$exte3, _eventInfo$event$exte4;\n  // Determine if this is a suggested slot or existing event\n  const isSuggested = ((_eventInfo$event$exte = eventInfo.event.extendedProps) === null || _eventInfo$event$exte === void 0 ? void 0 : _eventInfo$event$exte.suggestedSlot) === true;\n  const isExisting = ((_eventInfo$event$exte2 = eventInfo.event.extendedProps) === null || _eventInfo$event$exte2 === void 0 ? void 0 : _eventInfo$event$exte2.existingEvent) === true;\n\n  // Debug event data\n  console.log(\"Rendering event:\", {\n    id: eventInfo.event.id,\n    title: eventInfo.event.title,\n    extendedProps: eventInfo.event.extendedProps,\n    isSuggested,\n    isExisting\n  });\n\n  // Format the time more cleanly\n  let timeText = eventInfo.timeText || '';\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n\n  // Get the calendar name if available\n  let calendarName = '';\n  if (isExisting && (_eventInfo$event$exte3 = eventInfo.event.extendedProps) !== null && _eventInfo$event$exte3 !== void 0 && _eventInfo$event$exte3.calendarName) {\n    calendarName = `(${eventInfo.event.extendedProps.calendarName})`;\n  }\n\n  // Get the event title with fallback options\n  const title = eventInfo.event.title || ((_eventInfo$event$exte4 = eventInfo.event.extendedProps) === null || _eventInfo$event$exte4 === void 0 ? void 0 : _eventInfo$event$exte4.summary) || (isSuggested ? 'Suggested Time' : 'Event');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [title, \" \", calendarName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 780,\n    columnNumber: 5\n  }, this);\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          // Directly define functions in the global scope\n          window.scheduleBreak = function(startTime, endTime) {\n            console.log(\"DOM scheduleBreak called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'break',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          window.scheduleTask = function(startTime, endTime) {\n            console.log(\"DOM scheduleTask called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'task',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          // Duration selector functions\n          window.showDurationSelector = function(startTime, endTime, selectorId, displayId, sliderId) {\n            console.log(\"Showing duration selector\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'block';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          window.updateDurationDisplay = function(minutes, displayId) {\n            console.log(\"Updating duration display to\", minutes, \"for\", displayId);\n            const durationDisplay = document.getElementById(displayId);\n            if (!durationDisplay) {\n              console.error(\"Duration display element not found:\", displayId);\n              return;\n            }\n            \n            let display = \"\";\n            if (minutes >= 60) {\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              display = hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\n              if (remainingMinutes > 0) {\n                display += \" \" + remainingMinutes + \" min\";\n              }\n            } else {\n              display = minutes + \" min\";\n            }\n            durationDisplay.textContent = display;\n          };\n          \n          window.scheduleBreakWithDuration = function(startTime, endTime, sliderId) {\n            console.log(\"Scheduling break with duration using slider\", sliderId);\n            const durationSlider = document.getElementById(sliderId);\n            if (!durationSlider) {\n              console.error(\"Duration slider not found:\", sliderId);\n              return;\n            }\n            \n            const durationMinutes = durationSlider.value;\n            console.log(\"Duration selected:\", durationMinutes);\n            \n            const startDateTime = new Date();\n            const [startHours, startMinutes] = startTime.split(':').map(Number);\n            startDateTime.setHours(startHours, startMinutes, 0);\n            \n            // Calculate end time based on selected duration\n            const endDateTime = new Date(startDateTime);\n            endDateTime.setMinutes(startDateTime.getMinutes() + parseInt(durationMinutes));\n            \n            const formattedEndTime = endDateTime.getHours().toString().padStart(2, '0') + ':' + \n                                  endDateTime.getMinutes().toString().padStart(2, '0');\n            \n            console.log(\"Calculated end time:\", formattedEndTime);\n            \n            // Call the existing scheduleBreak function\n            window.scheduleBreak(startTime, formattedEndTime);\n          };\n          \n          window.cancelDurationSelection = function(selectorId) {\n            console.log(\"Canceling duration selection for\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'none';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          console.log(\"Inline scheduling functions defined and attached to window object\");\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .success-message {\n          white-space: pre-line;\n          line-height: 1.5;\n          padding: 15px;\n          border-radius: 8px;\n          background-color: #f5f5f5;\n          margin: 15px 0;\n        }\n        \n        .success-message b {\n          font-weight: 600;\n        }\n        \n        .time-slot {\n          font-weight: 500;\n          color: #1a73e8;\n        }\n        \n        .free-time-card {\n          background-color: #e8f5e9;\n          border-radius: 8px;\n          padding: 15px;\n          margin: 10px 0;\n        }\n        \n        .free-time-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        \n        .action-button {\n          background-color: #4caf50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.3s;\n        }\n        \n        .action-button:hover {\n          background-color: #388e3c;\n        }\n        \n        .action-button.small {\n          padding: 4px 12px;\n          font-size: 12px;\n        }\n        \n        .slot-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 6px 10px;\n          margin: 8px 0;\n          background-color: #f0f8ff;\n          border-radius: 4px;\n        }\n        \n        .duration-selector {\n          background-color: #f9f9f9;\n          border-radius: 6px;\n          padding: 12px;\n          margin-top: 10px;\n          border: 1px solid #ddd;\n        }\n        \n        .duration-selector input[type=\"range\"] {\n          width: 100%;\n          margin: 10px 0;\n        }\n        \n        .action-button.secondary {\n          background-color: #9e9e9e;\n        }\n        \n        .action-button.secondary:hover {\n          background-color: #757575;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NaturalLanguageForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 789,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NaturalLanguageForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","setupGlobalFunctions","window","scheduleBreak","startTime","endTime","console","log","dispatchEvent","CustomEvent","detail","type","scheduleTask","NaturalLanguageForm","_s","text","setText","loading","setLoading","message","setMessage","error","setError","availableSlots","setAvailableSlots","calendarEvents","setCalendarEvents","existingEvents","setExistingEvents","showCalendar","setShowCalendar","eventDetails","setEventDetails","selectedSlots","setSelectedSlots","calendars","setCalendars","selectedCalendars","setSelectedCalendars","dateRange","setDateRange","start","Date","end","setDate","getDate","formatDate","date","d","month","getMonth","day","year","getFullYear","length","join","handleSubmit","e","preventDefault","trim","response","post","data","success","humanizedResponse","intent","setTimeout","messageElement","document","querySelector","innerHTML","events","insufficientTime","requestedHours","foundHours","summary","getEventSummaryFromText","description","calendarId","eventLink","_error$response","_error$response$data","handleScheduleItem","event","startDate","formattedDate","toLocaleDateString","newText","taskName","prompt","getCalendarColor","darker","calendar","find","cal","id","backgroundColor","darkenColor","color","amount","replace","r","parseInt","substring","g","b","Math","max","floor","toString","padStart","fetchExistingEvents","endDate","get","now","tomorrow","title","toISOString","calendarName","eventsWithMetadata","map","existingEvent","borderColor","textColor","addEventListener","handleRefreshCalendar","removeEventListener","fetchData","calendarsResponse","catch","Error","allCalendars","prefsResponse","preferredCals","syncedPrefs","pref","primaryCal","primary","sendPreferences","handleCalendarSelect","prev","some","selected","filter","firstSentence","split","handleEventClick","info","extendedProps","suggestedSlot","eventData","isAlreadySelected","slot","isSelected","setProp","eventTitle","eventTime","toLocaleTimeString","alert","calculateTotalHours","totalMinutes","forEach","diffMinutes","hours","minutes","handleScheduleSelected","promises","selectedSlot","results","Promise","all","allSuccessful","every","_error$response2","_error$response2$data","handleFindDifferentTimes","handleDatesSet","dateInfo","getAllEvents","allEvents","display","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","checked","onChange","disabled","dangerouslySetInnerHTML","__html","onSubmit","value","target","rows","placeholder","required","border","plugins","initialView","headerToolbar","left","center","right","eventClick","eventContent","renderEventContent","height","nowIndicator","datesSet","slotMinTime","slotMaxTime","eventTimeFormat","hour","minute","meridiem","slotLabelFormat","hour12","allDaySlot","eventDisplay","eventBackgroundColor","eventBorderColor","eventTextColor","displayEventTime","displayEventEnd","forceEventDuration","eventMinHeight","onClick","_c","eventInfo","_eventInfo$event$exte","_eventInfo$event$exte2","_eventInfo$event$exte3","_eventInfo$event$exte4","isSuggested","isExisting","timeText","includes","times","App","jsx","_c2","$RefreshReg$"],"sources":["/Users/Rushik/Documents/Projects/caledar-example/Calendar-app-latest-working/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n// Define the script at global level to ensure the functions are globally accessible\nconst setupGlobalFunctions = () => {\n  if (typeof window !== 'undefined') {\n    // Create a custom event for scheduling breaks\n    window.scheduleBreak = (startTime, endTime) => {\n      console.log(\"scheduleBreak called with:\", startTime, endTime);\n      // Dispatch a custom event that the React component can listen for\n      window.dispatchEvent(\n        new CustomEvent('scheduleCalendarItem', {\n          detail: {\n            type: 'break',\n            startTime,\n            endTime\n          }\n        })\n      );\n    };\n    \n    // Create a custom event for scheduling tasks  \n    window.scheduleTask = (startTime, endTime) => {\n      console.log(\"scheduleTask called with:\", startTime, endTime);\n      window.dispatchEvent(\n        new CustomEvent('scheduleCalendarItem', {\n          detail: {\n            type: 'task',\n            startTime,\n            endTime\n          }\n        })\n      );\n    };\n    \n    // Log to verify functions are attached\n    console.log(\"Global scheduling functions attached:\", \n      typeof window.scheduleBreak === 'function', \n      typeof window.scheduleTask === 'function');\n  }\n};\n\nfunction NaturalLanguageForm() {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [calendarEvents, setCalendarEvents] = useState([]);\n  const [existingEvents, setExistingEvents] = useState([]);\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [eventDetails, setEventDetails] = useState({});\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  \n  // Call the setup function on load\n  useEffect(() => {\n    setupGlobalFunctions();\n  }, []);\n  \n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    start: new Date(),\n    end: new Date(new Date().setDate(new Date().getDate() + 7))\n  });\n\n  // Helper function to format date to YYYY-MM-DD\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  };\n\n  // Define handleSubmit with useCallback before it's used in handleScheduleItem\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    console.log(\"handleSubmit called with text:\", text);\n    if (!text.trim()) return;\n\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n    setShowCalendar(false);\n\n    try {\n      console.log(\"Making API call with text:\", text);\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      console.log(\"API response:\", response.data);\n\n      if (response.data.success) {\n        // Use humanizedResponse from backend if available\n        if (response.data.humanizedResponse) {\n          if (response.data.intent === \"check_free_time\") {\n            // For check_free_time intent, we need to render HTML\n            setMessage('');\n            // Use a timeout to ensure state updates don't conflict\n            setTimeout(() => {\n              const messageElement = document.querySelector('.success-message');\n              if (messageElement) {\n                messageElement.innerHTML = response.data.humanizedResponse;\n              } else {\n                // Fallback in case the element isn't found\n                setMessage(response.data.humanizedResponse);\n              }\n            }, 10);\n            setText(\"\");\n          } else {\n            // For other intents, just set the text message\n            setMessage(response.data.humanizedResponse);\n          }\n        }\n        \n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setCalendarEvents(response.data.events || []);\n          setShowCalendar(true);\n          \n          // Check if we have the insufficientTime flag\n          if (response.data.insufficientTime) {\n            // eslint-disable-next-line no-unused-vars\n            const requestedHours = response.data.requestedHours;\n            // eslint-disable-next-line no-unused-vars\n            const foundHours = response.data.foundHours;\n            // Use the humanizedResponse for error message if available\n            setError(`INSUFFICIENT TIME: ${response.data.humanizedResponse || response.data.message} Select these slots or try a different timeframe.`);\n          } else if (!response.data.humanizedResponse) {\n            // Only set this default message if humanizedResponse wasn't already set\n            setMessage(\"Here are suggested time slots on your calendar. Click on slots to select/deselect them for scheduling.\");\n          }\n          \n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else if (response.data.intent === \"view_events\") {\n          // Just display the humanized response for view_events, no calendar needed\n          setText(\"\");\n        } else if (response.data.intent === \"Create event\" && !response.data.humanizedResponse) {\n          // Fallback for create event if no humanizedResponse is available\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        } else {\n          // For other intents or if we already set humanizedResponse\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.humanizedResponse || response.data.message}`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [text, setLoading, setError, setMessage, setAvailableSlots, setCalendarEvents, \n      setSelectedSlots, setShowCalendar, setText, setEventDetails]);\n\n  // Event handler for scheduling items - using useCallback to avoid dependency issues\n  const handleScheduleItem = useCallback((event) => {\n    console.log(\"Custom event received:\", event.detail);\n    const { type, startTime, endTime } = event.detail;\n    const startDate = new Date();\n    const formattedDate = startDate.toLocaleDateString('en-US', { \n      month: 'long', \n      day: 'numeric',\n      year: 'numeric'\n    });\n    \n    if (type === 'break') {\n      const newText = `Schedule a break on ${formattedDate} from ${startTime} to ${endTime}`;\n      console.log(\"Setting text for break:\", newText);\n      setText(newText);\n      // Submit after React has updated the state\n      setTimeout(() => {\n        handleSubmit({ preventDefault: () => {} });\n      }, 50);\n    } else if (type === 'task') {\n      // Show prompt for task name\n      const taskName = prompt(\"What would you like to name this task?\", \"Work Session\");\n      if (taskName) {\n        const newText = `Schedule ${taskName} on ${formattedDate} from ${startTime} to ${endTime}`;\n        console.log(\"Setting text for task:\", newText);\n        setText(newText);\n        // Submit after React has updated the state\n        setTimeout(() => {\n          handleSubmit({ preventDefault: () => {} });\n        }, 50);\n      }\n    }\n  }, [setText, handleSubmit]);\n  \n  // Helper function to get color for a specific calendar\n  const getCalendarColor = (calendarId, darker = false) => {\n    // Find the calendar in our list\n    const calendar = calendars.find(cal => cal.id === calendarId);\n    if (calendar && calendar.backgroundColor) {\n      if (darker) {\n        // Create a slightly darker version for the border\n        return darkenColor(calendar.backgroundColor, 0.2);\n      }\n      return calendar.backgroundColor;\n    }\n    // Default color if calendar not found\n    return darker ? '#1a73e8' : '#4285f4';\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    try {\n      // Remove the hash if it exists\n      color = color.replace('#', '');\n      \n      // Parse the color\n      let r = parseInt(color.substring(0, 2), 16);\n      let g = parseInt(color.substring(2, 4), 16);\n      let b = parseInt(color.substring(4, 6), 16);\n      \n      // Darken the color\n      r = Math.max(0, Math.floor(r * (1 - amount)));\n      g = Math.max(0, Math.floor(g * (1 - amount)));\n      b = Math.max(0, Math.floor(b * (1 - amount)));\n      \n      // Convert back to hex\n      return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n    } catch (e) {\n      console.error('Error darkening color:', e);\n      return color; // Return original color if there's an error\n    }\n  };\n\n  const fetchExistingEvents = useCallback(async () => {\n    try {\n      const startDate = formatDate(dateRange.start);\n      const endDate = formatDate(dateRange.end);\n      console.log(\"Fetching events from:\", startDate, \"to\", endDate);\n      const response = await axios.get(`http://127.0.0.1:5000/api/get-events?start=${startDate}&end=${endDate}`);\n      \n      console.log(\"API Response:\", response.data);\n      \n      if (response.data.success) {\n        // Check if there are any events in the response\n        let events = response.data.events || [];\n        \n        // If no events are returned and we're in development mode, add some mock events for testing\n        if (events.length === 0) {\n          console.log(\"Adding mock events for testing\");\n          // Create a few mock events for the current week\n          const now = new Date();\n          const tomorrow = new Date(now);\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          \n          events = [\n            {\n              id: 'mock-1',\n              title: 'Team Meeting',\n              start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0).toISOString(),\n              end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 11, 0).toISOString(),\n              calendarId: 'primary',\n              calendarName: 'Primary Calendar'\n            },\n            {\n              id: 'mock-2',\n              title: 'Lunch Break',\n              start: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 12, 0).toISOString(),\n              end: new Date(now.getFullYear(), now.getMonth(), now.getDate(), 13, 0).toISOString(),\n              calendarId: 'primary',\n              calendarName: 'Primary Calendar'\n            },\n            {\n              id: 'mock-3',\n              title: 'Project Review',\n              start: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 14, 0).toISOString(),\n              end: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 15, 30).toISOString(),\n              calendarId: 'work',\n              calendarName: 'Work Calendar'\n            }\n          ];\n        }\n        \n        if (events.length > 0) {\n          console.log(\"Event data sample:\", events[0]);\n          \n          // Make sure each event has existingEvent flag and preserve calendar color\n          const eventsWithMetadata = events.map(event => {\n            console.log(\"Processing event:\", event.title || \"No title\");\n            \n            return {\n              ...event,\n              // Ensure event has a title - use summary field if title is missing\n              title: event.title || event.summary || \"Untitled Event\",\n              existingEvent: true,\n              // If the event doesn't already have these properties, add them\n              backgroundColor: event.backgroundColor || getCalendarColor(event.calendarId),\n              borderColor: event.borderColor || getCalendarColor(event.calendarId, true),\n              textColor: event.textColor || '#ffffff'\n            };\n          });\n          \n          console.log(\"Processed events:\", eventsWithMetadata);\n          setExistingEvents(eventsWithMetadata);\n        } else {\n          console.log(\"No events found in the date range\");\n          setExistingEvents([]);\n        }\n      } else {\n        console.error('Error fetching events:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  }, [dateRange, formatDate, getCalendarColor]);\n  \n  // Set up event listeners\n  useEffect(() => {\n    window.addEventListener('scheduleCalendarItem', handleScheduleItem);\n    \n    // Add event listener for refreshCalendar event\n    const handleRefreshCalendar = () => {\n      if (showCalendar) {\n        console.log(\"Refreshing calendar events via refreshCalendar event\");\n        fetchExistingEvents();\n      }\n    };\n    \n    window.addEventListener('refreshCalendar', handleRefreshCalendar);\n    \n    // Clean up event listeners\n    return () => {\n      window.removeEventListener('scheduleCalendarItem', handleScheduleItem);\n      window.removeEventListener('refreshCalendar', handleRefreshCalendar);\n    };\n  }, [handleScheduleItem, fetchExistingEvents, showCalendar]);\n\n  // Fetch all calendars and current preferences on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Attempting to fetch calendars...\");\n        // Fetch all calendars\n        const calendarsResponse = await axios.get('http://127.0.0.1:5000/api/get-calendars')\n          .catch(error => {\n            console.error(\"Calendar fetch error details:\", error.message);\n            if (error.response) console.error(\"Response data:\", error.response.data);\n            throw new Error(`Failed to fetch calendars: ${error.message}`);\n          });\n        \n        console.log(\"Calendars response:\", calendarsResponse);\n        if (!calendarsResponse.data.success) {\n          throw new Error(`Failed to fetch calendars: ${calendarsResponse.data.message || 'Unknown error'}`);\n        }\n        const allCalendars = calendarsResponse.data.calendars;\n        setCalendars(allCalendars);\n\n        console.log(\"Attempting to fetch preferred calendars...\");\n        // Fetch current preferred calendars\n        const prefsResponse = await axios.get('http://127.0.0.1:5000/api/get-preferred-calendars')\n          .catch(error => {\n            console.error(\"Preferences fetch error details:\", error.message);\n            if (error.response) console.error(\"Response data:\", error.response.data);\n            throw new Error(`Failed to fetch preferred calendars: ${error.message}`);\n          });\n        \n        console.log(\"Preferences response:\", prefsResponse);\n        if (!prefsResponse.data.success) {\n          throw new Error(`Failed to fetch preferred calendars: ${prefsResponse.data.message || 'Unknown error'}`);\n        }\n        const preferredCals = prefsResponse.data.calendars;\n\n        // If there are saved preferences, use them; otherwise, default to primary\n        if (preferredCals.length > 0) {\n          // Ensure the saved preferences match the full calendar data (e.g., include all fields)\n          const syncedPrefs = preferredCals.map(pref => \n            allCalendars.find(cal => cal.id === pref.id) || pref\n          );\n          setSelectedCalendars(syncedPrefs);\n        } else {\n          const primaryCal = allCalendars.find(cal => cal.primary);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(`Error loading calendars or preferences: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Send preferences to backend only when user changes them\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          const response = await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n            calendars: selectedCalendars\n          });\n          if (!response.data.success) {\n            throw new Error(response.data.message);\n          }\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n\n  const handleCalendarSelect = (cal) => {\n    setSelectedCalendars((prev) => {\n      if (prev.some((selected) => selected.id === cal.id)) {\n        return prev.filter((selected) => selected.id !== cal.id);\n      } else {\n        return [...prev, cal];\n      }\n    });\n  };\n\n  const getEventSummaryFromText = (text) => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n\n  const handleEventClick = (info) => {\n    const { event } = info;\n    \n    // Only handle suggested slots\n    if (event.extendedProps.suggestedSlot) {\n      const eventData = {\n        start: event.start.toISOString(),\n        end: event.end.toISOString()\n      };\n      \n      // Toggle selection\n      setSelectedSlots(prev => {\n        const isAlreadySelected = prev.some(slot => \n          slot.start === eventData.start && slot.end === eventData.end\n        );\n        \n        if (isAlreadySelected) {\n          // Remove from selection\n          return prev.filter(slot => \n            !(slot.start === eventData.start && slot.end === eventData.end)\n          );\n        } else {\n          // Add to selection\n          return [...prev, eventData];\n        }\n      });\n      \n      // Update event color based on selection\n      const isSelected = !selectedSlots.some(slot => \n        slot.start === eventData.start && slot.end === eventData.end\n      );\n      \n      if (isSelected) {\n        event.setProp('backgroundColor', '#4caf50');\n        event.setProp('borderColor', '#2e7d32');\n        event.setProp('title', 'Selected Time');\n      } else {\n        event.setProp('backgroundColor', '#8bc34a');\n        event.setProp('borderColor', '#689f38');\n        event.setProp('title', 'Suggested Time');\n      }\n    } else {\n      // For existing events, show some details in a tooltip or alert\n      const eventTitle = event.title;\n      const eventTime = `${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()}`;\n      const calendarName = event.extendedProps.calendarName || 'Unknown Calendar';\n      \n      // Simple alert for demonstration - in a real app, you might want a tooltip or modal\n      alert(`Event: ${eventTitle}\\nTime: ${eventTime}\\nCalendar: ${calendarName}`);\n    }\n  };\n\n  const calculateTotalHours = () => {\n    let totalMinutes = 0;\n    selectedSlots.forEach(slot => {\n      const start = new Date(slot.start);\n      const end = new Date(slot.end);\n      const diffMinutes = (end - start) / (1000 * 60);\n      totalMinutes += diffMinutes;\n    });\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.floor(totalMinutes % 60);\n    return `${hours}h ${minutes}m`;\n  };\n\n  const handleScheduleSelected = async () => {\n    if (selectedSlots.length === 0) return;\n\n    setLoading(true);\n    try {\n      // Create multiple events, one for each selected slot\n      const promises = selectedSlots.map(slot => {\n        return axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n          selectedSlot: slot,\n          eventDetails\n        });\n      });\n      \n      const results = await Promise.all(promises);\n      const allSuccessful = results.every(r => r.data.success);\n      \n      if (allSuccessful) {\n        setMessage(`All ${selectedSlots.length} events scheduled successfully!`);\n        setText(\"\");\n        setShowCalendar(false);\n        setAvailableSlots([]);\n        setCalendarEvents([]);\n        setSelectedSlots([]);\n      } else {\n        setError(`Error: Some events could not be scheduled.`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFindDifferentTimes = () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowCalendar(false);\n    setAvailableSlots([]);\n    setCalendarEvents([]);\n    setSelectedSlots([]);\n  };\n  \n  const handleDatesSet = (dateInfo) => {\n    setDateRange({\n      start: dateInfo.start,\n      end: dateInfo.end\n    });\n  };\n  \n  const getAllEvents = () => {\n    console.log(\"Getting all events. Existing events:\", existingEvents.length);\n    \n    // Start with existing events, preserving their properties\n    const allEvents = [...existingEvents].map(event => {\n      console.log(\"Processing existing event:\", event.title || \"No title\");\n      \n      return {\n        ...event,\n        title: event.title || event.summary || \"Untitled Event\",\n        backgroundColor: event.backgroundColor || '#4285f4',\n        borderColor: event.borderColor || '#1a73e8',\n        textColor: event.textColor || '#ffffff',\n        display: 'block',\n        extendedProps: {\n          ...event.extendedProps,\n          existingEvent: true,\n          calendarName: event.calendarName || 'Calendar'\n        }\n      };\n    });\n    \n    // Add suggested slots with updated colors based on selection\n    if (calendarEvents.length > 0) {\n      console.log(\"Adding suggested slots:\", calendarEvents.length);\n      \n      calendarEvents.forEach(event => {\n        const isSelected = selectedSlots.some(slot => \n          slot.start === event.start && slot.end === event.end\n        );\n        \n        allEvents.push({\n          ...event,\n          backgroundColor: isSelected ? '#4caf50' : '#8bc34a',\n          borderColor: isSelected ? '#2e7d32' : '#689f38',\n          textColor: '#ffffff',\n          title: isSelected ? 'Selected Time' : 'Suggested Time',\n          display: 'block',\n          extendedProps: {\n            ...event.extendedProps,\n            suggestedSlot: true // Mark as suggested slot for the event click handler\n          }\n        });\n      });\n    }\n    \n    console.log(\"Total events to display:\", allEvents.length);\n    return allEvents;\n  };\n\n  return (\n    <div className=\"natural-language-form\">\n      <h2>Create Event with Natural Language</h2>\n\n      <div className=\"calendar-selection\">\n        <h3>Select Calendars to Monitor:</h3>\n        {calendars.length > 0 ? (\n          calendars.map((cal) => (\n            <label key={cal.id} style={{ display: 'block', margin: '5px 0' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedCalendars.some((selected) => selected.id === cal.id)}\n                onChange={() => handleCalendarSelect(cal)}\n                disabled={loading}\n              />\n              {cal.summary} {cal.primary ? '(Primary)' : ''}\n            </label>\n          ))\n        ) : (\n          <p>Loading calendars...</p>\n        )}\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n      {message && <div className=\"success-message\" dangerouslySetInnerHTML={{ __html: message }} />}\n\n      {!showCalendar ? (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Describe your event:</label>\n            <textarea\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              disabled={loading}\n              rows={3}\n              placeholder=\"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\"\n              required\n            />\n          </div>\n          <button type=\"submit\" disabled={loading} className=\"submit-button\">\n            {loading ? 'Processing...' : 'Submit'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"calendar-view\">\n          {selectedSlots.length > 0 && (\n            <div className=\"selection-summary\">\n              <p>Selected {selectedSlots.length} slot(s) - Total time: {calculateTotalHours()}</p>\n            </div>\n          )}\n          <div className=\"calendar-legend\">\n            {/* Legend for suggested/selected slots */}\n            <div className=\"legend-section\">\n              <div className=\"legend-item\">\n                <span className=\"legend-color suggested-event-color\"></span>\n                <span>Suggested Work Slots</span>\n              </div>\n              <div className=\"legend-item\">\n                <span className=\"legend-color selected-event-color\"></span>\n                <span>Selected Work Slots</span>\n              </div>\n            </div>\n            \n            {/* Legend for calendars */}\n            <div className=\"legend-section\">\n              <div className=\"legend-title\">Your Calendars:</div>\n              {selectedCalendars.map(cal => (\n                <div className=\"legend-item\" key={cal.id}>\n                  <span \n                    className=\"legend-color\" \n                    style={{ \n                      backgroundColor: cal.backgroundColor || getCalendarColor(cal.id),\n                      border: `1px solid ${cal.borderColor || getCalendarColor(cal.id, true)}`\n                    }}\n                  ></span>\n                  <span>{cal.summary}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"calendar-container\">\n            <FullCalendar\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              initialView=\"timeGridWeek\"\n              headerToolbar={{\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              }}\n              events={getAllEvents()}\n              eventClick={handleEventClick}\n              eventContent={renderEventContent}\n              height=\"800px\"\n              nowIndicator={false}\n              datesSet={handleDatesSet}\n              slotMinTime=\"00:00:00\"\n              slotMaxTime=\"24:00:00\"\n              eventTimeFormat={{\n                hour: 'numeric',\n                minute: '2-digit',\n                meridiem: 'short'\n              }}\n              slotLabelFormat={{\n                hour: 'numeric',\n                minute: '2-digit',\n                hour12: true\n              }}\n              allDaySlot={false}\n              eventDisplay=\"block\"\n              eventBackgroundColor=\"#4285f4\"\n              eventBorderColor=\"#3b78e7\"\n              eventTextColor=\"#ffffff\"\n              displayEventTime={true}\n              displayEventEnd={true}\n              forceEventDuration={true}\n              eventMinHeight={30}\n            />\n          </div>\n          <div className=\"calendar-actions\">\n            <button\n              onClick={handleScheduleSelected}\n              disabled={selectedSlots.length === 0 || loading}\n              className=\"confirm-button\"\n            >\n              {loading ? 'Scheduling...' : `Schedule ${selectedSlots.length} Selected Time${selectedSlots.length === 1 ? '' : 's'}`}\n            </button>\n            <button\n              onClick={handleFindDifferentTimes}\n              disabled={loading}\n              className=\"reject-button\"\n            >\n              Find Different Times\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderEventContent(eventInfo) {\n  // Determine if this is a suggested slot or existing event\n  const isSuggested = eventInfo.event.extendedProps?.suggestedSlot === true;\n  const isExisting = eventInfo.event.extendedProps?.existingEvent === true;\n  \n  // Debug event data\n  console.log(\"Rendering event:\", {\n    id: eventInfo.event.id,\n    title: eventInfo.event.title,\n    extendedProps: eventInfo.event.extendedProps,\n    isSuggested,\n    isExisting\n  });\n  \n  // Format the time more cleanly\n  let timeText = eventInfo.timeText || '';\n  if (timeText.includes('-')) {\n    // Simplify time range display\n    const times = timeText.split('-');\n    timeText = times[0].trim() + ' - ' + times[1].trim();\n  }\n  \n  // Get the calendar name if available\n  let calendarName = '';\n  if (isExisting && eventInfo.event.extendedProps?.calendarName) {\n    calendarName = `(${eventInfo.event.extendedProps.calendarName})`;\n  }\n  \n  // Get the event title with fallback options\n  const title = eventInfo.event.title || \n                eventInfo.event.extendedProps?.summary || \n                (isSuggested ? 'Suggested Time' : 'Event');\n  \n  return (\n    <div className={`event-content ${isSuggested ? 'suggested-event' : 'existing-event'}`}>\n      <b>{timeText}</b>\n      <i>{title} {calendarName}</i>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <script dangerouslySetInnerHTML={{\n        __html: `\n          // Directly define functions in the global scope\n          window.scheduleBreak = function(startTime, endTime) {\n            console.log(\"DOM scheduleBreak called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'break',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          window.scheduleTask = function(startTime, endTime) {\n            console.log(\"DOM scheduleTask called with:\", startTime, endTime);\n            if (window.dispatchEvent) {\n              window.dispatchEvent(\n                new CustomEvent('scheduleCalendarItem', {\n                  detail: {\n                    type: 'task',\n                    startTime,\n                    endTime\n                  }\n                })\n              );\n            }\n          };\n          \n          // Duration selector functions\n          window.showDurationSelector = function(startTime, endTime, selectorId, displayId, sliderId) {\n            console.log(\"Showing duration selector\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'block';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          window.updateDurationDisplay = function(minutes, displayId) {\n            console.log(\"Updating duration display to\", minutes, \"for\", displayId);\n            const durationDisplay = document.getElementById(displayId);\n            if (!durationDisplay) {\n              console.error(\"Duration display element not found:\", displayId);\n              return;\n            }\n            \n            let display = \"\";\n            if (minutes >= 60) {\n              const hours = Math.floor(minutes / 60);\n              const remainingMinutes = minutes % 60;\n              display = hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\n              if (remainingMinutes > 0) {\n                display += \" \" + remainingMinutes + \" min\";\n              }\n            } else {\n              display = minutes + \" min\";\n            }\n            durationDisplay.textContent = display;\n          };\n          \n          window.scheduleBreakWithDuration = function(startTime, endTime, sliderId) {\n            console.log(\"Scheduling break with duration using slider\", sliderId);\n            const durationSlider = document.getElementById(sliderId);\n            if (!durationSlider) {\n              console.error(\"Duration slider not found:\", sliderId);\n              return;\n            }\n            \n            const durationMinutes = durationSlider.value;\n            console.log(\"Duration selected:\", durationMinutes);\n            \n            const startDateTime = new Date();\n            const [startHours, startMinutes] = startTime.split(':').map(Number);\n            startDateTime.setHours(startHours, startMinutes, 0);\n            \n            // Calculate end time based on selected duration\n            const endDateTime = new Date(startDateTime);\n            endDateTime.setMinutes(startDateTime.getMinutes() + parseInt(durationMinutes));\n            \n            const formattedEndTime = endDateTime.getHours().toString().padStart(2, '0') + ':' + \n                                  endDateTime.getMinutes().toString().padStart(2, '0');\n            \n            console.log(\"Calculated end time:\", formattedEndTime);\n            \n            // Call the existing scheduleBreak function\n            window.scheduleBreak(startTime, formattedEndTime);\n          };\n          \n          window.cancelDurationSelection = function(selectorId) {\n            console.log(\"Canceling duration selection for\", selectorId);\n            const durationSelector = document.getElementById(selectorId);\n            if (durationSelector) {\n              durationSelector.style.display = 'none';\n            } else {\n              console.error(\"Duration selector element not found:\", selectorId);\n            }\n          };\n          \n          console.log(\"Inline scheduling functions defined and attached to window object\");\n        `\n      }} />\n      <style jsx=\"true\">{`\n        .success-message {\n          white-space: pre-line;\n          line-height: 1.5;\n          padding: 15px;\n          border-radius: 8px;\n          background-color: #f5f5f5;\n          margin: 15px 0;\n        }\n        \n        .success-message b {\n          font-weight: 600;\n        }\n        \n        .time-slot {\n          font-weight: 500;\n          color: #1a73e8;\n        }\n        \n        .free-time-card {\n          background-color: #e8f5e9;\n          border-radius: 8px;\n          padding: 15px;\n          margin: 10px 0;\n        }\n        \n        .free-time-actions {\n          display: flex;\n          gap: 10px;\n          margin-top: 15px;\n        }\n        \n        .action-button {\n          background-color: #4caf50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.3s;\n        }\n        \n        .action-button:hover {\n          background-color: #388e3c;\n        }\n        \n        .action-button.small {\n          padding: 4px 12px;\n          font-size: 12px;\n        }\n        \n        .slot-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 6px 10px;\n          margin: 8px 0;\n          background-color: #f0f8ff;\n          border-radius: 4px;\n        }\n        \n        .duration-selector {\n          background-color: #f9f9f9;\n          border-radius: 6px;\n          padding: 12px;\n          margin-top: 10px;\n          border: 1px solid #ddd;\n        }\n        \n        .duration-selector input[type=\"range\"] {\n          width: 100%;\n          margin: 10px 0;\n        }\n        \n        .action-button.secondary {\n          background-color: #9e9e9e;\n        }\n        \n        .action-button.secondary:hover {\n          background-color: #757575;\n        }\n      `}</style>\n      <NaturalLanguageForm />\n      <hr />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}