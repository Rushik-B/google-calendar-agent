{"ast":null,"code":"var _jsxFileName = \"/Users/Rushik/Documents/caledar-example/calendar-example-react copy 2/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Natural Language Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NaturalLanguageForm() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [eventDetails, setEventDetails] = useState({});\n  const [showTimeSelection, setShowTimeSelection] = useState(false);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  useEffect(() => {\n    const fetchCalendars = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/get-calendars');\n        if (response.data.success) {\n          setCalendars(response.data.calendars);\n          const primaryCal = response.data.calendars.find(cal => cal.primary);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        } else {\n          setError('Failed to fetch calendars.');\n        }\n      } catch (error) {\n        console.error('Error fetching calendars:', error);\n        setError('Error fetching calendars.');\n      }\n    };\n    fetchCalendars();\n  }, []);\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n            calendars: selectedCalendars\n          });\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n  const handleCalendarSelect = cal => {\n    setSelectedCalendars(prev => {\n      if (prev.some(selected => selected.id === cal.id)) {\n        return prev.filter(selected => selected.id !== cal.id);\n      } else {\n        return [...prev, cal];\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setShowTimeSelection(false);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n      if (response.data.success) {\n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setShowTimeSelection(true);\n          setMessage(\"Here are some available time slots. Please select one:\");\n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else {\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.message}`);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getEventSummaryFromText = text => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n  const handleSlotSelect = slot => {\n    setSelectedSlot(slot);\n  };\n  const handleConfirmSlot = async () => {\n    if (!selectedSlot) return;\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n        selectedSlot,\n        eventDetails\n      });\n      if (response.data.success) {\n        setMessage(`Event scheduled successfully! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n        setText(\"\");\n        setShowTimeSelection(false);\n        setAvailableSlots([]);\n        setSelectedSlot(null);\n      } else {\n        setError(`Error: ${response.data.message}`);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(`Error: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRejectSlots = async () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowTimeSelection(false);\n    setAvailableSlots([]);\n    setSelectedSlot(null);\n  };\n  const formatDateTime = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"natural-language-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Event with Natural Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Calendars to Monitor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), calendars.length > 0 ? calendars.map(cal => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCalendars.some(selected => selected.id === cal.id),\n          onChange: () => handleCalendarSelect(cal),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), cal.summary, \" \", cal.primary ? '(Primary)' : '']\n      }, cal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading calendars...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }, this), !showTimeSelection ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Describe your event:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          disabled: loading,\n          rows: 3,\n          placeholder: \"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"available-slots\",\n        children: availableSlots.length > 0 ? availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slot-item ${selectedSlot === slot ? 'selected' : ''}`,\n          onClick: () => handleSlotSelect(slot),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slot-time\",\n            children: [formatDateTime(slot.start), \" to \", formatDateTime(slot.end).split(', ')[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-slots\",\n          children: \"No available time slots found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmSlot,\n          disabled: !selectedSlot || loading,\n          className: \"confirm-button\",\n          children: loading ? 'Scheduling...' : 'Schedule This Time'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRejectSlots,\n          disabled: loading,\n          className: \"reject-button\",\n          children: \"Find Another Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(NaturalLanguageForm, \"xQHFwQvL9szMNw9qKZKG1nfGSPE=\");\n_c = NaturalLanguageForm;\nfunction CalendarForm() {\n  // Your original CalendarForm code goes here (unchanged)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-form\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Event Manually\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CalendarForm;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NaturalLanguageForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NaturalLanguageForm\");\n$RefreshReg$(_c2, \"CalendarForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NaturalLanguageForm","_s","text","setText","loading","setLoading","message","setMessage","error","setError","availableSlots","setAvailableSlots","selectedSlot","setSelectedSlot","eventDetails","setEventDetails","showTimeSelection","setShowTimeSelection","calendars","setCalendars","selectedCalendars","setSelectedCalendars","fetchCalendars","response","get","data","success","primaryCal","find","cal","primary","console","length","sendPreferences","post","handleCalendarSelect","prev","some","selected","id","filter","handleSubmit","e","preventDefault","trim","intent","summary","getEventSummaryFromText","description","calendarId","eventLink","_error$response","_error$response$data","firstSentence","split","substring","handleSlotSelect","slot","handleConfirmSlot","_error$response2","_error$response2$data","handleRejectSlots","formatDateTime","isoString","date","Date","toLocaleString","weekday","month","day","hour","minute","hour12","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","display","margin","type","checked","onChange","disabled","onSubmit","value","target","rows","placeholder","required","index","onClick","start","end","_c","CalendarForm","_c2","App","_c3","$RefreshReg$"],"sources":["/Users/Rushik/Documents/caledar-example/calendar-example-react copy 2/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Natural Language Form component\nfunction NaturalLanguageForm() {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [eventDetails, setEventDetails] = useState({});\n  const [showTimeSelection, setShowTimeSelection] = useState(false);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n\n  useEffect(() => {\n    const fetchCalendars = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/get-calendars');\n        if (response.data.success) {\n          setCalendars(response.data.calendars);\n          const primaryCal = response.data.calendars.find(cal => cal.primary);\n          if (primaryCal) {\n            setSelectedCalendars([primaryCal]);\n          }\n        } else {\n          setError('Failed to fetch calendars.');\n        }\n      } catch (error) {\n        console.error('Error fetching calendars:', error);\n        setError('Error fetching calendars.');\n      }\n    };\n    fetchCalendars();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCalendars.length > 0) {\n      const sendPreferences = async () => {\n        try {\n          await axios.post('http://127.0.0.1:5000/api/set-preferred-calendars', {\n            calendars: selectedCalendars\n          });\n        } catch (error) {\n          console.error('Error setting preferred calendars:', error);\n          setError('Error saving calendar preferences.');\n        }\n      };\n      sendPreferences();\n    }\n  }, [selectedCalendars]);\n\n  const handleCalendarSelect = (cal) => {\n    setSelectedCalendars((prev) => {\n      if (prev.some((selected) => selected.id === cal.id)) {\n        return prev.filter((selected) => selected.id !== cal.id);\n      } else {\n        return [...prev, cal];\n      }\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) return;\n\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    setAvailableSlots([]);\n    setShowTimeSelection(false);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/natural-language-event', {\n        text\n      });\n\n      if (response.data.success) {\n        if (response.data.intent === \"find_time\") {\n          setAvailableSlots(response.data.availableSlots);\n          setShowTimeSelection(true);\n          setMessage(\"Here are some available time slots. Please select one:\");\n          setEventDetails({\n            summary: getEventSummaryFromText(text),\n            description: text,\n            calendarId: \"primary\"\n          });\n        } else {\n          setMessage(`Event created! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n          setText(\"\");\n        }\n      } else {\n        setError(`Error: ${response.data.message}`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getEventSummaryFromText = (text) => {\n    const firstSentence = text.split('.')[0];\n    if (firstSentence.length <= 50) return firstSentence;\n    return firstSentence.substring(0, 50) + '...';\n  };\n\n  const handleSlotSelect = (slot) => {\n    setSelectedSlot(slot);\n  };\n\n  const handleConfirmSlot = async () => {\n    if (!selectedSlot) return;\n\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/schedule-selected-slot', {\n        selectedSlot,\n        eventDetails\n      });\n\n      if (response.data.success) {\n        setMessage(`Event scheduled successfully! ${response.data.eventLink ? `View it here: ${response.data.eventLink}` : ''}`);\n        setText(\"\");\n        setShowTimeSelection(false);\n        setAvailableSlots([]);\n        setSelectedSlot(null);\n      } else {\n        setError(`Error: ${response.data.message}`);\n      }\n    } catch (error) {\n      setError(`Error: ${error.response?.data?.message || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRejectSlots = async () => {\n    setMessage(\"Let's find another time. Please provide more details:\");\n    setShowTimeSelection(false);\n    setAvailableSlots([]);\n    setSelectedSlot(null);\n  };\n\n  const formatDateTime = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  return (\n    <div className=\"natural-language-form\">\n      <h2>Create Event with Natural Language</h2>\n\n      <div className=\"calendar-selection\">\n        <h3>Select Calendars to Monitor:</h3>\n        {calendars.length > 0 ? (\n          calendars.map((cal) => (\n            <label key={cal.id} style={{ display: 'block', margin: '5px 0' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedCalendars.some((selected) => selected.id === cal.id)}\n                onChange={() => handleCalendarSelect(cal)}\n                disabled={loading}\n              />\n              {cal.summary} {cal.primary ? '(Primary)' : ''}\n            </label>\n          ))\n        ) : (\n          <p>Loading calendars...</p>\n        )}\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n      {message && <div className=\"success-message\">{message}</div>}\n\n      {!showTimeSelection ? (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Describe your event:</label>\n            <textarea\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              disabled={loading}\n              rows={3}\n              placeholder=\"e.g., 'Schedule a team meeting next Tuesday at 2pm' or 'Find me time to work on my project tomorrow afternoon'\"\n              required\n            />\n          </div>\n          <button type=\"submit\" disabled={loading} className=\"submit-button\">\n            {loading ? 'Processing...' : 'Submit'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"time-selection\">\n          <div className=\"available-slots\">\n            {availableSlots.length > 0 ? (\n              availableSlots.map((slot, index) => (\n                <div\n                  key={index}\n                  className={`slot-item ${selectedSlot === slot ? 'selected' : ''}`}\n                  onClick={() => handleSlotSelect(slot)}\n                >\n                  <div className=\"slot-time\">\n                    {formatDateTime(slot.start)} to {formatDateTime(slot.end).split(', ')[1]}\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"no-slots\">No available time slots found.</div>\n            )}\n          </div>\n          <div className=\"slot-actions\">\n            <button\n              onClick={handleConfirmSlot}\n              disabled={!selectedSlot || loading}\n              className=\"confirm-button\"\n            >\n              {loading ? 'Scheduling...' : 'Schedule This Time'}\n            </button>\n            <button\n              onClick={handleRejectSlots}\n              disabled={loading}\n              className=\"reject-button\"\n            >\n              Find Another Time\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction CalendarForm() {\n  // Your original CalendarForm code goes here (unchanged)\n  return (\n    <div className=\"calendar-form\">\n      <h2>Create Event Manually</h2>\n      {/* Your existing calendar form */}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NaturalLanguageForm />\n      <hr />\n      <CalendarForm />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}